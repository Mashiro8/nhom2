
KTGK_ttcs_nhom2_.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004c0c  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000908  08004dac  08004dac  00014dac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080056b4  080056b4  00020078  2**0
                  CONTENTS
  4 .ARM          00000000  080056b4  080056b4  00020078  2**0
                  CONTENTS
  5 .preinit_array 00000000  080056b4  080056b4  00020078  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080056b4  080056b4  000156b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080056b8  080056b8  000156b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000078  20000000  080056bc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000142c  20000078  08005734  00020078  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200014a4  08005734  000214a4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020078  2**0
                  CONTENTS, READONLY
 12 .comment      000000be  00000000  00000000  000200a8  2**0
                  CONTENTS, READONLY
 13 .debug_info   00037d3e  00000000  00000000  00020166  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00002e3f  00000000  00000000  00057ea4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000db0  00000000  00000000  0005ace8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000188  00000000  00000000  0005ba98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000fe8a  00000000  00000000  0005bc20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000a788  00000000  00000000  0006baaa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0004e2d6  00000000  00000000  00076232  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00003b74  00000000  00000000  000c4508  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000048  00000000  00000000  000c807c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00000a18  00000000  00000000  000c80c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000078 	.word	0x20000078
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08004d94 	.word	0x08004d94

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	2000007c 	.word	0x2000007c
 80001dc:	08004d94 	.word	0x08004d94

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <bufInit>:
bufInit(
    void *pBuffer,
    buffqueue_p pQueue,
	uint8_t sizeofElement,
	uint16_t numberOfElement
) {
 8000280:	b580      	push	{r7, lr}
 8000282:	b084      	sub	sp, #16
 8000284:	af00      	add	r7, sp, #0
 8000286:	60f8      	str	r0, [r7, #12]
 8000288:	60b9      	str	r1, [r7, #8]
 800028a:	4611      	mov	r1, r2
 800028c:	461a      	mov	r2, r3
 800028e:	460b      	mov	r3, r1
 8000290:	71fb      	strb	r3, [r7, #7]
 8000292:	4613      	mov	r3, r2
 8000294:	80bb      	strh	r3, [r7, #4]
    pQueue->wSize = numberOfElement;
 8000296:	68bb      	ldr	r3, [r7, #8]
 8000298:	88ba      	ldrh	r2, [r7, #4]
 800029a:	801a      	strh	r2, [r3, #0]
    pQueue->byItemSize = sizeofElement;
 800029c:	68bb      	ldr	r3, [r7, #8]
 800029e:	79fa      	ldrb	r2, [r7, #7]
 80002a0:	711a      	strb	r2, [r3, #4]
    pQueue->pData = (uint8_t *)pBuffer;
 80002a2:	68bb      	ldr	r3, [r7, #8]
 80002a4:	68fa      	ldr	r2, [r7, #12]
 80002a6:	60da      	str	r2, [r3, #12]
    bufFlush(pQueue);
 80002a8:	68b8      	ldr	r0, [r7, #8]
 80002aa:	f000 f836 	bl	800031a <bufFlush>
}
 80002ae:	bf00      	nop
 80002b0:	3710      	adds	r7, #16
 80002b2:	46bd      	mov	sp, r7
 80002b4:	bd80      	pop	{r7, pc}

080002b6 <bufNumItems>:
 * @return The number of items in the ring buffer
 */
uint16_t
bufNumItems(
	buffqueue_p pQueue
) {
 80002b6:	b480      	push	{r7}
 80002b8:	b083      	sub	sp, #12
 80002ba:	af00      	add	r7, sp, #0
 80002bc:	6078      	str	r0, [r7, #4]
    return pQueue->wCountEle;
 80002be:	687b      	ldr	r3, [r7, #4]
 80002c0:	885b      	ldrh	r3, [r3, #2]
}
 80002c2:	4618      	mov	r0, r3
 80002c4:	370c      	adds	r7, #12
 80002c6:	46bd      	mov	sp, r7
 80002c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002cc:	4770      	bx	lr

080002ce <bufIsFull>:
 * @return 1 if full; 0 otherwise
 */
uint8_t
bufIsFull(
    buffqueue_p pQueue
) {
 80002ce:	b480      	push	{r7}
 80002d0:	b083      	sub	sp, #12
 80002d2:	af00      	add	r7, sp, #0
 80002d4:	6078      	str	r0, [r7, #4]
    return (pQueue->wCountEle >= pQueue->wSize);
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	885a      	ldrh	r2, [r3, #2]
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	881b      	ldrh	r3, [r3, #0]
 80002de:	429a      	cmp	r2, r3
 80002e0:	bf2c      	ite	cs
 80002e2:	2301      	movcs	r3, #1
 80002e4:	2300      	movcc	r3, #0
 80002e6:	b2db      	uxtb	r3, r3
}
 80002e8:	4618      	mov	r0, r3
 80002ea:	370c      	adds	r7, #12
 80002ec:	46bd      	mov	sp, r7
 80002ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002f2:	4770      	bx	lr

080002f4 <bufIsEmpty>:
 * @return 1 if empty; 0 otherwise
 */
uint8_t
bufIsEmpty(
    buffqueue_p pQueue
) {
 80002f4:	b480      	push	{r7}
 80002f6:	b083      	sub	sp, #12
 80002f8:	af00      	add	r7, sp, #0
 80002fa:	6078      	str	r0, [r7, #4]
    return (pQueue->wHeadIndex == pQueue->wTailIndex);
 80002fc:	687b      	ldr	r3, [r7, #4]
 80002fe:	88da      	ldrh	r2, [r3, #6]
 8000300:	687b      	ldr	r3, [r7, #4]
 8000302:	891b      	ldrh	r3, [r3, #8]
 8000304:	429a      	cmp	r2, r3
 8000306:	bf0c      	ite	eq
 8000308:	2301      	moveq	r3, #1
 800030a:	2300      	movne	r3, #0
 800030c:	b2db      	uxtb	r3, r3
}
 800030e:	4618      	mov	r0, r3
 8000310:	370c      	adds	r7, #12
 8000312:	46bd      	mov	sp, r7
 8000314:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000318:	4770      	bx	lr

0800031a <bufFlush>:
 * @retval None
 */
void
bufFlush(
    buffqueue_p pQueue
) {
 800031a:	b580      	push	{r7, lr}
 800031c:	b082      	sub	sp, #8
 800031e:	af00      	add	r7, sp, #0
 8000320:	6078      	str	r0, [r7, #4]
    pQueue->wHeadIndex = 0;
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	2200      	movs	r2, #0
 8000326:	80da      	strh	r2, [r3, #6]
    pQueue->wTailIndex = 0;
 8000328:	687b      	ldr	r3, [r7, #4]
 800032a:	2200      	movs	r2, #0
 800032c:	811a      	strh	r2, [r3, #8]
    pQueue->wCountEle = 0;
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	2200      	movs	r2, #0
 8000332:	805a      	strh	r2, [r3, #2]
    
    memsetl(pQueue->pData, 0, pQueue->wSize);
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	68d8      	ldr	r0, [r3, #12]
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	881b      	ldrh	r3, [r3, #0]
 800033c:	461a      	mov	r2, r3
 800033e:	2100      	movs	r1, #0
 8000340:	f000 f899 	bl	8000476 <memsetl>
}
 8000344:	bf00      	nop
 8000346:	3708      	adds	r7, #8
 8000348:	46bd      	mov	sp, r7
 800034a:	bd80      	pop	{r7, pc}

0800034c <bufEnDat>:
 */
uint8_t
bufEnDat(
    buffqueue_p pQueue,
	uint8_t *pReceiverData
) {
 800034c:	b580      	push	{r7, lr}
 800034e:	b084      	sub	sp, #16
 8000350:	af00      	add	r7, sp, #0
 8000352:	6078      	str	r0, [r7, #4]
 8000354:	6039      	str	r1, [r7, #0]
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000356:	b672      	cpsid	i
}
 8000358:	bf00      	nop
	__disable_irq();
    
    /* Place data in buffer */
    for (uint8_t i = 0; i < pQueue->byItemSize; i++) {
 800035a:	2300      	movs	r3, #0
 800035c:	73fb      	strb	r3, [r7, #15]
 800035e:	e021      	b.n	80003a4 <bufEnDat+0x58>
        pQueue->pData[pQueue->wHeadIndex] = pReceiverData[i];
 8000360:	7bfb      	ldrb	r3, [r7, #15]
 8000362:	683a      	ldr	r2, [r7, #0]
 8000364:	441a      	add	r2, r3
 8000366:	687b      	ldr	r3, [r7, #4]
 8000368:	68db      	ldr	r3, [r3, #12]
 800036a:	6879      	ldr	r1, [r7, #4]
 800036c:	88c9      	ldrh	r1, [r1, #6]
 800036e:	440b      	add	r3, r1
 8000370:	7812      	ldrb	r2, [r2, #0]
 8000372:	701a      	strb	r2, [r3, #0]
        pQueue->wHeadIndex = ((pQueue->wHeadIndex + 1)  & (pQueue->wSize - 1));
 8000374:	687b      	ldr	r3, [r7, #4]
 8000376:	88db      	ldrh	r3, [r3, #6]
 8000378:	3301      	adds	r3, #1
 800037a:	b29b      	uxth	r3, r3
 800037c:	b21a      	sxth	r2, r3
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	881b      	ldrh	r3, [r3, #0]
 8000382:	3b01      	subs	r3, #1
 8000384:	b29b      	uxth	r3, r3
 8000386:	b21b      	sxth	r3, r3
 8000388:	4013      	ands	r3, r2
 800038a:	b21b      	sxth	r3, r3
 800038c:	b29a      	uxth	r2, r3
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	80da      	strh	r2, [r3, #6]
        pQueue->wCountEle++;
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	885b      	ldrh	r3, [r3, #2]
 8000396:	3301      	adds	r3, #1
 8000398:	b29a      	uxth	r2, r3
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	805a      	strh	r2, [r3, #2]
    for (uint8_t i = 0; i < pQueue->byItemSize; i++) {
 800039e:	7bfb      	ldrb	r3, [r7, #15]
 80003a0:	3301      	adds	r3, #1
 80003a2:	73fb      	strb	r3, [r7, #15]
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	791b      	ldrb	r3, [r3, #4]
 80003a8:	7bfa      	ldrb	r2, [r7, #15]
 80003aa:	429a      	cmp	r2, r3
 80003ac:	d3d8      	bcc.n	8000360 <bufEnDat+0x14>
    }
    
    if (bufIsFull(pQueue)) {
 80003ae:	6878      	ldr	r0, [r7, #4]
 80003b0:	f7ff ff8d 	bl	80002ce <bufIsFull>
 80003b4:	4603      	mov	r3, r0
 80003b6:	2b00      	cmp	r3, #0
 80003b8:	d011      	beq.n	80003de <bufEnDat+0x92>
        /* Is going to overwrite the oldest byte */
        /* Increase tail index */
        pQueue->wTailIndex = (pQueue->wTailIndex + pQueue->byItemSize) & (pQueue->wSize - 1);
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	891a      	ldrh	r2, [r3, #8]
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	791b      	ldrb	r3, [r3, #4]
 80003c2:	b29b      	uxth	r3, r3
 80003c4:	4413      	add	r3, r2
 80003c6:	b29b      	uxth	r3, r3
 80003c8:	b21a      	sxth	r2, r3
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	881b      	ldrh	r3, [r3, #0]
 80003ce:	3b01      	subs	r3, #1
 80003d0:	b29b      	uxth	r3, r3
 80003d2:	b21b      	sxth	r3, r3
 80003d4:	4013      	ands	r3, r2
 80003d6:	b21b      	sxth	r3, r3
 80003d8:	b29a      	uxth	r2, r3
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	811a      	strh	r2, [r3, #8]
  __ASM volatile ("cpsie i" : : : "memory");
 80003de:	b662      	cpsie	i
}
 80003e0:	bf00      	nop
    }
    
    __enable_irq();
    return ERR_OK;
 80003e2:	2300      	movs	r3, #0
}
 80003e4:	4618      	mov	r0, r3
 80003e6:	3710      	adds	r7, #16
 80003e8:	46bd      	mov	sp, r7
 80003ea:	bd80      	pop	{r7, pc}

080003ec <bufDeDat>:
 */
uint8_t
bufDeDat(
    buffqueue_p pQueue,
	uint8_t *pBuffer
) {
 80003ec:	b580      	push	{r7, lr}
 80003ee:	b084      	sub	sp, #16
 80003f0:	af00      	add	r7, sp, #0
 80003f2:	6078      	str	r0, [r7, #4]
 80003f4:	6039      	str	r1, [r7, #0]
  __ASM volatile ("cpsid i" : : : "memory");
 80003f6:	b672      	cpsid	i
}
 80003f8:	bf00      	nop
	__disable_irq();
    
    if (bufIsEmpty(pQueue)) {
 80003fa:	6878      	ldr	r0, [r7, #4]
 80003fc:	f7ff ff7a 	bl	80002f4 <bufIsEmpty>
 8000400:	4603      	mov	r3, r0
 8000402:	2b00      	cmp	r3, #0
 8000404:	d006      	beq.n	8000414 <bufDeDat+0x28>
        /* No items */
        pQueue->wCountEle = 0;
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	2200      	movs	r2, #0
 800040a:	805a      	strh	r2, [r3, #2]
  __ASM volatile ("cpsie i" : : : "memory");
 800040c:	b662      	cpsie	i
}
 800040e:	bf00      	nop
        __enable_irq();
        return ERR_BUF_EMPTY;
 8000410:	2302      	movs	r3, #2
 8000412:	e02c      	b.n	800046e <bufDeDat+0x82>
    }
    
    for (uint8_t i = 0; i < pQueue->byItemSize; i++) {
 8000414:	2300      	movs	r3, #0
 8000416:	73fb      	strb	r3, [r7, #15]
 8000418:	e021      	b.n	800045e <bufDeDat+0x72>
        pBuffer[i] = pQueue->pData[pQueue->wTailIndex];
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	68db      	ldr	r3, [r3, #12]
 800041e:	687a      	ldr	r2, [r7, #4]
 8000420:	8912      	ldrh	r2, [r2, #8]
 8000422:	441a      	add	r2, r3
 8000424:	7bfb      	ldrb	r3, [r7, #15]
 8000426:	6839      	ldr	r1, [r7, #0]
 8000428:	440b      	add	r3, r1
 800042a:	7812      	ldrb	r2, [r2, #0]
 800042c:	701a      	strb	r2, [r3, #0]
        pQueue->wTailIndex = ((pQueue->wTailIndex + 1) & (pQueue->wSize - 1));
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	891b      	ldrh	r3, [r3, #8]
 8000432:	3301      	adds	r3, #1
 8000434:	b29b      	uxth	r3, r3
 8000436:	b21a      	sxth	r2, r3
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	881b      	ldrh	r3, [r3, #0]
 800043c:	3b01      	subs	r3, #1
 800043e:	b29b      	uxth	r3, r3
 8000440:	b21b      	sxth	r3, r3
 8000442:	4013      	ands	r3, r2
 8000444:	b21b      	sxth	r3, r3
 8000446:	b29a      	uxth	r2, r3
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	811a      	strh	r2, [r3, #8]
        pQueue->wCountEle--;
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	885b      	ldrh	r3, [r3, #2]
 8000450:	3b01      	subs	r3, #1
 8000452:	b29a      	uxth	r2, r3
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	805a      	strh	r2, [r3, #2]
    for (uint8_t i = 0; i < pQueue->byItemSize; i++) {
 8000458:	7bfb      	ldrb	r3, [r7, #15]
 800045a:	3301      	adds	r3, #1
 800045c:	73fb      	strb	r3, [r7, #15]
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	791b      	ldrb	r3, [r3, #4]
 8000462:	7bfa      	ldrb	r2, [r7, #15]
 8000464:	429a      	cmp	r2, r3
 8000466:	d3d8      	bcc.n	800041a <bufDeDat+0x2e>
  __ASM volatile ("cpsie i" : : : "memory");
 8000468:	b662      	cpsie	i
}
 800046a:	bf00      	nop
    }
    
    __enable_irq();
    return ERR_OK;
 800046c:	2300      	movs	r3, #0
}
 800046e:	4618      	mov	r0, r3
 8000470:	3710      	adds	r7, #16
 8000472:	46bd      	mov	sp, r7
 8000474:	bd80      	pop	{r7, pc}

08000476 <memsetl>:
void
memsetl(
	uint8_t *dst,
	uint8_t value,
	uint16_t size
) {
 8000476:	b480      	push	{r7}
 8000478:	b083      	sub	sp, #12
 800047a:	af00      	add	r7, sp, #0
 800047c:	6078      	str	r0, [r7, #4]
 800047e:	460b      	mov	r3, r1
 8000480:	70fb      	strb	r3, [r7, #3]
 8000482:	4613      	mov	r3, r2
 8000484:	803b      	strh	r3, [r7, #0]
    while (size--) {
 8000486:	e004      	b.n	8000492 <memsetl+0x1c>
        *dst++ = value;
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	1c5a      	adds	r2, r3, #1
 800048c:	607a      	str	r2, [r7, #4]
 800048e:	78fa      	ldrb	r2, [r7, #3]
 8000490:	701a      	strb	r2, [r3, #0]
    while (size--) {
 8000492:	883b      	ldrh	r3, [r7, #0]
 8000494:	1e5a      	subs	r2, r3, #1
 8000496:	803a      	strh	r2, [r7, #0]
 8000498:	2b00      	cmp	r3, #0
 800049a:	d1f5      	bne.n	8000488 <memsetl+0x12>
    }    
}
 800049c:	bf00      	nop
 800049e:	bf00      	nop
 80004a0:	370c      	adds	r7, #12
 80004a2:	46bd      	mov	sp, r7
 80004a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004a8:	4770      	bx	lr
	...

080004ac <LEDRED_init>:
static void_t buzzerControlSetStatus(GPIO_TypeDef *pGPIOx, u16_t wGPIO_Pin, u8_t byStatus);
static u8_t buttonReadStatus(GPIO_TypeDef *pGPIOx, u16_t wGPIO_Pin);

void_t delay();

static void LEDRED_init(void) {
 80004ac:	b580      	push	{r7, lr}
 80004ae:	b082      	sub	sp, #8
 80004b0:	af00      	add	r7, sp, #0
	// Khai bao bien thuoc kieu struct
	GPIO_InitTypeDef GPIO_InitStructure;

	// Cap xung clock hoat dong cho port A
	RCC_AHB1PeriphClockCmd(LEDREDControl_SetClock, ENABLE);
 80004b2:	2101      	movs	r1, #1
 80004b4:	2002      	movs	r0, #2
 80004b6:	f001 faab 	bl	8001a10 <RCC_AHB1PeriphClockCmd>

	// chon chan su dung chuc nang dieu khien led

	GPIO_InitStructure.GPIO_Pin = LEDRED_GPIO_PIN;
 80004ba:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80004be:	603b      	str	r3, [r7, #0]

	//Chon chan dieu khien led che do output

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 80004c0:	2301      	movs	r3, #1
 80004c2:	713b      	strb	r3, [r7, #4]

	// Toc do xu ly

	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80004c4:	2302      	movs	r3, #2
 80004c6:	717b      	strb	r3, [r7, #5]

	// PUSH PULL

	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 80004c8:	2300      	movs	r3, #0
 80004ca:	71bb      	strb	r3, [r7, #6]

	// trang thai ban dau tren chan la Pull down

	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 80004cc:	2302      	movs	r3, #2
 80004ce:	71fb      	strb	r3, [r7, #7]

	// khoi tao cac gia tri

	GPIO_Init(LEDRED_GPIO_PORT, &GPIO_InitStructure);
 80004d0:	463b      	mov	r3, r7
 80004d2:	4619      	mov	r1, r3
 80004d4:	4803      	ldr	r0, [pc, #12]	; (80004e4 <LEDRED_init+0x38>)
 80004d6:	f000 ff21 	bl	800131c <GPIO_Init>

}
 80004da:	bf00      	nop
 80004dc:	3708      	adds	r7, #8
 80004de:	46bd      	mov	sp, r7
 80004e0:	bd80      	pop	{r7, pc}
 80004e2:	bf00      	nop
 80004e4:	40020400 	.word	0x40020400

080004e8 <LEDBLUE_init>:

static void LEDBLUE_init(void) {
 80004e8:	b580      	push	{r7, lr}
 80004ea:	b082      	sub	sp, #8
 80004ec:	af00      	add	r7, sp, #0
	// Khai bao bien thuoc kieu struct
	GPIO_InitTypeDef GPIO_InitStructure;

	// Cap xung clock hoat dong cho port A
	RCC_AHB1PeriphClockCmd(LEDBLUEControl_SetClock, ENABLE);
 80004ee:	2101      	movs	r1, #1
 80004f0:	2001      	movs	r0, #1
 80004f2:	f001 fa8d 	bl	8001a10 <RCC_AHB1PeriphClockCmd>

	// chon chan su dung chuc nang dieu khien led

	GPIO_InitStructure.GPIO_Pin = LEDBLUE_GPIO_PIN;
 80004f6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80004fa:	603b      	str	r3, [r7, #0]

	//Chon chan dieu khien led che do output

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 80004fc:	2301      	movs	r3, #1
 80004fe:	713b      	strb	r3, [r7, #4]

	// Toc do xu ly

	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000500:	2302      	movs	r3, #2
 8000502:	717b      	strb	r3, [r7, #5]

	// PUSH PULL

	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000504:	2300      	movs	r3, #0
 8000506:	71bb      	strb	r3, [r7, #6]

	// trang thai ban dau tren chan la Pull down

	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 8000508:	2302      	movs	r3, #2
 800050a:	71fb      	strb	r3, [r7, #7]

	// khoi tao cac gia tri

	GPIO_Init(LEDBLUE_GPIO_PORT, &GPIO_InitStructure);
 800050c:	463b      	mov	r3, r7
 800050e:	4619      	mov	r1, r3
 8000510:	4803      	ldr	r0, [pc, #12]	; (8000520 <LEDBLUE_init+0x38>)
 8000512:	f000 ff03 	bl	800131c <GPIO_Init>

}
 8000516:	bf00      	nop
 8000518:	3708      	adds	r7, #8
 800051a:	46bd      	mov	sp, r7
 800051c:	bd80      	pop	{r7, pc}
 800051e:	bf00      	nop
 8000520:	40020000 	.word	0x40020000

08000524 <LEDGREEN_init>:

static void LEDGREEN_init(void) {
 8000524:	b580      	push	{r7, lr}
 8000526:	b082      	sub	sp, #8
 8000528:	af00      	add	r7, sp, #0
	// Khai bao bien thuoc kieu struct
	GPIO_InitTypeDef GPIO_InitStructure;

	// Cap xung clock hoat dong cho port A
	RCC_AHB1PeriphClockCmd(LEDGREENControl_SetClock, ENABLE);
 800052a:	2101      	movs	r1, #1
 800052c:	2001      	movs	r0, #1
 800052e:	f001 fa6f 	bl	8001a10 <RCC_AHB1PeriphClockCmd>

	// chon chan su dung chuc nang dieu khien led

	GPIO_InitStructure.GPIO_Pin = LEDGREEN_GPIO_PIN;
 8000532:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8000536:	603b      	str	r3, [r7, #0]

	//Chon chan dieu khien led che do output

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 8000538:	2301      	movs	r3, #1
 800053a:	713b      	strb	r3, [r7, #4]

	// Toc do xu ly

	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 800053c:	2302      	movs	r3, #2
 800053e:	717b      	strb	r3, [r7, #5]

	// PUSH PULL

	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000540:	2300      	movs	r3, #0
 8000542:	71bb      	strb	r3, [r7, #6]

	// trang thai ban dau tren chan la Pull down

	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 8000544:	2302      	movs	r3, #2
 8000546:	71fb      	strb	r3, [r7, #7]

	// khoi tao cac gia tri

	GPIO_Init(LEDGREEN_GPIO_PORT, &GPIO_InitStructure);
 8000548:	463b      	mov	r3, r7
 800054a:	4619      	mov	r1, r3
 800054c:	4803      	ldr	r0, [pc, #12]	; (800055c <LEDGREEN_init+0x38>)
 800054e:	f000 fee5 	bl	800131c <GPIO_Init>

}
 8000552:	bf00      	nop
 8000554:	3708      	adds	r7, #8
 8000556:	46bd      	mov	sp, r7
 8000558:	bd80      	pop	{r7, pc}
 800055a:	bf00      	nop
 800055c:	40020000 	.word	0x40020000

08000560 <LEDGREEN2_init>:
static void LEDGREEN2_init(void) {
 8000560:	b580      	push	{r7, lr}
 8000562:	b082      	sub	sp, #8
 8000564:	af00      	add	r7, sp, #0
	// Khai bao bien thuoc kieu struct
	GPIO_InitTypeDef GPIO_InitStructure;

	// Cap xung clock hoat dong cho port A
	RCC_AHB1PeriphClockCmd(LEDGREEN2Control_SetClock, ENABLE);
 8000566:	2101      	movs	r1, #1
 8000568:	2001      	movs	r0, #1
 800056a:	f001 fa51 	bl	8001a10 <RCC_AHB1PeriphClockCmd>

	// chon chan su dung chuc nang dieu khien led

	GPIO_InitStructure.GPIO_Pin = LEDGREEN2_GPIO_PIN;
 800056e:	2301      	movs	r3, #1
 8000570:	603b      	str	r3, [r7, #0]

	//Chon chan dieu khien led che do output

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 8000572:	2301      	movs	r3, #1
 8000574:	713b      	strb	r3, [r7, #4]

	// Toc do xu ly

	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000576:	2302      	movs	r3, #2
 8000578:	717b      	strb	r3, [r7, #5]

	// PUSH PULL

	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 800057a:	2300      	movs	r3, #0
 800057c:	71bb      	strb	r3, [r7, #6]

	// trang thai ban dau tren chan la Pull down

	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 800057e:	2302      	movs	r3, #2
 8000580:	71fb      	strb	r3, [r7, #7]

	// khoi tao cac gia tri

	GPIO_Init(LEDGREEN2_GPIO_PORT, &GPIO_InitStructure);
 8000582:	463b      	mov	r3, r7
 8000584:	4619      	mov	r1, r3
 8000586:	4803      	ldr	r0, [pc, #12]	; (8000594 <LEDGREEN2_init+0x34>)
 8000588:	f000 fec8 	bl	800131c <GPIO_Init>

}
 800058c:	bf00      	nop
 800058e:	3708      	adds	r7, #8
 8000590:	46bd      	mov	sp, r7
 8000592:	bd80      	pop	{r7, pc}
 8000594:	40020000 	.word	0x40020000

08000598 <LEDREDControl_SetStatus>:
static void LEDREDControl_SetStatus(GPIO_TypeDef *GPIOx, uint16_t GPIO_PIN,
		uint8_t Status) {
 8000598:	b480      	push	{r7}
 800059a:	b083      	sub	sp, #12
 800059c:	af00      	add	r7, sp, #0
 800059e:	6078      	str	r0, [r7, #4]
 80005a0:	460b      	mov	r3, r1
 80005a2:	807b      	strh	r3, [r7, #2]
 80005a4:	4613      	mov	r3, r2
 80005a6:	707b      	strb	r3, [r7, #1]
	// SET bit in BSRR Registers

	if (Status == 1) {
 80005a8:	787b      	ldrb	r3, [r7, #1]
 80005aa:	2b01      	cmp	r3, #1
 80005ac:	d102      	bne.n	80005b4 <LEDREDControl_SetStatus+0x1c>
		GPIOx->BSRRL = GPIO_PIN;
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	887a      	ldrh	r2, [r7, #2]
 80005b2:	831a      	strh	r2, [r3, #24]
	}
	if (Status == 0) {
 80005b4:	787b      	ldrb	r3, [r7, #1]
 80005b6:	2b00      	cmp	r3, #0
 80005b8:	d102      	bne.n	80005c0 <LEDREDControl_SetStatus+0x28>
		GPIOx->BSRRH = GPIO_PIN;
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	887a      	ldrh	r2, [r7, #2]
 80005be:	835a      	strh	r2, [r3, #26]
	}
}
 80005c0:	bf00      	nop
 80005c2:	370c      	adds	r7, #12
 80005c4:	46bd      	mov	sp, r7
 80005c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005ca:	4770      	bx	lr

080005cc <LEDBLUEControl_SetStatus>:
static void LEDBLUEControl_SetStatus(GPIO_TypeDef *GPIOx, uint16_t GPIO_PIN,
		uint8_t Status) {
 80005cc:	b480      	push	{r7}
 80005ce:	b083      	sub	sp, #12
 80005d0:	af00      	add	r7, sp, #0
 80005d2:	6078      	str	r0, [r7, #4]
 80005d4:	460b      	mov	r3, r1
 80005d6:	807b      	strh	r3, [r7, #2]
 80005d8:	4613      	mov	r3, r2
 80005da:	707b      	strb	r3, [r7, #1]
	// SET bit in BSRR Registers

	if (Status == 1) {
 80005dc:	787b      	ldrb	r3, [r7, #1]
 80005de:	2b01      	cmp	r3, #1
 80005e0:	d102      	bne.n	80005e8 <LEDBLUEControl_SetStatus+0x1c>
		GPIOx->BSRRL = GPIO_PIN;
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	887a      	ldrh	r2, [r7, #2]
 80005e6:	831a      	strh	r2, [r3, #24]
	}
	if (Status == 0) {
 80005e8:	787b      	ldrb	r3, [r7, #1]
 80005ea:	2b00      	cmp	r3, #0
 80005ec:	d102      	bne.n	80005f4 <LEDBLUEControl_SetStatus+0x28>
		GPIOx->BSRRH = GPIO_PIN;
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	887a      	ldrh	r2, [r7, #2]
 80005f2:	835a      	strh	r2, [r3, #26]
	}
}
 80005f4:	bf00      	nop
 80005f6:	370c      	adds	r7, #12
 80005f8:	46bd      	mov	sp, r7
 80005fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005fe:	4770      	bx	lr

08000600 <LEDGREENControl_SetStatus>:
static void LEDGREENControl_SetStatus(GPIO_TypeDef *GPIOx, uint16_t GPIO_PIN,
		uint8_t Status) {
 8000600:	b480      	push	{r7}
 8000602:	b083      	sub	sp, #12
 8000604:	af00      	add	r7, sp, #0
 8000606:	6078      	str	r0, [r7, #4]
 8000608:	460b      	mov	r3, r1
 800060a:	807b      	strh	r3, [r7, #2]
 800060c:	4613      	mov	r3, r2
 800060e:	707b      	strb	r3, [r7, #1]
	// SET bit in BSRR Registers

	if (Status == 1) {
 8000610:	787b      	ldrb	r3, [r7, #1]
 8000612:	2b01      	cmp	r3, #1
 8000614:	d102      	bne.n	800061c <LEDGREENControl_SetStatus+0x1c>
		GPIOx->BSRRL = GPIO_PIN;
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	887a      	ldrh	r2, [r7, #2]
 800061a:	831a      	strh	r2, [r3, #24]
	}
	if (Status == 0) {
 800061c:	787b      	ldrb	r3, [r7, #1]
 800061e:	2b00      	cmp	r3, #0
 8000620:	d102      	bne.n	8000628 <LEDGREENControl_SetStatus+0x28>
		GPIOx->BSRRH = GPIO_PIN;
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	887a      	ldrh	r2, [r7, #2]
 8000626:	835a      	strh	r2, [r3, #26]
	}
}
 8000628:	bf00      	nop
 800062a:	370c      	adds	r7, #12
 800062c:	46bd      	mov	sp, r7
 800062e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000632:	4770      	bx	lr

08000634 <delay>:
	}
	if (Status == 0) {
		GPIOx->BSRRH = GPIO_PIN;
	}
}
void_t delay() {
 8000634:	b480      	push	{r7}
 8000636:	b083      	sub	sp, #12
 8000638:	af00      	add	r7, sp, #0
	for (u32_t i = 0; i < 500000; i++);
 800063a:	2300      	movs	r3, #0
 800063c:	607b      	str	r3, [r7, #4]
 800063e:	e002      	b.n	8000646 <delay+0x12>
 8000640:	687b      	ldr	r3, [r7, #4]
 8000642:	3301      	adds	r3, #1
 8000644:	607b      	str	r3, [r7, #4]
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	4a04      	ldr	r2, [pc, #16]	; (800065c <delay+0x28>)
 800064a:	4293      	cmp	r3, r2
 800064c:	d9f8      	bls.n	8000640 <delay+0xc>
}
 800064e:	bf00      	nop
 8000650:	bf00      	nop
 8000652:	370c      	adds	r7, #12
 8000654:	46bd      	mov	sp, r7
 8000656:	f85d 7b04 	ldr.w	r7, [sp], #4
 800065a:	4770      	bx	lr
 800065c:	0007a11f 	.word	0x0007a11f

08000660 <button_Init>:
static void_t button_Init(void_t) {
 8000660:	b580      	push	{r7, lr}
 8000662:	b082      	sub	sp, #8
 8000664:	af00      	add	r7, sp, #0

	GPIO_InitTypeDef GPIO_InitStructure;



	RCC_AHB1PeriphClockCmd(BUTTONControl_SetClock, ENABLE);
 8000666:	2101      	movs	r1, #1
 8000668:	2002      	movs	r0, #2
 800066a:	f001 f9d1 	bl	8001a10 <RCC_AHB1PeriphClockCmd>


	GPIO_InitStructure.GPIO_Pin = BUTTON_GPIO_PIN;
 800066e:	2308      	movs	r3, #8
 8000670:	603b      	str	r3, [r7, #0]


	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 8000672:	2300      	movs	r3, #0
 8000674:	713b      	strb	r3, [r7, #4]


	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000676:	2302      	movs	r3, #2
 8000678:	717b      	strb	r3, [r7, #5]


	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 800067a:	2301      	movs	r3, #1
 800067c:	71fb      	strb	r3, [r7, #7]


	GPIO_Init(BUTTON_GPIO_PORT, &GPIO_InitStructure);
 800067e:	463b      	mov	r3, r7
 8000680:	4619      	mov	r1, r3
 8000682:	4803      	ldr	r0, [pc, #12]	; (8000690 <button_Init+0x30>)
 8000684:	f000 fe4a 	bl	800131c <GPIO_Init>
}
 8000688:	bf00      	nop
 800068a:	3708      	adds	r7, #8
 800068c:	46bd      	mov	sp, r7
 800068e:	bd80      	pop	{r7, pc}
 8000690:	40020400 	.word	0x40020400

08000694 <button4_Init>:
static void_t button4_Init(void_t) {
 8000694:	b580      	push	{r7, lr}
 8000696:	b082      	sub	sp, #8
 8000698:	af00      	add	r7, sp, #0

	GPIO_InitTypeDef GPIO_InitStructure;



	RCC_AHB1PeriphClockCmd(BUTTON4Control_SetClock, ENABLE);
 800069a:	2101      	movs	r1, #1
 800069c:	2002      	movs	r0, #2
 800069e:	f001 f9b7 	bl	8001a10 <RCC_AHB1PeriphClockCmd>


	GPIO_InitStructure.GPIO_Pin = BUTTON4_GPIO_PIN;
 80006a2:	2301      	movs	r3, #1
 80006a4:	603b      	str	r3, [r7, #0]


	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 80006a6:	2300      	movs	r3, #0
 80006a8:	713b      	strb	r3, [r7, #4]


	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80006aa:	2302      	movs	r3, #2
 80006ac:	717b      	strb	r3, [r7, #5]


	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 80006ae:	2301      	movs	r3, #1
 80006b0:	71fb      	strb	r3, [r7, #7]


	GPIO_Init(BUTTON4_GPIO_PORT, &GPIO_InitStructure);
 80006b2:	463b      	mov	r3, r7
 80006b4:	4619      	mov	r1, r3
 80006b6:	4803      	ldr	r0, [pc, #12]	; (80006c4 <button4_Init+0x30>)
 80006b8:	f000 fe30 	bl	800131c <GPIO_Init>
}
 80006bc:	bf00      	nop
 80006be:	3708      	adds	r7, #8
 80006c0:	46bd      	mov	sp, r7
 80006c2:	bd80      	pop	{r7, pc}
 80006c4:	40020400 	.word	0x40020400

080006c8 <button5_Init>:
static void_t button5_Init(void_t) {
 80006c8:	b580      	push	{r7, lr}
 80006ca:	b082      	sub	sp, #8
 80006cc:	af00      	add	r7, sp, #0

	GPIO_InitTypeDef GPIO_InitStructure;



	RCC_AHB1PeriphClockCmd(BUTTON5Control_SetClock, ENABLE);
 80006ce:	2101      	movs	r1, #1
 80006d0:	2002      	movs	r0, #2
 80006d2:	f001 f99d 	bl	8001a10 <RCC_AHB1PeriphClockCmd>


	GPIO_InitStructure.GPIO_Pin = BUTTON5_GPIO_PIN;
 80006d6:	2310      	movs	r3, #16
 80006d8:	603b      	str	r3, [r7, #0]


	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 80006da:	2300      	movs	r3, #0
 80006dc:	713b      	strb	r3, [r7, #4]


	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80006de:	2302      	movs	r3, #2
 80006e0:	717b      	strb	r3, [r7, #5]


	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 80006e2:	2301      	movs	r3, #1
 80006e4:	71fb      	strb	r3, [r7, #7]


	GPIO_Init(BUTTON5_GPIO_PORT, &GPIO_InitStructure);
 80006e6:	463b      	mov	r3, r7
 80006e8:	4619      	mov	r1, r3
 80006ea:	4803      	ldr	r0, [pc, #12]	; (80006f8 <button5_Init+0x30>)
 80006ec:	f000 fe16 	bl	800131c <GPIO_Init>
}
 80006f0:	bf00      	nop
 80006f2:	3708      	adds	r7, #8
 80006f4:	46bd      	mov	sp, r7
 80006f6:	bd80      	pop	{r7, pc}
 80006f8:	40020400 	.word	0x40020400

080006fc <button3_Init>:
static void_t button3_Init(void_t) {
 80006fc:	b580      	push	{r7, lr}
 80006fe:	b082      	sub	sp, #8
 8000700:	af00      	add	r7, sp, #0

	GPIO_InitTypeDef GPIO_InitStructure;



	RCC_AHB1PeriphClockCmd(BUTTON3Control_SetClock, ENABLE);
 8000702:	2101      	movs	r1, #1
 8000704:	2001      	movs	r0, #1
 8000706:	f001 f983 	bl	8001a10 <RCC_AHB1PeriphClockCmd>


	GPIO_InitStructure.GPIO_Pin = BUTTON3_GPIO_PIN;
 800070a:	2310      	movs	r3, #16
 800070c:	603b      	str	r3, [r7, #0]


	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 800070e:	2300      	movs	r3, #0
 8000710:	713b      	strb	r3, [r7, #4]


	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000712:	2302      	movs	r3, #2
 8000714:	717b      	strb	r3, [r7, #5]


	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 8000716:	2301      	movs	r3, #1
 8000718:	71fb      	strb	r3, [r7, #7]


	GPIO_Init(BUTTON3_GPIO_PORT, &GPIO_InitStructure);
 800071a:	463b      	mov	r3, r7
 800071c:	4619      	mov	r1, r3
 800071e:	4803      	ldr	r0, [pc, #12]	; (800072c <button3_Init+0x30>)
 8000720:	f000 fdfc 	bl	800131c <GPIO_Init>
}
 8000724:	bf00      	nop
 8000726:	3708      	adds	r7, #8
 8000728:	46bd      	mov	sp, r7
 800072a:	bd80      	pop	{r7, pc}
 800072c:	40020000 	.word	0x40020000

08000730 <ButtonRead_Status>:
static uint8_t ButtonRead_Status(GPIO_TypeDef *GPIOx, uint16_t GPIO_PIN) {
 8000730:	b480      	push	{r7}
 8000732:	b085      	sub	sp, #20
 8000734:	af00      	add	r7, sp, #0
 8000736:	6078      	str	r0, [r7, #4]
 8000738:	460b      	mov	r3, r1
 800073a:	807b      	strh	r3, [r7, #2]
	uint8_t Read_Pin = 0x00;
 800073c:	2300      	movs	r3, #0
 800073e:	73fb      	strb	r3, [r7, #15]

	if ((GPIOx->IDR & GPIO_PIN) != (uint32_t) Bit_RESET) {
 8000740:	687b      	ldr	r3, [r7, #4]
 8000742:	691a      	ldr	r2, [r3, #16]
 8000744:	887b      	ldrh	r3, [r7, #2]
 8000746:	4013      	ands	r3, r2
 8000748:	2b00      	cmp	r3, #0
 800074a:	d002      	beq.n	8000752 <ButtonRead_Status+0x22>
		Read_Pin = (uint8_t) Bit_SET;
 800074c:	2301      	movs	r3, #1
 800074e:	73fb      	strb	r3, [r7, #15]
 8000750:	e001      	b.n	8000756 <ButtonRead_Status+0x26>
	} else {
		Read_Pin = (uint8_t) Bit_RESET;
 8000752:	2300      	movs	r3, #0
 8000754:	73fb      	strb	r3, [r7, #15]
	}
	return Read_Pin;
 8000756:	7bfb      	ldrb	r3, [r7, #15]
}
 8000758:	4618      	mov	r0, r3
 800075a:	3714      	adds	r7, #20
 800075c:	46bd      	mov	sp, r7
 800075e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000762:	4770      	bx	lr

08000764 <Button4Read_Status>:
static uint8_t Button4Read_Status(GPIO_TypeDef *GPIOx, uint16_t GPIO_PIN) {
 8000764:	b480      	push	{r7}
 8000766:	b085      	sub	sp, #20
 8000768:	af00      	add	r7, sp, #0
 800076a:	6078      	str	r0, [r7, #4]
 800076c:	460b      	mov	r3, r1
 800076e:	807b      	strh	r3, [r7, #2]
	uint8_t Read_Pin = 0x00;
 8000770:	2300      	movs	r3, #0
 8000772:	73fb      	strb	r3, [r7, #15]

	if ((GPIOx->IDR & GPIO_PIN) != (uint32_t) Bit_RESET) {
 8000774:	687b      	ldr	r3, [r7, #4]
 8000776:	691a      	ldr	r2, [r3, #16]
 8000778:	887b      	ldrh	r3, [r7, #2]
 800077a:	4013      	ands	r3, r2
 800077c:	2b00      	cmp	r3, #0
 800077e:	d002      	beq.n	8000786 <Button4Read_Status+0x22>
		Read_Pin = (uint8_t) Bit_SET;
 8000780:	2301      	movs	r3, #1
 8000782:	73fb      	strb	r3, [r7, #15]
 8000784:	e001      	b.n	800078a <Button4Read_Status+0x26>
	} else {
		Read_Pin = (uint8_t) Bit_RESET;
 8000786:	2300      	movs	r3, #0
 8000788:	73fb      	strb	r3, [r7, #15]
	}
	return Read_Pin;
 800078a:	7bfb      	ldrb	r3, [r7, #15]
}
 800078c:	4618      	mov	r0, r3
 800078e:	3714      	adds	r7, #20
 8000790:	46bd      	mov	sp, r7
 8000792:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000796:	4770      	bx	lr

08000798 <buzzer_Init>:
	} else {
		Read_Pin = (uint8_t) Bit_RESET;
	}
	return Read_Pin;
}
static void_t buzzer_Init(void_t) {
 8000798:	b580      	push	{r7, lr}
 800079a:	b082      	sub	sp, #8
 800079c:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;

	RCC_AHB1PeriphClockCmd(BUZZERControl_SetClock, ENABLE);
 800079e:	2101      	movs	r1, #1
 80007a0:	2004      	movs	r0, #4
 80007a2:	f001 f935 	bl	8001a10 <RCC_AHB1PeriphClockCmd>


	GPIO_InitStructure.GPIO_Pin = BUZZER_GPIO_PIN;
 80007a6:	f44f 7300 	mov.w	r3, #512	; 0x200
 80007aa:	603b      	str	r3, [r7, #0]


	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 80007ac:	2301      	movs	r3, #1
 80007ae:	713b      	strb	r3, [r7, #4]

	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80007b0:	2302      	movs	r3, #2
 80007b2:	717b      	strb	r3, [r7, #5]

	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 80007b4:	2300      	movs	r3, #0
 80007b6:	71bb      	strb	r3, [r7, #6]


	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 80007b8:	2302      	movs	r3, #2
 80007ba:	71fb      	strb	r3, [r7, #7]


	GPIO_Init(BUZZER_GPIO_PORT, &GPIO_InitStructure);
 80007bc:	463b      	mov	r3, r7
 80007be:	4619      	mov	r1, r3
 80007c0:	4803      	ldr	r0, [pc, #12]	; (80007d0 <buzzer_Init+0x38>)
 80007c2:	f000 fdab 	bl	800131c <GPIO_Init>

}
 80007c6:	bf00      	nop
 80007c8:	3708      	adds	r7, #8
 80007ca:	46bd      	mov	sp, r7
 80007cc:	bd80      	pop	{r7, pc}
 80007ce:	bf00      	nop
 80007d0:	40020800 	.word	0x40020800

080007d4 <buzzerControlSetStatus>:
static void_t buzzerControlSetStatus(GPIO_TypeDef *pGPIOx, u16_t wGPIO_Pin,
		u8_t byStatus) {
 80007d4:	b480      	push	{r7}
 80007d6:	b083      	sub	sp, #12
 80007d8:	af00      	add	r7, sp, #0
 80007da:	6078      	str	r0, [r7, #4]
 80007dc:	460b      	mov	r3, r1
 80007de:	807b      	strh	r3, [r7, #2]
 80007e0:	4613      	mov	r3, r2
 80007e2:	707b      	strb	r3, [r7, #1]
	// SET bit in BSRR Registers

	if (byStatus == 1) {
 80007e4:	787b      	ldrb	r3, [r7, #1]
 80007e6:	2b01      	cmp	r3, #1
 80007e8:	d102      	bne.n	80007f0 <buzzerControlSetStatus+0x1c>
		pGPIOx->BSRRL = wGPIO_Pin;
 80007ea:	687b      	ldr	r3, [r7, #4]
 80007ec:	887a      	ldrh	r2, [r7, #2]
 80007ee:	831a      	strh	r2, [r3, #24]
	}
	if (byStatus == 0) {
 80007f0:	787b      	ldrb	r3, [r7, #1]
 80007f2:	2b00      	cmp	r3, #0
 80007f4:	d102      	bne.n	80007fc <buzzerControlSetStatus+0x28>
		pGPIOx->BSRRH = wGPIO_Pin;
 80007f6:	687b      	ldr	r3, [r7, #4]
 80007f8:	887a      	ldrh	r2, [r7, #2]
 80007fa:	835a      	strh	r2, [r3, #26]
	}
}
 80007fc:	bf00      	nop
 80007fe:	370c      	adds	r7, #12
 8000800:	46bd      	mov	sp, r7
 8000802:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000806:	4770      	bx	lr

08000808 <main>:

int main(void)
{
 8000808:	b580      	push	{r7, lr}
 800080a:	b082      	sub	sp, #8
 800080c:	af00      	add	r7, sp, #0
	AppCommon();
 800080e:	f000 f8c9 	bl	80009a4 <AppCommon>
	uint8_t status = 1;
 8000812:	2301      	movs	r3, #1
 8000814:	71fb      	strb	r3, [r7, #7]
	uint8_t stat =1;
 8000816:	2301      	movs	r3, #1
 8000818:	71bb      	strb	r3, [r7, #6]
	uint8_t stat2=1;
 800081a:	2301      	movs	r3, #1
 800081c:	717b      	strb	r3, [r7, #5]
	    buzzer_Init();
 800081e:	f7ff ffbb 	bl	8000798 <buzzer_Init>
		LEDRED_init();
 8000822:	f7ff fe43 	bl	80004ac <LEDRED_init>
		button_Init();
 8000826:	f7ff ff1b 	bl	8000660 <button_Init>
		LEDGREEN_init();
 800082a:	f7ff fe7b 	bl	8000524 <LEDGREEN_init>
		LEDBLUE_init();
 800082e:	f7ff fe5b 	bl	80004e8 <LEDBLUE_init>
		button4_Init();
 8000832:	f7ff ff2f 	bl	8000694 <button4_Init>
		button5_Init();
 8000836:	f7ff ff47 	bl	80006c8 <button5_Init>
		button3_Init();
 800083a:	f7ff ff5f 	bl	80006fc <button3_Init>
		LEDGREEN2_init();
 800083e:	f7ff fe8f 	bl	8000560 <LEDGREEN2_init>
	while(1)
	{
		processGetValueSensor();
 8000842:	f000 facd 	bl	8000de0 <processGetValueSensor>
		processTimerScheduler();
 8000846:	f001 fa4f 	bl	8001ce8 <processTimerScheduler>
		if (ButtonRead_Status(BUTTON_GPIO_PORT, BUTTON_GPIO_PIN) == 0) {
 800084a:	2108      	movs	r1, #8
 800084c:	4839      	ldr	r0, [pc, #228]	; (8000934 <main+0x12c>)
 800084e:	f7ff ff6f 	bl	8000730 <ButtonRead_Status>
 8000852:	4603      	mov	r3, r0
 8000854:	2b00      	cmp	r3, #0
 8000856:	d103      	bne.n	8000860 <main+0x58>
					delay();
 8000858:	f7ff feec 	bl	8000634 <delay>
					status=2;
 800085c:	2302      	movs	r3, #2
 800085e:	71fb      	strb	r3, [r7, #7]
				}
		if(Button4Read_Status(BUTTON4_GPIO_PORT, BUTTON4_GPIO_PIN) == 0)
 8000860:	2101      	movs	r1, #1
 8000862:	4834      	ldr	r0, [pc, #208]	; (8000934 <main+0x12c>)
 8000864:	f7ff ff7e 	bl	8000764 <Button4Read_Status>
 8000868:	4603      	mov	r3, r0
 800086a:	2b00      	cmp	r3, #0
 800086c:	d103      	bne.n	8000876 <main+0x6e>
		{
			delay();
 800086e:	f7ff fee1 	bl	8000634 <delay>
			status=1;
 8000872:	2301      	movs	r3, #1
 8000874:	71fb      	strb	r3, [r7, #7]
		}
				if (status == 2) {
 8000876:	79fb      	ldrb	r3, [r7, #7]
 8000878:	2b02      	cmp	r3, #2
 800087a:	d13f      	bne.n	80008fc <main+0xf4>
					delay();
 800087c:	f7ff feda 	bl	8000634 <delay>
					buzzerControlSetStatus(BUZZER_GPIO_PORT, BUZZER_GPIO_PIN, 1);
 8000880:	2201      	movs	r2, #1
 8000882:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000886:	482c      	ldr	r0, [pc, #176]	; (8000938 <main+0x130>)
 8000888:	f7ff ffa4 	bl	80007d4 <buzzerControlSetStatus>
					delay();
 800088c:	f7ff fed2 	bl	8000634 <delay>
					buzzerControlSetStatus(BUZZER_GPIO_PORT, BUZZER_GPIO_PIN, 0);
 8000890:	2200      	movs	r2, #0
 8000892:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000896:	4828      	ldr	r0, [pc, #160]	; (8000938 <main+0x130>)
 8000898:	f7ff ff9c 	bl	80007d4 <buzzerControlSetStatus>
					LEDREDControl_SetStatus(LEDRED_GPIO_PORT, LEDRED_GPIO_PIN, 1);
 800089c:	2201      	movs	r2, #1
 800089e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80008a2:	4824      	ldr	r0, [pc, #144]	; (8000934 <main+0x12c>)
 80008a4:	f7ff fe78 	bl	8000598 <LEDREDControl_SetStatus>
					delay();
 80008a8:	f7ff fec4 	bl	8000634 <delay>
					LEDREDControl_SetStatus(LEDRED_GPIO_PORT, LEDRED_GPIO_PIN, 0);
 80008ac:	2200      	movs	r2, #0
 80008ae:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80008b2:	4820      	ldr	r0, [pc, #128]	; (8000934 <main+0x12c>)
 80008b4:	f7ff fe70 	bl	8000598 <LEDREDControl_SetStatus>
					delay();
 80008b8:	f7ff febc 	bl	8000634 <delay>
					LEDBLUEControl_SetStatus(LEDBLUE_GPIO_PORT, LEDBLUE_GPIO_PIN, 1);
 80008bc:	2201      	movs	r2, #1
 80008be:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80008c2:	481e      	ldr	r0, [pc, #120]	; (800093c <main+0x134>)
 80008c4:	f7ff fe82 	bl	80005cc <LEDBLUEControl_SetStatus>
					delay();
 80008c8:	f7ff feb4 	bl	8000634 <delay>
					LEDBLUEControl_SetStatus(LEDBLUE_GPIO_PORT, LEDBLUE_GPIO_PIN, 0);
 80008cc:	2200      	movs	r2, #0
 80008ce:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80008d2:	481a      	ldr	r0, [pc, #104]	; (800093c <main+0x134>)
 80008d4:	f7ff fe7a 	bl	80005cc <LEDBLUEControl_SetStatus>
					delay();
 80008d8:	f7ff feac 	bl	8000634 <delay>
					LEDGREENControl_SetStatus(LEDGREEN_GPIO_PORT, LEDGREEN_GPIO_PIN, 1);
 80008dc:	2201      	movs	r2, #1
 80008de:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80008e2:	4816      	ldr	r0, [pc, #88]	; (800093c <main+0x134>)
 80008e4:	f7ff fe8c 	bl	8000600 <LEDGREENControl_SetStatus>
					delay();
 80008e8:	f7ff fea4 	bl	8000634 <delay>
					LEDGREENControl_SetStatus(LEDGREEN_GPIO_PORT, LEDGREEN_GPIO_PIN, 0);
 80008ec:	2200      	movs	r2, #0
 80008ee:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80008f2:	4812      	ldr	r0, [pc, #72]	; (800093c <main+0x134>)
 80008f4:	f7ff fe84 	bl	8000600 <LEDGREENControl_SetStatus>
					delay();
 80008f8:	f7ff fe9c 	bl	8000634 <delay>
				}
				if(status==1){
 80008fc:	79fb      	ldrb	r3, [r7, #7]
 80008fe:	2b01      	cmp	r3, #1
 8000900:	d19f      	bne.n	8000842 <main+0x3a>
					LEDREDControl_SetStatus(LEDRED_GPIO_PORT, LEDRED_GPIO_PIN, 0);
 8000902:	2200      	movs	r2, #0
 8000904:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000908:	480a      	ldr	r0, [pc, #40]	; (8000934 <main+0x12c>)
 800090a:	f7ff fe45 	bl	8000598 <LEDREDControl_SetStatus>
					LEDBLUEControl_SetStatus(LEDBLUE_GPIO_PORT, LEDBLUE_GPIO_PIN, 0);
 800090e:	2200      	movs	r2, #0
 8000910:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000914:	4809      	ldr	r0, [pc, #36]	; (800093c <main+0x134>)
 8000916:	f7ff fe59 	bl	80005cc <LEDBLUEControl_SetStatus>
					LEDGREENControl_SetStatus(LEDGREEN_GPIO_PORT, LEDGREEN_GPIO_PIN, 0);
 800091a:	2200      	movs	r2, #0
 800091c:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000920:	4806      	ldr	r0, [pc, #24]	; (800093c <main+0x134>)
 8000922:	f7ff fe6d 	bl	8000600 <LEDGREENControl_SetStatus>
					buzzerControlSetStatus(BUZZER_GPIO_PORT, BUZZER_GPIO_PIN, 0);
 8000926:	2200      	movs	r2, #0
 8000928:	f44f 7100 	mov.w	r1, #512	; 0x200
 800092c:	4802      	ldr	r0, [pc, #8]	; (8000938 <main+0x130>)
 800092e:	f7ff ff51 	bl	80007d4 <buzzerControlSetStatus>
		processGetValueSensor();
 8000932:	e786      	b.n	8000842 <main+0x3a>
 8000934:	40020400 	.word	0x40020400
 8000938:	40020800 	.word	0x40020800
 800093c:	40020000 	.word	0x40020000

08000940 <delay_ms>:
 * @func   delay_ms
 * @brief  delay milisecon
 * @param  None
 * @retval None
 */
void delay_ms(uint32_t ms) {
 8000940:	b580      	push	{r7, lr}
 8000942:	b084      	sub	sp, #16
 8000944:	af00      	add	r7, sp, #0
 8000946:	6078      	str	r0, [r7, #4]

	uint32_t startTime = GetMilSecTick(); //Lưu lại thời điểm hiện tại.
 8000948:	f001 f9c2 	bl	8001cd0 <GetMilSecTick>
 800094c:	60f8      	str	r0, [r7, #12]
	while (CalculatorTime(startTime, GetMilSecTick()) <= ms)
 800094e:	bf00      	nop
 8000950:	f001 f9be 	bl	8001cd0 <GetMilSecTick>
 8000954:	4603      	mov	r3, r0
 8000956:	4619      	mov	r1, r3
 8000958:	68f8      	ldr	r0, [r7, #12]
 800095a:	f000 f809 	bl	8000970 <CalculatorTime>
 800095e:	4602      	mov	r2, r0
 8000960:	687b      	ldr	r3, [r7, #4]
 8000962:	4293      	cmp	r3, r2
 8000964:	d2f4      	bcs.n	8000950 <delay_ms+0x10>
		;

//	Đợi cho đến khi hết khoảng time cài đặt

}
 8000966:	bf00      	nop
 8000968:	bf00      	nop
 800096a:	3710      	adds	r7, #16
 800096c:	46bd      	mov	sp, r7
 800096e:	bd80      	pop	{r7, pc}

08000970 <CalculatorTime>:
 * @func   CalculatorTime
 * @brief  Caculator time button
 * @param  None
 * @retval None
 */
uint32_t CalculatorTime(uint32_t dwTimeInit, uint32_t dwTimeCurrent) {
 8000970:	b480      	push	{r7}
 8000972:	b085      	sub	sp, #20
 8000974:	af00      	add	r7, sp, #0
 8000976:	6078      	str	r0, [r7, #4]
 8000978:	6039      	str	r1, [r7, #0]
	uint32_t dwTimeTotal;
	if (dwTimeCurrent >= dwTimeInit) {
 800097a:	683a      	ldr	r2, [r7, #0]
 800097c:	687b      	ldr	r3, [r7, #4]
 800097e:	429a      	cmp	r2, r3
 8000980:	d304      	bcc.n	800098c <CalculatorTime+0x1c>
		dwTimeTotal = dwTimeCurrent - dwTimeInit;
 8000982:	683a      	ldr	r2, [r7, #0]
 8000984:	687b      	ldr	r3, [r7, #4]
 8000986:	1ad3      	subs	r3, r2, r3
 8000988:	60fb      	str	r3, [r7, #12]
 800098a:	e004      	b.n	8000996 <CalculatorTime+0x26>
	} else {
		dwTimeTotal = 0xFFFFFFFFU + dwTimeCurrent - dwTimeInit;
 800098c:	683a      	ldr	r2, [r7, #0]
 800098e:	687b      	ldr	r3, [r7, #4]
 8000990:	1ad3      	subs	r3, r2, r3
 8000992:	3b01      	subs	r3, #1
 8000994:	60fb      	str	r3, [r7, #12]
	}
	return dwTimeTotal;
 8000996:	68fb      	ldr	r3, [r7, #12]

}
 8000998:	4618      	mov	r0, r3
 800099a:	3714      	adds	r7, #20
 800099c:	46bd      	mov	sp, r7
 800099e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009a2:	4770      	bx	lr

080009a4 <AppCommon>:
 * @brief  Init everything
 * @param  None
 * @retval None
 */
static void AppCommon()
{
 80009a4:	b580      	push	{r7, lr}
 80009a6:	b082      	sub	sp, #8
 80009a8:	af02      	add	r7, sp, #8
	SystemCoreClockUpdate();
 80009aa:	f000 fbeb 	bl	8001184 <SystemCoreClockUpdate>
	TimerInit();
 80009ae:	f001 f8bb 	bl	8001b28 <TimerInit>
    SPI1_Init();
 80009b2:	f000 f835 	bl	8000a20 <SPI1_Init>
    I2C_Init_temphumi();
 80009b6:	f000 f863 	bl	8000a80 <I2C_Init_temphumi>
    TemHumSensor_Init();
 80009ba:	f001 fa81 	bl	8001ec0 <TemHumSensor_Init>
    Ucglib4WireSWSPI_begin(&ucg, UCG_FONT_MODE_SOLID); //là hàm khởi tạo LCD.
 80009be:	2100      	movs	r1, #0
 80009c0:	4814      	ldr	r0, [pc, #80]	; (8000a14 <AppCommon+0x70>)
 80009c2:	f001 fc5f 	bl	8002284 <Ucglib4WireSWSPI_begin>
    ucg_ClearScreen(&ucg);
 80009c6:	4813      	ldr	r0, [pc, #76]	; (8000a14 <AppCommon+0x70>)
 80009c8:	f001 fca3 	bl	8002312 <ucg_ClearScreen>
    ucg_SetFont(&ucg, ucg_font_ncenR12_hr);
 80009cc:	4912      	ldr	r1, [pc, #72]	; (8000a18 <AppCommon+0x74>)
 80009ce:	4811      	ldr	r0, [pc, #68]	; (8000a14 <AppCommon+0x70>)
 80009d0:	f002 fdb8 	bl	8003544 <ucg_SetFont>
    ucg_SetColor(&ucg, 0, 255, 255, 255);
 80009d4:	23ff      	movs	r3, #255	; 0xff
 80009d6:	9300      	str	r3, [sp, #0]
 80009d8:	23ff      	movs	r3, #255	; 0xff
 80009da:	22ff      	movs	r2, #255	; 0xff
 80009dc:	2100      	movs	r1, #0
 80009de:	480d      	ldr	r0, [pc, #52]	; (8000a14 <AppCommon+0x70>)
 80009e0:	f002 fe8f 	bl	8003702 <ucg_SetColor>
    ucg_SetColor(&ucg, 1, 0, 0, 0);
 80009e4:	2300      	movs	r3, #0
 80009e6:	9300      	str	r3, [sp, #0]
 80009e8:	2300      	movs	r3, #0
 80009ea:	2200      	movs	r2, #0
 80009ec:	2101      	movs	r1, #1
 80009ee:	4809      	ldr	r0, [pc, #36]	; (8000a14 <AppCommon+0x70>)
 80009f0:	f002 fe87 	bl	8003702 <ucg_SetColor>
    ucg_SetRotate180(&ucg);
 80009f4:	4807      	ldr	r0, [pc, #28]	; (8000a14 <AppCommon+0x70>)
 80009f6:	f002 ff7f 	bl	80038f8 <ucg_SetRotate180>
    Scan_TimeSensor(5000);
 80009fa:	f241 3088 	movw	r0, #5000	; 0x1388
 80009fe:	f000 fb07 	bl	8001010 <Scan_TimeSensor>
    time_initial = GetMilSecTick();
 8000a02:	f001 f965 	bl	8001cd0 <GetMilSecTick>
 8000a06:	4603      	mov	r3, r0
 8000a08:	4a04      	ldr	r2, [pc, #16]	; (8000a1c <AppCommon+0x78>)
 8000a0a:	6013      	str	r3, [r2, #0]
}
 8000a0c:	bf00      	nop
 8000a0e:	46bd      	mov	sp, r7
 8000a10:	bd80      	pop	{r7, pc}
 8000a12:	bf00      	nop
 8000a14:	20000094 	.word	0x20000094
 8000a18:	08004ed8 	.word	0x08004ed8
 8000a1c:	20000148 	.word	0x20000148

08000a20 <SPI1_Init>:
 * @brief  Init SPI
 * @param  None
 * @retval None
 */
static void SPI1_Init(void)
{
 8000a20:	b580      	push	{r7, lr}
 8000a22:	b082      	sub	sp, #8
 8000a24:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;

	/* GPIOA, GPIOB and GPIOC Clocks enable */
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA | RCC_AHB1Periph_GPIOB | RCC_AHB1Periph_GPIOC, ENABLE);
 8000a26:	2101      	movs	r1, #1
 8000a28:	2007      	movs	r0, #7
 8000a2a:	f000 fff1 	bl	8001a10 <RCC_AHB1PeriphClockCmd>

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 8000a2e:	2301      	movs	r3, #1
 8000a30:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
 8000a32:	2303      	movs	r3, #3
 8000a34:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000a36:	2300      	movs	r3, #0
 8000a38:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 8000a3a:	2300      	movs	r3, #0
 8000a3c:	71fb      	strb	r3, [r7, #7]

	GPIO_InitStructure.GPIO_Pin = SPI1_SCK_PIN | SPI1_MOSI_PIN | SPI1_RS_PIN | SPI1_MODE_PIN;
 8000a3e:	f44f 7368 	mov.w	r3, #928	; 0x3a0
 8000a42:	603b      	str	r3, [r7, #0]
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 8000a44:	463b      	mov	r3, r7
 8000a46:	4619      	mov	r1, r3
 8000a48:	480a      	ldr	r0, [pc, #40]	; (8000a74 <SPI1_Init+0x54>)
 8000a4a:	f000 fc67 	bl	800131c <GPIO_Init>

	GPIO_InitStructure.GPIO_Pin = SPI1_CS_PIN | SPI1_ENABLE_PIN;
 8000a4e:	f44f 6388 	mov.w	r3, #1088	; 0x440
 8000a52:	603b      	str	r3, [r7, #0]
	GPIO_Init(GPIOB, &GPIO_InitStructure);
 8000a54:	463b      	mov	r3, r7
 8000a56:	4619      	mov	r1, r3
 8000a58:	4807      	ldr	r0, [pc, #28]	; (8000a78 <SPI1_Init+0x58>)
 8000a5a:	f000 fc5f 	bl	800131c <GPIO_Init>

	GPIO_InitStructure.GPIO_Pin = SPI1_RST_PIN;
 8000a5e:	2380      	movs	r3, #128	; 0x80
 8000a60:	603b      	str	r3, [r7, #0]
	GPIO_Init(GPIOC, &GPIO_InitStructure);
 8000a62:	463b      	mov	r3, r7
 8000a64:	4619      	mov	r1, r3
 8000a66:	4805      	ldr	r0, [pc, #20]	; (8000a7c <SPI1_Init+0x5c>)
 8000a68:	f000 fc58 	bl	800131c <GPIO_Init>
}
 8000a6c:	bf00      	nop
 8000a6e:	3708      	adds	r7, #8
 8000a70:	46bd      	mov	sp, r7
 8000a72:	bd80      	pop	{r7, pc}
 8000a74:	40020000 	.word	0x40020000
 8000a78:	40020400 	.word	0x40020400
 8000a7c:	40020800 	.word	0x40020800

08000a80 <I2C_Init_temphumi>:
 * @brief  Init I2C temp and humi
 * @param  None
 * @retval None
 */
static void I2C_Init_temphumi(void)
{
 8000a80:	b580      	push	{r7, lr}
 8000a82:	b086      	sub	sp, #24
 8000a84:	af00      	add	r7, sp, #0
// Initialization struct
	I2C_InitTypeDef I2C_InitStruct;
	GPIO_InitTypeDef GPIO_InitStruct;

	// Step 1: Initialize I2C
	RCC_APB1PeriphClockCmd(I2Cx_RCC, ENABLE);
 8000a86:	2101      	movs	r1, #1
 8000a88:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
 8000a8c:	f000 ffe0 	bl	8001a50 <RCC_APB1PeriphClockCmd>
	I2C_InitStruct.I2C_ClockSpeed = 400000;
 8000a90:	4b1d      	ldr	r3, [pc, #116]	; (8000b08 <I2C_Init_temphumi+0x88>)
 8000a92:	60bb      	str	r3, [r7, #8]
	I2C_InitStruct.I2C_Mode = I2C_Mode_I2C;
 8000a94:	2300      	movs	r3, #0
 8000a96:	81bb      	strh	r3, [r7, #12]
	I2C_InitStruct.I2C_DutyCycle = I2C_DutyCycle_2;
 8000a98:	f64b 73ff 	movw	r3, #49151	; 0xbfff
 8000a9c:	81fb      	strh	r3, [r7, #14]
	I2C_InitStruct.I2C_OwnAddress1 = 0x00;
 8000a9e:	2300      	movs	r3, #0
 8000aa0:	823b      	strh	r3, [r7, #16]
	I2C_InitStruct.I2C_Ack = I2C_Ack_Enable;
 8000aa2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000aa6:	827b      	strh	r3, [r7, #18]
	I2C_InitStruct.I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;
 8000aa8:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8000aac:	82bb      	strh	r3, [r7, #20]
	I2C_Init(I2Cx_SENSOR, &I2C_InitStruct);
 8000aae:	f107 0308 	add.w	r3, r7, #8
 8000ab2:	4619      	mov	r1, r3
 8000ab4:	4815      	ldr	r0, [pc, #84]	; (8000b0c <I2C_Init_temphumi+0x8c>)
 8000ab6:	f000 fd21 	bl	80014fc <I2C_Init>
	I2C_Cmd(I2Cx_SENSOR, ENABLE);
 8000aba:	2101      	movs	r1, #1
 8000abc:	4813      	ldr	r0, [pc, #76]	; (8000b0c <I2C_Init_temphumi+0x8c>)
 8000abe:	f000 fddf 	bl	8001680 <I2C_Cmd>

	// Step 2: Initialize GPIO as open drain alternate function
	RCC_AHB1PeriphClockCmd(I2C_GPIO_RCC, ENABLE);
 8000ac2:	2101      	movs	r1, #1
 8000ac4:	2002      	movs	r0, #2
 8000ac6:	f000 ffa3 	bl	8001a10 <RCC_AHB1PeriphClockCmd>
	GPIO_InitStruct.GPIO_Pin = I2C_PIN_SCL | I2C_PIN_SDA;
 8000aca:	f44f 7340 	mov.w	r3, #768	; 0x300
 8000ace:	603b      	str	r3, [r7, #0]
	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF;
 8000ad0:	2302      	movs	r3, #2
 8000ad2:	713b      	strb	r3, [r7, #4]
	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
 8000ad4:	2302      	movs	r3, #2
 8000ad6:	717b      	strb	r3, [r7, #5]
	GPIO_InitStruct.GPIO_OType = GPIO_OType_OD;
 8000ad8:	2301      	movs	r3, #1
 8000ada:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStruct.GPIO_PuPd  = GPIO_PuPd_NOPULL;
 8000adc:	2300      	movs	r3, #0
 8000ade:	71fb      	strb	r3, [r7, #7]
	GPIO_Init(I2C_GPIO, &GPIO_InitStruct);
 8000ae0:	463b      	mov	r3, r7
 8000ae2:	4619      	mov	r1, r3
 8000ae4:	480a      	ldr	r0, [pc, #40]	; (8000b10 <I2C_Init_temphumi+0x90>)
 8000ae6:	f000 fc19 	bl	800131c <GPIO_Init>

	/* Connect PXx to I2C_SCL */
	GPIO_PinAFConfig(I2C_GPIO, GPIO_PinSource8, GPIO_AF_I2C1);
 8000aea:	2204      	movs	r2, #4
 8000aec:	2108      	movs	r1, #8
 8000aee:	4808      	ldr	r0, [pc, #32]	; (8000b10 <I2C_Init_temphumi+0x90>)
 8000af0:	f000 fcba 	bl	8001468 <GPIO_PinAFConfig>

	/* Connect PXx to I2C_SDA */
	GPIO_PinAFConfig(I2C_GPIO, GPIO_PinSource9, GPIO_AF_I2C1);
 8000af4:	2204      	movs	r2, #4
 8000af6:	2109      	movs	r1, #9
 8000af8:	4805      	ldr	r0, [pc, #20]	; (8000b10 <I2C_Init_temphumi+0x90>)
 8000afa:	f000 fcb5 	bl	8001468 <GPIO_PinAFConfig>
}
 8000afe:	bf00      	nop
 8000b00:	3718      	adds	r7, #24
 8000b02:	46bd      	mov	sp, r7
 8000b04:	bd80      	pop	{r7, pc}
 8000b06:	bf00      	nop
 8000b08:	00061a80 	.word	0x00061a80
 8000b0c:	40005400 	.word	0x40005400
 8000b10:	40020400 	.word	0x40020400

08000b14 <I2C_start>:
 * @brief   Generate I2C start condition
 * @param   None
 * @retval  None
 */
void I2C_start(void)
{
 8000b14:	b580      	push	{r7, lr}
 8000b16:	af00      	add	r7, sp, #0
	// Wait until I2Cx is not busy anymore
	while (I2C_GetFlagStatus(I2Cx_SENSOR, I2C_FLAG_BUSY));
 8000b18:	bf00      	nop
 8000b1a:	f44f 3100 	mov.w	r1, #131072	; 0x20000
 8000b1e:	480a      	ldr	r0, [pc, #40]	; (8000b48 <I2C_start+0x34>)
 8000b20:	f000 fe9a 	bl	8001858 <I2C_GetFlagStatus>
 8000b24:	4603      	mov	r3, r0
 8000b26:	2b00      	cmp	r3, #0
 8000b28:	d1f7      	bne.n	8000b1a <I2C_start+0x6>

	// Generate start condition
	I2C_GenerateSTART(I2Cx_SENSOR, ENABLE);
 8000b2a:	2101      	movs	r1, #1
 8000b2c:	4806      	ldr	r0, [pc, #24]	; (8000b48 <I2C_start+0x34>)
 8000b2e:	f000 fdc7 	bl	80016c0 <I2C_GenerateSTART>

	// Wait for I2C EV5.
	// It means that the start condition has been correctly released
	// on the I2C bus (the bus is free, no other devices is communicating))
	while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_MODE_SELECT));
 8000b32:	bf00      	nop
 8000b34:	4905      	ldr	r1, [pc, #20]	; (8000b4c <I2C_start+0x38>)
 8000b36:	4804      	ldr	r0, [pc, #16]	; (8000b48 <I2C_start+0x34>)
 8000b38:	f000 fe5e 	bl	80017f8 <I2C_CheckEvent>
 8000b3c:	4603      	mov	r3, r0
 8000b3e:	2b00      	cmp	r3, #0
 8000b40:	d0f8      	beq.n	8000b34 <I2C_start+0x20>
}
 8000b42:	bf00      	nop
 8000b44:	bf00      	nop
 8000b46:	bd80      	pop	{r7, pc}
 8000b48:	40005400 	.word	0x40005400
 8000b4c:	00030001 	.word	0x00030001

08000b50 <I2C_address_direction>:
 * @brief   e
 * @param   None
 * @retval  None
 */
void I2C_address_direction(uint8_t address, uint8_t direction)
{
 8000b50:	b580      	push	{r7, lr}
 8000b52:	b082      	sub	sp, #8
 8000b54:	af00      	add	r7, sp, #0
 8000b56:	4603      	mov	r3, r0
 8000b58:	460a      	mov	r2, r1
 8000b5a:	71fb      	strb	r3, [r7, #7]
 8000b5c:	4613      	mov	r3, r2
 8000b5e:	71bb      	strb	r3, [r7, #6]
	// Send slave address
	I2C_Send7bitAddress(I2Cx_SENSOR, address, direction);
 8000b60:	79ba      	ldrb	r2, [r7, #6]
 8000b62:	79fb      	ldrb	r3, [r7, #7]
 8000b64:	4619      	mov	r1, r3
 8000b66:	480f      	ldr	r0, [pc, #60]	; (8000ba4 <I2C_address_direction+0x54>)
 8000b68:	f000 fdea 	bl	8001740 <I2C_Send7bitAddress>

	// Wait for I2C EV6
	// It means that a slave acknowledges his address
	if (direction == I2C_Direction_Transmitter)		// truyền
 8000b6c:	79bb      	ldrb	r3, [r7, #6]
 8000b6e:	2b00      	cmp	r3, #0
 8000b70:	d108      	bne.n	8000b84 <I2C_address_direction+0x34>
	{
		while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED));
 8000b72:	bf00      	nop
 8000b74:	490c      	ldr	r1, [pc, #48]	; (8000ba8 <I2C_address_direction+0x58>)
 8000b76:	480b      	ldr	r0, [pc, #44]	; (8000ba4 <I2C_address_direction+0x54>)
 8000b78:	f000 fe3e 	bl	80017f8 <I2C_CheckEvent>
 8000b7c:	4603      	mov	r3, r0
 8000b7e:	2b00      	cmp	r3, #0
 8000b80:	d0f8      	beq.n	8000b74 <I2C_address_direction+0x24>
	}
	else if (direction == I2C_Direction_Receiver)  // nhận
	{
		while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED));
	}
}
 8000b82:	e00a      	b.n	8000b9a <I2C_address_direction+0x4a>
	else if (direction == I2C_Direction_Receiver)  // nhận
 8000b84:	79bb      	ldrb	r3, [r7, #6]
 8000b86:	2b01      	cmp	r3, #1
 8000b88:	d107      	bne.n	8000b9a <I2C_address_direction+0x4a>
		while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED));
 8000b8a:	bf00      	nop
 8000b8c:	4907      	ldr	r1, [pc, #28]	; (8000bac <I2C_address_direction+0x5c>)
 8000b8e:	4805      	ldr	r0, [pc, #20]	; (8000ba4 <I2C_address_direction+0x54>)
 8000b90:	f000 fe32 	bl	80017f8 <I2C_CheckEvent>
 8000b94:	4603      	mov	r3, r0
 8000b96:	2b00      	cmp	r3, #0
 8000b98:	d0f8      	beq.n	8000b8c <I2C_address_direction+0x3c>
}
 8000b9a:	bf00      	nop
 8000b9c:	3708      	adds	r7, #8
 8000b9e:	46bd      	mov	sp, r7
 8000ba0:	bd80      	pop	{r7, pc}
 8000ba2:	bf00      	nop
 8000ba4:	40005400 	.word	0x40005400
 8000ba8:	00070082 	.word	0x00070082
 8000bac:	00030002 	.word	0x00030002

08000bb0 <I2C_transmit>:
 * @brief   Transmit one byte to I2C bus
 * @param   None
 * @retval  None
 */
void I2C_transmit(uint8_t byte)
{
 8000bb0:	b580      	push	{r7, lr}
 8000bb2:	b082      	sub	sp, #8
 8000bb4:	af00      	add	r7, sp, #0
 8000bb6:	4603      	mov	r3, r0
 8000bb8:	71fb      	strb	r3, [r7, #7]
	// Send data byte
	I2C_SendData(I2Cx_SENSOR, byte);
 8000bba:	79fb      	ldrb	r3, [r7, #7]
 8000bbc:	4619      	mov	r1, r3
 8000bbe:	4808      	ldr	r0, [pc, #32]	; (8000be0 <I2C_transmit+0x30>)
 8000bc0:	f000 fdfc 	bl	80017bc <I2C_SendData>
	// Wait for I2C EV8_2.
	// It means that the data has been physically shifted out and
	// output on the bus)
	while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_BYTE_TRANSMITTED));
 8000bc4:	bf00      	nop
 8000bc6:	4907      	ldr	r1, [pc, #28]	; (8000be4 <I2C_transmit+0x34>)
 8000bc8:	4805      	ldr	r0, [pc, #20]	; (8000be0 <I2C_transmit+0x30>)
 8000bca:	f000 fe15 	bl	80017f8 <I2C_CheckEvent>
 8000bce:	4603      	mov	r3, r0
 8000bd0:	2b00      	cmp	r3, #0
 8000bd2:	d0f8      	beq.n	8000bc6 <I2C_transmit+0x16>
}
 8000bd4:	bf00      	nop
 8000bd6:	bf00      	nop
 8000bd8:	3708      	adds	r7, #8
 8000bda:	46bd      	mov	sp, r7
 8000bdc:	bd80      	pop	{r7, pc}
 8000bde:	bf00      	nop
 8000be0:	40005400 	.word	0x40005400
 8000be4:	00070084 	.word	0x00070084

08000be8 <I2C_stop>:
 * @brief   Generate I2C stop condition
 * @param   None
 * @retval  None
 */
void I2C_stop(void)
{
 8000be8:	b580      	push	{r7, lr}
 8000bea:	af00      	add	r7, sp, #0
	// Generate I2C stop condition
	I2C_GenerateSTOP(I2Cx_SENSOR, ENABLE);
 8000bec:	2101      	movs	r1, #1
 8000bee:	4802      	ldr	r0, [pc, #8]	; (8000bf8 <I2C_stop+0x10>)
 8000bf0:	f000 fd86 	bl	8001700 <I2C_GenerateSTOP>
}
 8000bf4:	bf00      	nop
 8000bf6:	bd80      	pop	{r7, pc}
 8000bf8:	40005400 	.word	0x40005400

08000bfc <I2C_receive_nack>:
 * @brief   receive data
 * @param   None
 * @retval  None
 */
uint8_t I2C_receive_nack(void)
{
 8000bfc:	b580      	push	{r7, lr}
 8000bfe:	af00      	add	r7, sp, #0
	// Disable ACK of received data
	I2C_AcknowledgeConfig(I2Cx_SENSOR, DISABLE);
 8000c00:	2100      	movs	r1, #0
 8000c02:	4808      	ldr	r0, [pc, #32]	; (8000c24 <I2C_receive_nack+0x28>)
 8000c04:	f000 fdba 	bl	800177c <I2C_AcknowledgeConfig>
	// Wait for I2C EV7
	// It means that the data has been received in I2C data register
	while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_BYTE_RECEIVED));
 8000c08:	bf00      	nop
 8000c0a:	4907      	ldr	r1, [pc, #28]	; (8000c28 <I2C_receive_nack+0x2c>)
 8000c0c:	4805      	ldr	r0, [pc, #20]	; (8000c24 <I2C_receive_nack+0x28>)
 8000c0e:	f000 fdf3 	bl	80017f8 <I2C_CheckEvent>
 8000c12:	4603      	mov	r3, r0
 8000c14:	2b00      	cmp	r3, #0
 8000c16:	d0f8      	beq.n	8000c0a <I2C_receive_nack+0xe>

	// Read and return data byte from I2C data register
	return I2C_ReceiveData(I2Cx_SENSOR);
 8000c18:	4802      	ldr	r0, [pc, #8]	; (8000c24 <I2C_receive_nack+0x28>)
 8000c1a:	f000 fddf 	bl	80017dc <I2C_ReceiveData>
 8000c1e:	4603      	mov	r3, r0
}
 8000c20:	4618      	mov	r0, r3
 8000c22:	bd80      	pop	{r7, pc}
 8000c24:	40005400 	.word	0x40005400
 8000c28:	00030040 	.word	0x00030040

08000c2c <I2C_receive_ack>:
 * @brief   receive data
 * @param   None
 * @retval  None
 */
uint8_t I2C_receive_ack(void)
{
 8000c2c:	b580      	push	{r7, lr}
 8000c2e:	af00      	add	r7, sp, #0
	// Enable ACK of received data
	I2C_AcknowledgeConfig(I2Cx_SENSOR, ENABLE);
 8000c30:	2101      	movs	r1, #1
 8000c32:	4808      	ldr	r0, [pc, #32]	; (8000c54 <I2C_receive_ack+0x28>)
 8000c34:	f000 fda2 	bl	800177c <I2C_AcknowledgeConfig>
	// Wait for I2C EV7
	// It means that the data has been received in I2C data register
	while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_BYTE_RECEIVED));
 8000c38:	bf00      	nop
 8000c3a:	4907      	ldr	r1, [pc, #28]	; (8000c58 <I2C_receive_ack+0x2c>)
 8000c3c:	4805      	ldr	r0, [pc, #20]	; (8000c54 <I2C_receive_ack+0x28>)
 8000c3e:	f000 fddb 	bl	80017f8 <I2C_CheckEvent>
 8000c42:	4603      	mov	r3, r0
 8000c44:	2b00      	cmp	r3, #0
 8000c46:	d0f8      	beq.n	8000c3a <I2C_receive_ack+0xe>

	// Read and return data byte from I2C data register
	return I2C_ReceiveData(I2Cx_SENSOR);
 8000c48:	4802      	ldr	r0, [pc, #8]	; (8000c54 <I2C_receive_ack+0x28>)
 8000c4a:	f000 fdc7 	bl	80017dc <I2C_ReceiveData>
 8000c4e:	4603      	mov	r3, r0
}
 8000c50:	4618      	mov	r0, r3
 8000c52:	bd80      	pop	{r7, pc}
 8000c54:	40005400 	.word	0x40005400
 8000c58:	00030040 	.word	0x00030040

08000c5c <TemHumSensor_readRegister>:
		uint8_t address,	// Địa chỉ cảm biến.
	    uint8_t* pAddressRegister, // Địa chỉ của thanh ghi chứa dữ liệu nhiệt độ, độ ẩm.
	    uint8_t* pDataRegister, // Dữ liệu đọc được từ thanh ghi tương ứng.
	    uint8_t Length_Data, //Độ dài Dữ liệu đọc được từ thanh ghi tương ứng.
	    uint16_t delay)	//Dữ liệu đọc được từ thanh ghi tương ứng.
{
 8000c5c:	b590      	push	{r4, r7, lr}
 8000c5e:	b087      	sub	sp, #28
 8000c60:	af00      	add	r7, sp, #0
 8000c62:	60b9      	str	r1, [r7, #8]
 8000c64:	607a      	str	r2, [r7, #4]
 8000c66:	461a      	mov	r2, r3
 8000c68:	4603      	mov	r3, r0
 8000c6a:	73fb      	strb	r3, [r7, #15]
 8000c6c:	4613      	mov	r3, r2
 8000c6e:	73bb      	strb	r3, [r7, #14]
	uint8_t LengthCmd = pAddressRegister[0];
 8000c70:	68bb      	ldr	r3, [r7, #8]
 8000c72:	781b      	ldrb	r3, [r3, #0]
 8000c74:	757b      	strb	r3, [r7, #21]

	I2C_start();	// conditon start
 8000c76:	f7ff ff4d 	bl	8000b14 <I2C_start>
	I2C_address_direction(address << 1, I2C_Direction_Transmitter); // send slave address - Transmit
 8000c7a:	7bfb      	ldrb	r3, [r7, #15]
 8000c7c:	005b      	lsls	r3, r3, #1
 8000c7e:	b2db      	uxtb	r3, r3
 8000c80:	2100      	movs	r1, #0
 8000c82:	4618      	mov	r0, r3
 8000c84:	f7ff ff64 	bl	8000b50 <I2C_address_direction>

	for (uint8_t i = 1; i < LengthCmd; i++) {
 8000c88:	2301      	movs	r3, #1
 8000c8a:	75fb      	strb	r3, [r7, #23]
 8000c8c:	e009      	b.n	8000ca2 <TemHumSensor_readRegister+0x46>
		I2C_transmit(pAddressRegister[i]);		// Send Data from register
 8000c8e:	7dfb      	ldrb	r3, [r7, #23]
 8000c90:	68ba      	ldr	r2, [r7, #8]
 8000c92:	4413      	add	r3, r2
 8000c94:	781b      	ldrb	r3, [r3, #0]
 8000c96:	4618      	mov	r0, r3
 8000c98:	f7ff ff8a 	bl	8000bb0 <I2C_transmit>
	for (uint8_t i = 1; i < LengthCmd; i++) {
 8000c9c:	7dfb      	ldrb	r3, [r7, #23]
 8000c9e:	3301      	adds	r3, #1
 8000ca0:	75fb      	strb	r3, [r7, #23]
 8000ca2:	7dfa      	ldrb	r2, [r7, #23]
 8000ca4:	7d7b      	ldrb	r3, [r7, #21]
 8000ca6:	429a      	cmp	r2, r3
 8000ca8:	d3f1      	bcc.n	8000c8e <TemHumSensor_readRegister+0x32>
	}

    if (delay > 0) {
 8000caa:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8000cac:	2b00      	cmp	r3, #0
 8000cae:	d003      	beq.n	8000cb8 <TemHumSensor_readRegister+0x5c>
        delay_ms(delay);
 8000cb0:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8000cb2:	4618      	mov	r0, r3
 8000cb4:	f7ff fe44 	bl	8000940 <delay_ms>
    }

	I2C_stop();// condition stop
 8000cb8:	f7ff ff96 	bl	8000be8 <I2C_stop>

	I2C_start(); // condition start
 8000cbc:	f7ff ff2a 	bl	8000b14 <I2C_start>
	I2C_address_direction(address << 1, I2C_Direction_Receiver); // send slave address - Received
 8000cc0:	7bfb      	ldrb	r3, [r7, #15]
 8000cc2:	005b      	lsls	r3, r3, #1
 8000cc4:	b2db      	uxtb	r3, r3
 8000cc6:	2101      	movs	r1, #1
 8000cc8:	4618      	mov	r0, r3
 8000cca:	f7ff ff41 	bl	8000b50 <I2C_address_direction>

	for (uint8_t i = 0; i < Length_Data; i++)
 8000cce:	2300      	movs	r3, #0
 8000cd0:	75bb      	strb	r3, [r7, #22]
 8000cd2:	e016      	b.n	8000d02 <TemHumSensor_readRegister+0xa6>
	{
		if (i == (Length_Data - 1))
 8000cd4:	7dba      	ldrb	r2, [r7, #22]
 8000cd6:	7bbb      	ldrb	r3, [r7, #14]
 8000cd8:	3b01      	subs	r3, #1
 8000cda:	429a      	cmp	r2, r3
 8000cdc:	d107      	bne.n	8000cee <TemHumSensor_readRegister+0x92>
		{
			pDataRegister[i] = I2C_receive_nack();  // 	NA
 8000cde:	7dbb      	ldrb	r3, [r7, #22]
 8000ce0:	687a      	ldr	r2, [r7, #4]
 8000ce2:	18d4      	adds	r4, r2, r3
 8000ce4:	f7ff ff8a 	bl	8000bfc <I2C_receive_nack>
 8000ce8:	4603      	mov	r3, r0
 8000cea:	7023      	strb	r3, [r4, #0]
 8000cec:	e006      	b.n	8000cfc <TemHumSensor_readRegister+0xa0>
		}
		else
		{
			pDataRegister[i] = I2C_receive_ack();   // A
 8000cee:	7dbb      	ldrb	r3, [r7, #22]
 8000cf0:	687a      	ldr	r2, [r7, #4]
 8000cf2:	18d4      	adds	r4, r2, r3
 8000cf4:	f7ff ff9a 	bl	8000c2c <I2C_receive_ack>
 8000cf8:	4603      	mov	r3, r0
 8000cfa:	7023      	strb	r3, [r4, #0]
	for (uint8_t i = 0; i < Length_Data; i++)
 8000cfc:	7dbb      	ldrb	r3, [r7, #22]
 8000cfe:	3301      	adds	r3, #1
 8000d00:	75bb      	strb	r3, [r7, #22]
 8000d02:	7dba      	ldrb	r2, [r7, #22]
 8000d04:	7bbb      	ldrb	r3, [r7, #14]
 8000d06:	429a      	cmp	r2, r3
 8000d08:	d3e4      	bcc.n	8000cd4 <TemHumSensor_readRegister+0x78>
		}
	}
	I2C_stop();
 8000d0a:	f7ff ff6d 	bl	8000be8 <I2C_stop>

}
 8000d0e:	bf00      	nop
 8000d10:	371c      	adds	r7, #28
 8000d12:	46bd      	mov	sp, r7
 8000d14:	bd90      	pop	{r4, r7, pc}
	...

08000d18 <GetTemp_Sensor>:
 * @brief   Get value temperature
 * @param   None
 * @retval  Temperature
 */
uint32_t GetTemp_Sensor(void)
{
 8000d18:	b580      	push	{r7, lr}
 8000d1a:	b086      	sub	sp, #24
 8000d1c:	af02      	add	r7, sp, #8
	uint32_t RT;
    uint8_t pRT[3] = { 0 };	// pRT[0]: MSB		pRT[1]: LSB
 8000d1e:	4b15      	ldr	r3, [pc, #84]	; (8000d74 <GetTemp_Sensor+0x5c>)
 8000d20:	881b      	ldrh	r3, [r3, #0]
 8000d22:	813b      	strh	r3, [r7, #8]
 8000d24:	2300      	movs	r3, #0
 8000d26:	72bb      	strb	r3, [r7, #10]

    uint8_t CMD_MEASURE_TEMP[2] =  { 2, 0xE3 }; // gửi độ dài byte cần truyền và CMD_MEASURE chế độ HOLD MASTER MODE
 8000d28:	f24e 3302 	movw	r3, #58114	; 0xe302
 8000d2c:	80bb      	strh	r3, [r7, #4]

    TemHumSensor_readRegister(SI7020_ADDR, CMD_MEASURE_TEMP, pRT, 3, 4);
 8000d2e:	f107 0208 	add.w	r2, r7, #8
 8000d32:	1d39      	adds	r1, r7, #4
 8000d34:	2304      	movs	r3, #4
 8000d36:	9300      	str	r3, [sp, #0]
 8000d38:	2303      	movs	r3, #3
 8000d3a:	2040      	movs	r0, #64	; 0x40
 8000d3c:	f7ff ff8e 	bl	8000c5c <TemHumSensor_readRegister>

    RT = (pRT[0] << 8) + pRT[1];			// RT_CODE (MSB << 8) + LSB		// Temp = ((17572* RT)/(0xFFu +1) - 4685)/100
 8000d40:	7a3b      	ldrb	r3, [r7, #8]
 8000d42:	021b      	lsls	r3, r3, #8
 8000d44:	7a7a      	ldrb	r2, [r7, #9]
 8000d46:	4413      	add	r3, r2
 8000d48:	60fb      	str	r3, [r7, #12]
    RT = ((RT * 17572) >> 16) - 4685;
 8000d4a:	68fb      	ldr	r3, [r7, #12]
 8000d4c:	f244 42a4 	movw	r2, #17572	; 0x44a4
 8000d50:	fb02 f303 	mul.w	r3, r2, r3
 8000d54:	0c1b      	lsrs	r3, r3, #16
 8000d56:	f5a3 5392 	sub.w	r3, r3, #4672	; 0x1240
 8000d5a:	3b0d      	subs	r3, #13
 8000d5c:	60fb      	str	r3, [r7, #12]
    RT = RT/100;
 8000d5e:	68fb      	ldr	r3, [r7, #12]
 8000d60:	4a05      	ldr	r2, [pc, #20]	; (8000d78 <GetTemp_Sensor+0x60>)
 8000d62:	fba2 2303 	umull	r2, r3, r2, r3
 8000d66:	095b      	lsrs	r3, r3, #5
 8000d68:	60fb      	str	r3, [r7, #12]
    return RT;
 8000d6a:	68fb      	ldr	r3, [r7, #12]
}
 8000d6c:	4618      	mov	r0, r3
 8000d6e:	3710      	adds	r7, #16
 8000d70:	46bd      	mov	sp, r7
 8000d72:	bd80      	pop	{r7, pc}
 8000d74:	08004dac 	.word	0x08004dac
 8000d78:	51eb851f 	.word	0x51eb851f

08000d7c <GetHumi_Sensor>:
 * @brief   Get value humidity
 * @param   None
 * @retval  Humidity
 */
uint32_t GetHumi_Sensor(void)
{
 8000d7c:	b580      	push	{r7, lr}
 8000d7e:	b086      	sub	sp, #24
 8000d80:	af02      	add	r7, sp, #8
	uint32_t RH;
	uint8_t pRH[3] = { 0 };
 8000d82:	4b15      	ldr	r3, [pc, #84]	; (8000dd8 <GetHumi_Sensor+0x5c>)
 8000d84:	881b      	ldrh	r3, [r3, #0]
 8000d86:	813b      	strh	r3, [r7, #8]
 8000d88:	2300      	movs	r3, #0
 8000d8a:	72bb      	strb	r3, [r7, #10]


	uint8_t CMD_MEASURE_HUMI[2] =  { 2, 0xE5 }; // gửi độ dài byte cần truyền và CMD_MEASURE chế độ HOLD MASTER MODE
 8000d8c:	f24e 5302 	movw	r3, #58626	; 0xe502
 8000d90:	80bb      	strh	r3, [r7, #4]

    TemHumSensor_readRegister(SI7020_ADDR, CMD_MEASURE_HUMI, pRH, 3, 8);
 8000d92:	f107 0208 	add.w	r2, r7, #8
 8000d96:	1d39      	adds	r1, r7, #4
 8000d98:	2308      	movs	r3, #8
 8000d9a:	9300      	str	r3, [sp, #0]
 8000d9c:	2303      	movs	r3, #3
 8000d9e:	2040      	movs	r0, #64	; 0x40
 8000da0:	f7ff ff5c 	bl	8000c5c <TemHumSensor_readRegister>

    RH = (pRH[0] << 8) + pRH[1]; // RH_CODE (MSB << 8) + LSB
 8000da4:	7a3b      	ldrb	r3, [r7, #8]
 8000da6:	021b      	lsls	r3, r3, #8
 8000da8:	7a7a      	ldrb	r2, [r7, #9]
 8000daa:	4413      	add	r3, r2
 8000dac:	60fb      	str	r3, [r7, #12]
    RH = ((RH * 12500) >> 16) - 600;
 8000dae:	68fb      	ldr	r3, [r7, #12]
 8000db0:	f243 02d4 	movw	r2, #12500	; 0x30d4
 8000db4:	fb02 f303 	mul.w	r3, r2, r3
 8000db8:	0c1b      	lsrs	r3, r3, #16
 8000dba:	f5a3 7316 	sub.w	r3, r3, #600	; 0x258
 8000dbe:	60fb      	str	r3, [r7, #12]
    RH = RH/100;
 8000dc0:	68fb      	ldr	r3, [r7, #12]
 8000dc2:	4a06      	ldr	r2, [pc, #24]	; (8000ddc <GetHumi_Sensor+0x60>)
 8000dc4:	fba2 2303 	umull	r2, r3, r2, r3
 8000dc8:	095b      	lsrs	r3, r3, #5
 8000dca:	60fb      	str	r3, [r7, #12]

    return RH;
 8000dcc:	68fb      	ldr	r3, [r7, #12]
}
 8000dce:	4618      	mov	r0, r3
 8000dd0:	3710      	adds	r7, #16
 8000dd2:	46bd      	mov	sp, r7
 8000dd4:	bd80      	pop	{r7, pc}
 8000dd6:	bf00      	nop
 8000dd8:	08004dac 	.word	0x08004dac
 8000ddc:	51eb851f 	.word	0x51eb851f

08000de0 <processGetValueSensor>:
 * @func 	processGetValueSensor
 * @brief	Get value sensor
 * @param	None
 * @retval	None
 */
void processGetValueSensor(void) {
 8000de0:	b580      	push	{r7, lr}
 8000de2:	b082      	sub	sp, #8
 8000de4:	af02      	add	r7, sp, #8
	// Get timer
	time_current = GetMilSecTick();
 8000de6:	f000 ff73 	bl	8001cd0 <GetMilSecTick>
 8000dea:	4603      	mov	r3, r0
 8000dec:	4a58      	ldr	r2, [pc, #352]	; (8000f50 <processGetValueSensor+0x170>)
 8000dee:	6013      	str	r3, [r2, #0]

	if (time_current >= time_initial) {
 8000df0:	4b57      	ldr	r3, [pc, #348]	; (8000f50 <processGetValueSensor+0x170>)
 8000df2:	681a      	ldr	r2, [r3, #0]
 8000df4:	4b57      	ldr	r3, [pc, #348]	; (8000f54 <processGetValueSensor+0x174>)
 8000df6:	681b      	ldr	r3, [r3, #0]
 8000df8:	429a      	cmp	r2, r3
 8000dfa:	d30a      	bcc.n	8000e12 <processGetValueSensor+0x32>
		time_total += time_current - time_initial;
 8000dfc:	4b54      	ldr	r3, [pc, #336]	; (8000f50 <processGetValueSensor+0x170>)
 8000dfe:	681a      	ldr	r2, [r3, #0]
 8000e00:	4b54      	ldr	r3, [pc, #336]	; (8000f54 <processGetValueSensor+0x174>)
 8000e02:	681b      	ldr	r3, [r3, #0]
 8000e04:	1ad2      	subs	r2, r2, r3
 8000e06:	4b54      	ldr	r3, [pc, #336]	; (8000f58 <processGetValueSensor+0x178>)
 8000e08:	681b      	ldr	r3, [r3, #0]
 8000e0a:	4413      	add	r3, r2
 8000e0c:	4a52      	ldr	r2, [pc, #328]	; (8000f58 <processGetValueSensor+0x178>)
 8000e0e:	6013      	str	r3, [r2, #0]
 8000e10:	e00a      	b.n	8000e28 <processGetValueSensor+0x48>
	} else {
		time_total += 0xFFFFFFFFU - time_current + time_initial;
 8000e12:	4b50      	ldr	r3, [pc, #320]	; (8000f54 <processGetValueSensor+0x174>)
 8000e14:	681a      	ldr	r2, [r3, #0]
 8000e16:	4b4e      	ldr	r3, [pc, #312]	; (8000f50 <processGetValueSensor+0x170>)
 8000e18:	681b      	ldr	r3, [r3, #0]
 8000e1a:	1ad2      	subs	r2, r2, r3
 8000e1c:	4b4e      	ldr	r3, [pc, #312]	; (8000f58 <processGetValueSensor+0x178>)
 8000e1e:	681b      	ldr	r3, [r3, #0]
 8000e20:	4413      	add	r3, r2
 8000e22:	3b01      	subs	r3, #1
 8000e24:	4a4c      	ldr	r2, [pc, #304]	; (8000f58 <processGetValueSensor+0x178>)
 8000e26:	6013      	str	r3, [r2, #0]
	}
	if (time_total == CYCLE_SEND_DATA_1) {
 8000e28:	4b4b      	ldr	r3, [pc, #300]	; (8000f58 <processGetValueSensor+0x178>)
 8000e2a:	681b      	ldr	r3, [r3, #0]
 8000e2c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8000e30:	d10b      	bne.n	8000e4a <processGetValueSensor+0x6a>
		//Dùng để đọc giá trị nhiệt độ trả về từ cảm biến thông qua giao tiếp I2C.
		temperature = (uint8_t) (GetTemp_Sensor());
 8000e32:	f7ff ff71 	bl	8000d18 <GetTemp_Sensor>
 8000e36:	4603      	mov	r3, r0
 8000e38:	b2da      	uxtb	r2, r3
 8000e3a:	4b48      	ldr	r3, [pc, #288]	; (8000f5c <processGetValueSensor+0x17c>)
 8000e3c:	701a      	strb	r2, [r3, #0]

		//Dùng để đọc giá trị độ ẩm trả về từ cảm biến thông qua giao tiếp I2C.
		humidity = (uint8_t) (GetHumi_Sensor());
 8000e3e:	f7ff ff9d 	bl	8000d7c <GetHumi_Sensor>
 8000e42:	4603      	mov	r3, r0
 8000e44:	b2da      	uxtb	r2, r3
 8000e46:	4b46      	ldr	r3, [pc, #280]	; (8000f60 <processGetValueSensor+0x180>)
 8000e48:	701a      	strb	r2, [r3, #0]

	}
	if(time_total >= CYCLE_SEND_DATA_2)
 8000e4a:	4b43      	ldr	r3, [pc, #268]	; (8000f58 <processGetValueSensor+0x178>)
 8000e4c:	681b      	ldr	r3, [r3, #0]
 8000e4e:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 8000e52:	d376      	bcc.n	8000f42 <processGetValueSensor+0x162>
	{
		temperature1 = (uint8_t) (GetTemp_Sensor());
 8000e54:	f7ff ff60 	bl	8000d18 <GetTemp_Sensor>
 8000e58:	4603      	mov	r3, r0
 8000e5a:	b2da      	uxtb	r2, r3
 8000e5c:	4b41      	ldr	r3, [pc, #260]	; (8000f64 <processGetValueSensor+0x184>)
 8000e5e:	701a      	strb	r2, [r3, #0]

		humidity1 = (uint8_t) (GetHumi_Sensor());
 8000e60:	f7ff ff8c 	bl	8000d7c <GetHumi_Sensor>
 8000e64:	4603      	mov	r3, r0
 8000e66:	b2da      	uxtb	r2, r3
 8000e68:	4b3f      	ldr	r3, [pc, #252]	; (8000f68 <processGetValueSensor+0x188>)
 8000e6a:	701a      	strb	r2, [r3, #0]

		// nếu thời gian chênh lệch giữa lần đo 1 và lần đo 2 là 2 thì sẽ cập nhật giá trị sensor
		if( ((temperature1 > temperature ) && (temperature1 - temperature >= 2))
 8000e6c:	4b3d      	ldr	r3, [pc, #244]	; (8000f64 <processGetValueSensor+0x184>)
 8000e6e:	781a      	ldrb	r2, [r3, #0]
 8000e70:	4b3a      	ldr	r3, [pc, #232]	; (8000f5c <processGetValueSensor+0x17c>)
 8000e72:	781b      	ldrb	r3, [r3, #0]
 8000e74:	429a      	cmp	r2, r3
 8000e76:	d907      	bls.n	8000e88 <processGetValueSensor+0xa8>
 8000e78:	4b3a      	ldr	r3, [pc, #232]	; (8000f64 <processGetValueSensor+0x184>)
 8000e7a:	781b      	ldrb	r3, [r3, #0]
 8000e7c:	461a      	mov	r2, r3
 8000e7e:	4b37      	ldr	r3, [pc, #220]	; (8000f5c <processGetValueSensor+0x17c>)
 8000e80:	781b      	ldrb	r3, [r3, #0]
 8000e82:	1ad3      	subs	r3, r2, r3
 8000e84:	2b01      	cmp	r3, #1
 8000e86:	dc29      	bgt.n	8000edc <processGetValueSensor+0xfc>
		 || ((temperature1 < temperature ) && (temperature1 - temperature <= 2))
 8000e88:	4b36      	ldr	r3, [pc, #216]	; (8000f64 <processGetValueSensor+0x184>)
 8000e8a:	781a      	ldrb	r2, [r3, #0]
 8000e8c:	4b33      	ldr	r3, [pc, #204]	; (8000f5c <processGetValueSensor+0x17c>)
 8000e8e:	781b      	ldrb	r3, [r3, #0]
 8000e90:	429a      	cmp	r2, r3
 8000e92:	d207      	bcs.n	8000ea4 <processGetValueSensor+0xc4>
 8000e94:	4b33      	ldr	r3, [pc, #204]	; (8000f64 <processGetValueSensor+0x184>)
 8000e96:	781b      	ldrb	r3, [r3, #0]
 8000e98:	461a      	mov	r2, r3
 8000e9a:	4b30      	ldr	r3, [pc, #192]	; (8000f5c <processGetValueSensor+0x17c>)
 8000e9c:	781b      	ldrb	r3, [r3, #0]
 8000e9e:	1ad3      	subs	r3, r2, r3
 8000ea0:	2b02      	cmp	r3, #2
 8000ea2:	dd1b      	ble.n	8000edc <processGetValueSensor+0xfc>
		 || ((humidity1 > humidity ) && (humidity1 - humidity >= 2))
 8000ea4:	4b30      	ldr	r3, [pc, #192]	; (8000f68 <processGetValueSensor+0x188>)
 8000ea6:	781a      	ldrb	r2, [r3, #0]
 8000ea8:	4b2d      	ldr	r3, [pc, #180]	; (8000f60 <processGetValueSensor+0x180>)
 8000eaa:	781b      	ldrb	r3, [r3, #0]
 8000eac:	429a      	cmp	r2, r3
 8000eae:	d907      	bls.n	8000ec0 <processGetValueSensor+0xe0>
 8000eb0:	4b2d      	ldr	r3, [pc, #180]	; (8000f68 <processGetValueSensor+0x188>)
 8000eb2:	781b      	ldrb	r3, [r3, #0]
 8000eb4:	461a      	mov	r2, r3
 8000eb6:	4b2a      	ldr	r3, [pc, #168]	; (8000f60 <processGetValueSensor+0x180>)
 8000eb8:	781b      	ldrb	r3, [r3, #0]
 8000eba:	1ad3      	subs	r3, r2, r3
 8000ebc:	2b01      	cmp	r3, #1
 8000ebe:	dc0d      	bgt.n	8000edc <processGetValueSensor+0xfc>
		 || ((humidity1 < humidity ) && (humidity1 - humidity <= 2)))
 8000ec0:	4b29      	ldr	r3, [pc, #164]	; (8000f68 <processGetValueSensor+0x188>)
 8000ec2:	781a      	ldrb	r2, [r3, #0]
 8000ec4:	4b26      	ldr	r3, [pc, #152]	; (8000f60 <processGetValueSensor+0x180>)
 8000ec6:	781b      	ldrb	r3, [r3, #0]
 8000ec8:	429a      	cmp	r2, r3
 8000eca:	d237      	bcs.n	8000f3c <processGetValueSensor+0x15c>
 8000ecc:	4b26      	ldr	r3, [pc, #152]	; (8000f68 <processGetValueSensor+0x188>)
 8000ece:	781b      	ldrb	r3, [r3, #0]
 8000ed0:	461a      	mov	r2, r3
 8000ed2:	4b23      	ldr	r3, [pc, #140]	; (8000f60 <processGetValueSensor+0x180>)
 8000ed4:	781b      	ldrb	r3, [r3, #0]
 8000ed6:	1ad3      	subs	r3, r2, r3
 8000ed8:	2b02      	cmp	r3, #2
 8000eda:	dc2f      	bgt.n	8000f3c <processGetValueSensor+0x15c>
		{
			ucg_DrawString(&ucg, 0, 32, 0, "nhom2");
 8000edc:	4b23      	ldr	r3, [pc, #140]	; (8000f6c <processGetValueSensor+0x18c>)
 8000ede:	9300      	str	r3, [sp, #0]
 8000ee0:	2300      	movs	r3, #0
 8000ee2:	2220      	movs	r2, #32
 8000ee4:	2100      	movs	r1, #0
 8000ee6:	4822      	ldr	r0, [pc, #136]	; (8000f70 <processGetValueSensor+0x190>)
 8000ee8:	f002 fa68 	bl	80033bc <ucg_DrawString>
			memset(src1, 0, sizeof(src1));
 8000eec:	2214      	movs	r2, #20
 8000eee:	2100      	movs	r1, #0
 8000ef0:	4820      	ldr	r0, [pc, #128]	; (8000f74 <processGetValueSensor+0x194>)
 8000ef2:	f003 facb 	bl	800448c <memset>
			sprintf(src1, " Temp = %d oC  ", temperature1);
 8000ef6:	4b1b      	ldr	r3, [pc, #108]	; (8000f64 <processGetValueSensor+0x184>)
 8000ef8:	781b      	ldrb	r3, [r3, #0]
 8000efa:	461a      	mov	r2, r3
 8000efc:	491e      	ldr	r1, [pc, #120]	; (8000f78 <processGetValueSensor+0x198>)
 8000efe:	481d      	ldr	r0, [pc, #116]	; (8000f74 <processGetValueSensor+0x194>)
 8000f00:	f003 faa4 	bl	800444c <siprintf>
			ucg_DrawString(&ucg, 0, 52, 0, src1);
 8000f04:	4b1b      	ldr	r3, [pc, #108]	; (8000f74 <processGetValueSensor+0x194>)
 8000f06:	9300      	str	r3, [sp, #0]
 8000f08:	2300      	movs	r3, #0
 8000f0a:	2234      	movs	r2, #52	; 0x34
 8000f0c:	2100      	movs	r1, #0
 8000f0e:	4818      	ldr	r0, [pc, #96]	; (8000f70 <processGetValueSensor+0x190>)
 8000f10:	f002 fa54 	bl	80033bc <ucg_DrawString>

			memset(src2, 0, sizeof(src2));
 8000f14:	2214      	movs	r2, #20
 8000f16:	2100      	movs	r1, #0
 8000f18:	4818      	ldr	r0, [pc, #96]	; (8000f7c <processGetValueSensor+0x19c>)
 8000f1a:	f003 fab7 	bl	800448c <memset>
			sprintf(src2, " Humi = %3d %%   ", humidity1);
 8000f1e:	4b12      	ldr	r3, [pc, #72]	; (8000f68 <processGetValueSensor+0x188>)
 8000f20:	781b      	ldrb	r3, [r3, #0]
 8000f22:	461a      	mov	r2, r3
 8000f24:	4916      	ldr	r1, [pc, #88]	; (8000f80 <processGetValueSensor+0x1a0>)
 8000f26:	4815      	ldr	r0, [pc, #84]	; (8000f7c <processGetValueSensor+0x19c>)
 8000f28:	f003 fa90 	bl	800444c <siprintf>
			ucg_DrawString(&ucg, 0, 72, 0, src2);
 8000f2c:	4b13      	ldr	r3, [pc, #76]	; (8000f7c <processGetValueSensor+0x19c>)
 8000f2e:	9300      	str	r3, [sp, #0]
 8000f30:	2300      	movs	r3, #0
 8000f32:	2248      	movs	r2, #72	; 0x48
 8000f34:	2100      	movs	r1, #0
 8000f36:	480e      	ldr	r0, [pc, #56]	; (8000f70 <processGetValueSensor+0x190>)
 8000f38:	f002 fa40 	bl	80033bc <ucg_DrawString>
		}

		time_total = 0;
 8000f3c:	4b06      	ldr	r3, [pc, #24]	; (8000f58 <processGetValueSensor+0x178>)
 8000f3e:	2200      	movs	r2, #0
 8000f40:	601a      	str	r2, [r3, #0]
		// Reset lại biến thời gian sau quá trình đọc giá trị nhiệt độ - độ ẩm.

	}
	time_initial = time_current;
 8000f42:	4b03      	ldr	r3, [pc, #12]	; (8000f50 <processGetValueSensor+0x170>)
 8000f44:	681b      	ldr	r3, [r3, #0]
 8000f46:	4a03      	ldr	r2, [pc, #12]	; (8000f54 <processGetValueSensor+0x174>)
 8000f48:	6013      	str	r3, [r2, #0]



}
 8000f4a:	bf00      	nop
 8000f4c:	46bd      	mov	sp, r7
 8000f4e:	bd80      	pop	{r7, pc}
 8000f50:	2000014c 	.word	0x2000014c
 8000f54:	20000148 	.word	0x20000148
 8000f58:	200001a4 	.word	0x200001a4
 8000f5c:	200001a8 	.word	0x200001a8
 8000f60:	200001a9 	.word	0x200001a9
 8000f64:	200001aa 	.word	0x200001aa
 8000f68:	200001ab 	.word	0x200001ab
 8000f6c:	08004db0 	.word	0x08004db0
 8000f70:	20000094 	.word	0x20000094
 8000f74:	20000154 	.word	0x20000154
 8000f78:	08004db8 	.word	0x08004db8
 8000f7c:	20000168 	.word	0x20000168
 8000f80:	08004dc8 	.word	0x08004dc8

08000f84 <Scan_SensorLCD>:
* @brief	Scan display value sensor
* @param	None
* @retval	None
*/
void Scan_SensorLCD(void)
{
 8000f84:	b580      	push	{r7, lr}
 8000f86:	b082      	sub	sp, #8
 8000f88:	af02      	add	r7, sp, #8
	ucg_DrawString(&ucg, 0, 32, 0, "nhom2");
 8000f8a:	4b19      	ldr	r3, [pc, #100]	; (8000ff0 <Scan_SensorLCD+0x6c>)
 8000f8c:	9300      	str	r3, [sp, #0]
 8000f8e:	2300      	movs	r3, #0
 8000f90:	2220      	movs	r2, #32
 8000f92:	2100      	movs	r1, #0
 8000f94:	4817      	ldr	r0, [pc, #92]	; (8000ff4 <Scan_SensorLCD+0x70>)
 8000f96:	f002 fa11 	bl	80033bc <ucg_DrawString>
	memset(src3, 0, sizeof(src3));
 8000f9a:	2214      	movs	r2, #20
 8000f9c:	2100      	movs	r1, #0
 8000f9e:	4816      	ldr	r0, [pc, #88]	; (8000ff8 <Scan_SensorLCD+0x74>)
 8000fa0:	f003 fa74 	bl	800448c <memset>
	sprintf(src3, " Temp = %d oC  ", temperature);
 8000fa4:	4b15      	ldr	r3, [pc, #84]	; (8000ffc <Scan_SensorLCD+0x78>)
 8000fa6:	781b      	ldrb	r3, [r3, #0]
 8000fa8:	461a      	mov	r2, r3
 8000faa:	4915      	ldr	r1, [pc, #84]	; (8001000 <Scan_SensorLCD+0x7c>)
 8000fac:	4812      	ldr	r0, [pc, #72]	; (8000ff8 <Scan_SensorLCD+0x74>)
 8000fae:	f003 fa4d 	bl	800444c <siprintf>
	ucg_DrawString(&ucg, 0, 52, 0, src3);
 8000fb2:	4b11      	ldr	r3, [pc, #68]	; (8000ff8 <Scan_SensorLCD+0x74>)
 8000fb4:	9300      	str	r3, [sp, #0]
 8000fb6:	2300      	movs	r3, #0
 8000fb8:	2234      	movs	r2, #52	; 0x34
 8000fba:	2100      	movs	r1, #0
 8000fbc:	480d      	ldr	r0, [pc, #52]	; (8000ff4 <Scan_SensorLCD+0x70>)
 8000fbe:	f002 f9fd 	bl	80033bc <ucg_DrawString>

	memset(src4, 0, sizeof(src4));
 8000fc2:	2214      	movs	r2, #20
 8000fc4:	2100      	movs	r1, #0
 8000fc6:	480f      	ldr	r0, [pc, #60]	; (8001004 <Scan_SensorLCD+0x80>)
 8000fc8:	f003 fa60 	bl	800448c <memset>
	sprintf(src4, " Humi = %3d %%   ", humidity);
 8000fcc:	4b0e      	ldr	r3, [pc, #56]	; (8001008 <Scan_SensorLCD+0x84>)
 8000fce:	781b      	ldrb	r3, [r3, #0]
 8000fd0:	461a      	mov	r2, r3
 8000fd2:	490e      	ldr	r1, [pc, #56]	; (800100c <Scan_SensorLCD+0x88>)
 8000fd4:	480b      	ldr	r0, [pc, #44]	; (8001004 <Scan_SensorLCD+0x80>)
 8000fd6:	f003 fa39 	bl	800444c <siprintf>
	ucg_DrawString(&ucg, 0, 72, 0, src4);
 8000fda:	4b0a      	ldr	r3, [pc, #40]	; (8001004 <Scan_SensorLCD+0x80>)
 8000fdc:	9300      	str	r3, [sp, #0]
 8000fde:	2300      	movs	r3, #0
 8000fe0:	2248      	movs	r2, #72	; 0x48
 8000fe2:	2100      	movs	r1, #0
 8000fe4:	4803      	ldr	r0, [pc, #12]	; (8000ff4 <Scan_SensorLCD+0x70>)
 8000fe6:	f002 f9e9 	bl	80033bc <ucg_DrawString>
}
 8000fea:	bf00      	nop
 8000fec:	46bd      	mov	sp, r7
 8000fee:	bd80      	pop	{r7, pc}
 8000ff0:	08004db0 	.word	0x08004db0
 8000ff4:	20000094 	.word	0x20000094
 8000ff8:	2000017c 	.word	0x2000017c
 8000ffc:	200001a8 	.word	0x200001a8
 8001000:	08004db8 	.word	0x08004db8
 8001004:	20000190 	.word	0x20000190
 8001008:	200001a9 	.word	0x200001a9
 800100c:	08004dc8 	.word	0x08004dc8

08001010 <Scan_TimeSensor>:
* @brief	Scan period 1s
* @param	None
* @retval	None
*/
void Scan_TimeSensor(uint32_t byRepeats)
{
 8001010:	b580      	push	{r7, lr}
 8001012:	b084      	sub	sp, #16
 8001014:	af02      	add	r7, sp, #8
 8001016:	6078      	str	r0, [r7, #4]
	if (idTimer != NO_TIMER) {
 8001018:	4b0c      	ldr	r3, [pc, #48]	; (800104c <Scan_TimeSensor+0x3c>)
 800101a:	681b      	ldr	r3, [r3, #0]
 800101c:	2bff      	cmp	r3, #255	; 0xff
 800101e:	d005      	beq.n	800102c <Scan_TimeSensor+0x1c>
	TimerStop(idTimer);
 8001020:	4b0a      	ldr	r3, [pc, #40]	; (800104c <Scan_TimeSensor+0x3c>)
 8001022:	681b      	ldr	r3, [r3, #0]
 8001024:	b2db      	uxtb	r3, r3
 8001026:	4618      	mov	r0, r3
 8001028:	f000 fe02 	bl	8001c30 <TimerStop>
	}
	idTimer = TimerStart("Scan_sensor", byRepeats, TIMER_REPEAT_FOREVER, (void*) Scan_SensorLCD, NULL);
 800102c:	2300      	movs	r3, #0
 800102e:	9300      	str	r3, [sp, #0]
 8001030:	4b07      	ldr	r3, [pc, #28]	; (8001050 <Scan_TimeSensor+0x40>)
 8001032:	22ff      	movs	r2, #255	; 0xff
 8001034:	6879      	ldr	r1, [r7, #4]
 8001036:	4807      	ldr	r0, [pc, #28]	; (8001054 <Scan_TimeSensor+0x44>)
 8001038:	f000 fd98 	bl	8001b6c <TimerStart>
 800103c:	4603      	mov	r3, r0
 800103e:	461a      	mov	r2, r3
 8001040:	4b02      	ldr	r3, [pc, #8]	; (800104c <Scan_TimeSensor+0x3c>)
 8001042:	601a      	str	r2, [r3, #0]
}
 8001044:	bf00      	nop
 8001046:	3708      	adds	r7, #8
 8001048:	46bd      	mov	sp, r7
 800104a:	bd80      	pop	{r7, pc}
 800104c:	20000150 	.word	0x20000150
 8001050:	08000f85 	.word	0x08000f85
 8001054:	08004ddc 	.word	0x08004ddc

08001058 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001058:	b580      	push	{r7, lr}
 800105a:	b086      	sub	sp, #24
 800105c:	af00      	add	r7, sp, #0
 800105e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001060:	4a14      	ldr	r2, [pc, #80]	; (80010b4 <_sbrk+0x5c>)
 8001062:	4b15      	ldr	r3, [pc, #84]	; (80010b8 <_sbrk+0x60>)
 8001064:	1ad3      	subs	r3, r2, r3
 8001066:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001068:	697b      	ldr	r3, [r7, #20]
 800106a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800106c:	4b13      	ldr	r3, [pc, #76]	; (80010bc <_sbrk+0x64>)
 800106e:	681b      	ldr	r3, [r3, #0]
 8001070:	2b00      	cmp	r3, #0
 8001072:	d102      	bne.n	800107a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001074:	4b11      	ldr	r3, [pc, #68]	; (80010bc <_sbrk+0x64>)
 8001076:	4a12      	ldr	r2, [pc, #72]	; (80010c0 <_sbrk+0x68>)
 8001078:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800107a:	4b10      	ldr	r3, [pc, #64]	; (80010bc <_sbrk+0x64>)
 800107c:	681a      	ldr	r2, [r3, #0]
 800107e:	687b      	ldr	r3, [r7, #4]
 8001080:	4413      	add	r3, r2
 8001082:	693a      	ldr	r2, [r7, #16]
 8001084:	429a      	cmp	r2, r3
 8001086:	d207      	bcs.n	8001098 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001088:	f003 fa08 	bl	800449c <__errno>
 800108c:	4603      	mov	r3, r0
 800108e:	220c      	movs	r2, #12
 8001090:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001092:	f04f 33ff 	mov.w	r3, #4294967295
 8001096:	e009      	b.n	80010ac <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001098:	4b08      	ldr	r3, [pc, #32]	; (80010bc <_sbrk+0x64>)
 800109a:	681b      	ldr	r3, [r3, #0]
 800109c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800109e:	4b07      	ldr	r3, [pc, #28]	; (80010bc <_sbrk+0x64>)
 80010a0:	681a      	ldr	r2, [r3, #0]
 80010a2:	687b      	ldr	r3, [r7, #4]
 80010a4:	4413      	add	r3, r2
 80010a6:	4a05      	ldr	r2, [pc, #20]	; (80010bc <_sbrk+0x64>)
 80010a8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80010aa:	68fb      	ldr	r3, [r7, #12]
}
 80010ac:	4618      	mov	r0, r3
 80010ae:	3718      	adds	r7, #24
 80010b0:	46bd      	mov	sp, r7
 80010b2:	bd80      	pop	{r7, pc}
 80010b4:	20018000 	.word	0x20018000
 80010b8:	00000400 	.word	0x00000400
 80010bc:	200001ac 	.word	0x200001ac
 80010c0:	200014a8 	.word	0x200014a8

080010c4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80010c4:	480d      	ldr	r0, [pc, #52]	; (80010fc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80010c6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80010c8:	f000 f826 	bl	8001118 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80010cc:	480c      	ldr	r0, [pc, #48]	; (8001100 <LoopForever+0x6>)
  ldr r1, =_edata
 80010ce:	490d      	ldr	r1, [pc, #52]	; (8001104 <LoopForever+0xa>)
  ldr r2, =_sidata
 80010d0:	4a0d      	ldr	r2, [pc, #52]	; (8001108 <LoopForever+0xe>)
  movs r3, #0
 80010d2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80010d4:	e002      	b.n	80010dc <LoopCopyDataInit>

080010d6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80010d6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80010d8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80010da:	3304      	adds	r3, #4

080010dc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80010dc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80010de:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80010e0:	d3f9      	bcc.n	80010d6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80010e2:	4a0a      	ldr	r2, [pc, #40]	; (800110c <LoopForever+0x12>)
  ldr r4, =_ebss
 80010e4:	4c0a      	ldr	r4, [pc, #40]	; (8001110 <LoopForever+0x16>)
  movs r3, #0
 80010e6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80010e8:	e001      	b.n	80010ee <LoopFillZerobss>

080010ea <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80010ea:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80010ec:	3204      	adds	r2, #4

080010ee <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80010ee:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80010f0:	d3fb      	bcc.n	80010ea <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80010f2:	f003 f9d9 	bl	80044a8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80010f6:	f7ff fb87 	bl	8000808 <main>

080010fa <LoopForever>:

LoopForever:
  b LoopForever
 80010fa:	e7fe      	b.n	80010fa <LoopForever>
  ldr   r0, =_estack
 80010fc:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8001100:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001104:	20000078 	.word	0x20000078
  ldr r2, =_sidata
 8001108:	080056bc 	.word	0x080056bc
  ldr r2, =_sbss
 800110c:	20000078 	.word	0x20000078
  ldr r4, =_ebss
 8001110:	200014a4 	.word	0x200014a4

08001114 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001114:	e7fe      	b.n	8001114 <ADC_IRQHandler>
	...

08001118 <SystemInit>:
 8001118:	b580      	push	{r7, lr}
 800111a:	af00      	add	r7, sp, #0
 800111c:	4b16      	ldr	r3, [pc, #88]	; (8001178 <SystemInit+0x60>)
 800111e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001122:	4a15      	ldr	r2, [pc, #84]	; (8001178 <SystemInit+0x60>)
 8001124:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001128:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 800112c:	4b13      	ldr	r3, [pc, #76]	; (800117c <SystemInit+0x64>)
 800112e:	681b      	ldr	r3, [r3, #0]
 8001130:	4a12      	ldr	r2, [pc, #72]	; (800117c <SystemInit+0x64>)
 8001132:	f043 0301 	orr.w	r3, r3, #1
 8001136:	6013      	str	r3, [r2, #0]
 8001138:	4b10      	ldr	r3, [pc, #64]	; (800117c <SystemInit+0x64>)
 800113a:	2200      	movs	r2, #0
 800113c:	609a      	str	r2, [r3, #8]
 800113e:	4b0f      	ldr	r3, [pc, #60]	; (800117c <SystemInit+0x64>)
 8001140:	681b      	ldr	r3, [r3, #0]
 8001142:	4a0e      	ldr	r2, [pc, #56]	; (800117c <SystemInit+0x64>)
 8001144:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8001148:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800114c:	6013      	str	r3, [r2, #0]
 800114e:	4b0b      	ldr	r3, [pc, #44]	; (800117c <SystemInit+0x64>)
 8001150:	4a0b      	ldr	r2, [pc, #44]	; (8001180 <SystemInit+0x68>)
 8001152:	605a      	str	r2, [r3, #4]
 8001154:	4b09      	ldr	r3, [pc, #36]	; (800117c <SystemInit+0x64>)
 8001156:	681b      	ldr	r3, [r3, #0]
 8001158:	4a08      	ldr	r2, [pc, #32]	; (800117c <SystemInit+0x64>)
 800115a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800115e:	6013      	str	r3, [r2, #0]
 8001160:	4b06      	ldr	r3, [pc, #24]	; (800117c <SystemInit+0x64>)
 8001162:	2200      	movs	r2, #0
 8001164:	60da      	str	r2, [r3, #12]
 8001166:	f000 f889 	bl	800127c <SetSysClock>
 800116a:	4b03      	ldr	r3, [pc, #12]	; (8001178 <SystemInit+0x60>)
 800116c:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8001170:	609a      	str	r2, [r3, #8]
 8001172:	bf00      	nop
 8001174:	bd80      	pop	{r7, pc}
 8001176:	bf00      	nop
 8001178:	e000ed00 	.word	0xe000ed00
 800117c:	40023800 	.word	0x40023800
 8001180:	24003010 	.word	0x24003010

08001184 <SystemCoreClockUpdate>:
 8001184:	b480      	push	{r7}
 8001186:	b087      	sub	sp, #28
 8001188:	af00      	add	r7, sp, #0
 800118a:	2300      	movs	r3, #0
 800118c:	613b      	str	r3, [r7, #16]
 800118e:	2300      	movs	r3, #0
 8001190:	617b      	str	r3, [r7, #20]
 8001192:	2302      	movs	r3, #2
 8001194:	60fb      	str	r3, [r7, #12]
 8001196:	2300      	movs	r3, #0
 8001198:	60bb      	str	r3, [r7, #8]
 800119a:	2302      	movs	r3, #2
 800119c:	607b      	str	r3, [r7, #4]
 800119e:	4b32      	ldr	r3, [pc, #200]	; (8001268 <SystemCoreClockUpdate+0xe4>)
 80011a0:	689b      	ldr	r3, [r3, #8]
 80011a2:	f003 030c 	and.w	r3, r3, #12
 80011a6:	613b      	str	r3, [r7, #16]
 80011a8:	693b      	ldr	r3, [r7, #16]
 80011aa:	2b04      	cmp	r3, #4
 80011ac:	d007      	beq.n	80011be <SystemCoreClockUpdate+0x3a>
 80011ae:	2b08      	cmp	r3, #8
 80011b0:	d009      	beq.n	80011c6 <SystemCoreClockUpdate+0x42>
 80011b2:	2b00      	cmp	r3, #0
 80011b4:	d13d      	bne.n	8001232 <SystemCoreClockUpdate+0xae>
 80011b6:	4b2d      	ldr	r3, [pc, #180]	; (800126c <SystemCoreClockUpdate+0xe8>)
 80011b8:	4a2d      	ldr	r2, [pc, #180]	; (8001270 <SystemCoreClockUpdate+0xec>)
 80011ba:	601a      	str	r2, [r3, #0]
 80011bc:	e03d      	b.n	800123a <SystemCoreClockUpdate+0xb6>
 80011be:	4b2b      	ldr	r3, [pc, #172]	; (800126c <SystemCoreClockUpdate+0xe8>)
 80011c0:	4a2c      	ldr	r2, [pc, #176]	; (8001274 <SystemCoreClockUpdate+0xf0>)
 80011c2:	601a      	str	r2, [r3, #0]
 80011c4:	e039      	b.n	800123a <SystemCoreClockUpdate+0xb6>
 80011c6:	4b28      	ldr	r3, [pc, #160]	; (8001268 <SystemCoreClockUpdate+0xe4>)
 80011c8:	685b      	ldr	r3, [r3, #4]
 80011ca:	0d9b      	lsrs	r3, r3, #22
 80011cc:	f003 0301 	and.w	r3, r3, #1
 80011d0:	60bb      	str	r3, [r7, #8]
 80011d2:	4b25      	ldr	r3, [pc, #148]	; (8001268 <SystemCoreClockUpdate+0xe4>)
 80011d4:	685b      	ldr	r3, [r3, #4]
 80011d6:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80011da:	607b      	str	r3, [r7, #4]
 80011dc:	68bb      	ldr	r3, [r7, #8]
 80011de:	2b00      	cmp	r3, #0
 80011e0:	d00c      	beq.n	80011fc <SystemCoreClockUpdate+0x78>
 80011e2:	4a24      	ldr	r2, [pc, #144]	; (8001274 <SystemCoreClockUpdate+0xf0>)
 80011e4:	687b      	ldr	r3, [r7, #4]
 80011e6:	fbb2 f3f3 	udiv	r3, r2, r3
 80011ea:	4a1f      	ldr	r2, [pc, #124]	; (8001268 <SystemCoreClockUpdate+0xe4>)
 80011ec:	6852      	ldr	r2, [r2, #4]
 80011ee:	0992      	lsrs	r2, r2, #6
 80011f0:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80011f4:	fb02 f303 	mul.w	r3, r2, r3
 80011f8:	617b      	str	r3, [r7, #20]
 80011fa:	e00b      	b.n	8001214 <SystemCoreClockUpdate+0x90>
 80011fc:	4a1c      	ldr	r2, [pc, #112]	; (8001270 <SystemCoreClockUpdate+0xec>)
 80011fe:	687b      	ldr	r3, [r7, #4]
 8001200:	fbb2 f3f3 	udiv	r3, r2, r3
 8001204:	4a18      	ldr	r2, [pc, #96]	; (8001268 <SystemCoreClockUpdate+0xe4>)
 8001206:	6852      	ldr	r2, [r2, #4]
 8001208:	0992      	lsrs	r2, r2, #6
 800120a:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800120e:	fb02 f303 	mul.w	r3, r2, r3
 8001212:	617b      	str	r3, [r7, #20]
 8001214:	4b14      	ldr	r3, [pc, #80]	; (8001268 <SystemCoreClockUpdate+0xe4>)
 8001216:	685b      	ldr	r3, [r3, #4]
 8001218:	0c1b      	lsrs	r3, r3, #16
 800121a:	f003 0303 	and.w	r3, r3, #3
 800121e:	3301      	adds	r3, #1
 8001220:	005b      	lsls	r3, r3, #1
 8001222:	60fb      	str	r3, [r7, #12]
 8001224:	697a      	ldr	r2, [r7, #20]
 8001226:	68fb      	ldr	r3, [r7, #12]
 8001228:	fbb2 f3f3 	udiv	r3, r2, r3
 800122c:	4a0f      	ldr	r2, [pc, #60]	; (800126c <SystemCoreClockUpdate+0xe8>)
 800122e:	6013      	str	r3, [r2, #0]
 8001230:	e003      	b.n	800123a <SystemCoreClockUpdate+0xb6>
 8001232:	4b0e      	ldr	r3, [pc, #56]	; (800126c <SystemCoreClockUpdate+0xe8>)
 8001234:	4a0e      	ldr	r2, [pc, #56]	; (8001270 <SystemCoreClockUpdate+0xec>)
 8001236:	601a      	str	r2, [r3, #0]
 8001238:	bf00      	nop
 800123a:	4b0b      	ldr	r3, [pc, #44]	; (8001268 <SystemCoreClockUpdate+0xe4>)
 800123c:	689b      	ldr	r3, [r3, #8]
 800123e:	091b      	lsrs	r3, r3, #4
 8001240:	f003 030f 	and.w	r3, r3, #15
 8001244:	4a0c      	ldr	r2, [pc, #48]	; (8001278 <SystemCoreClockUpdate+0xf4>)
 8001246:	5cd3      	ldrb	r3, [r2, r3]
 8001248:	b2db      	uxtb	r3, r3
 800124a:	613b      	str	r3, [r7, #16]
 800124c:	4b07      	ldr	r3, [pc, #28]	; (800126c <SystemCoreClockUpdate+0xe8>)
 800124e:	681a      	ldr	r2, [r3, #0]
 8001250:	693b      	ldr	r3, [r7, #16]
 8001252:	fa22 f303 	lsr.w	r3, r2, r3
 8001256:	4a05      	ldr	r2, [pc, #20]	; (800126c <SystemCoreClockUpdate+0xe8>)
 8001258:	6013      	str	r3, [r2, #0]
 800125a:	bf00      	nop
 800125c:	371c      	adds	r7, #28
 800125e:	46bd      	mov	sp, r7
 8001260:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001264:	4770      	bx	lr
 8001266:	bf00      	nop
 8001268:	40023800 	.word	0x40023800
 800126c:	20000000 	.word	0x20000000
 8001270:	00f42400 	.word	0x00f42400
 8001274:	017d7840 	.word	0x017d7840
 8001278:	20000004 	.word	0x20000004

0800127c <SetSysClock>:
 800127c:	b480      	push	{r7}
 800127e:	af00      	add	r7, sp, #0
 8001280:	4b22      	ldr	r3, [pc, #136]	; (800130c <SetSysClock+0x90>)
 8001282:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001284:	4a21      	ldr	r2, [pc, #132]	; (800130c <SetSysClock+0x90>)
 8001286:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800128a:	6413      	str	r3, [r2, #64]	; 0x40
 800128c:	4b20      	ldr	r3, [pc, #128]	; (8001310 <SetSysClock+0x94>)
 800128e:	681b      	ldr	r3, [r3, #0]
 8001290:	4a1f      	ldr	r2, [pc, #124]	; (8001310 <SetSysClock+0x94>)
 8001292:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8001296:	6013      	str	r3, [r2, #0]
 8001298:	4b1c      	ldr	r3, [pc, #112]	; (800130c <SetSysClock+0x90>)
 800129a:	4a1c      	ldr	r2, [pc, #112]	; (800130c <SetSysClock+0x90>)
 800129c:	689b      	ldr	r3, [r3, #8]
 800129e:	6093      	str	r3, [r2, #8]
 80012a0:	4b1a      	ldr	r3, [pc, #104]	; (800130c <SetSysClock+0x90>)
 80012a2:	4a1a      	ldr	r2, [pc, #104]	; (800130c <SetSysClock+0x90>)
 80012a4:	689b      	ldr	r3, [r3, #8]
 80012a6:	6093      	str	r3, [r2, #8]
 80012a8:	4b18      	ldr	r3, [pc, #96]	; (800130c <SetSysClock+0x90>)
 80012aa:	689b      	ldr	r3, [r3, #8]
 80012ac:	4a17      	ldr	r2, [pc, #92]	; (800130c <SetSysClock+0x90>)
 80012ae:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80012b2:	6093      	str	r3, [r2, #8]
 80012b4:	4b15      	ldr	r3, [pc, #84]	; (800130c <SetSysClock+0x90>)
 80012b6:	4a17      	ldr	r2, [pc, #92]	; (8001314 <SetSysClock+0x98>)
 80012b8:	605a      	str	r2, [r3, #4]
 80012ba:	4b14      	ldr	r3, [pc, #80]	; (800130c <SetSysClock+0x90>)
 80012bc:	681b      	ldr	r3, [r3, #0]
 80012be:	4a13      	ldr	r2, [pc, #76]	; (800130c <SetSysClock+0x90>)
 80012c0:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80012c4:	6013      	str	r3, [r2, #0]
 80012c6:	bf00      	nop
 80012c8:	4b10      	ldr	r3, [pc, #64]	; (800130c <SetSysClock+0x90>)
 80012ca:	681b      	ldr	r3, [r3, #0]
 80012cc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80012d0:	2b00      	cmp	r3, #0
 80012d2:	d0f9      	beq.n	80012c8 <SetSysClock+0x4c>
 80012d4:	4b10      	ldr	r3, [pc, #64]	; (8001318 <SetSysClock+0x9c>)
 80012d6:	f240 6202 	movw	r2, #1538	; 0x602
 80012da:	601a      	str	r2, [r3, #0]
 80012dc:	4b0b      	ldr	r3, [pc, #44]	; (800130c <SetSysClock+0x90>)
 80012de:	689b      	ldr	r3, [r3, #8]
 80012e0:	4a0a      	ldr	r2, [pc, #40]	; (800130c <SetSysClock+0x90>)
 80012e2:	f023 0303 	bic.w	r3, r3, #3
 80012e6:	6093      	str	r3, [r2, #8]
 80012e8:	4b08      	ldr	r3, [pc, #32]	; (800130c <SetSysClock+0x90>)
 80012ea:	689b      	ldr	r3, [r3, #8]
 80012ec:	4a07      	ldr	r2, [pc, #28]	; (800130c <SetSysClock+0x90>)
 80012ee:	f043 0302 	orr.w	r3, r3, #2
 80012f2:	6093      	str	r3, [r2, #8]
 80012f4:	bf00      	nop
 80012f6:	4b05      	ldr	r3, [pc, #20]	; (800130c <SetSysClock+0x90>)
 80012f8:	689b      	ldr	r3, [r3, #8]
 80012fa:	f003 030c 	and.w	r3, r3, #12
 80012fe:	2b08      	cmp	r3, #8
 8001300:	d1f9      	bne.n	80012f6 <SetSysClock+0x7a>
 8001302:	bf00      	nop
 8001304:	46bd      	mov	sp, r7
 8001306:	f85d 7b04 	ldr.w	r7, [sp], #4
 800130a:	4770      	bx	lr
 800130c:	40023800 	.word	0x40023800
 8001310:	40007000 	.word	0x40007000
 8001314:	08015410 	.word	0x08015410
 8001318:	40023c00 	.word	0x40023c00

0800131c <GPIO_Init>:
 800131c:	b480      	push	{r7}
 800131e:	b087      	sub	sp, #28
 8001320:	af00      	add	r7, sp, #0
 8001322:	6078      	str	r0, [r7, #4]
 8001324:	6039      	str	r1, [r7, #0]
 8001326:	2300      	movs	r3, #0
 8001328:	617b      	str	r3, [r7, #20]
 800132a:	2300      	movs	r3, #0
 800132c:	613b      	str	r3, [r7, #16]
 800132e:	2300      	movs	r3, #0
 8001330:	60fb      	str	r3, [r7, #12]
 8001332:	2300      	movs	r3, #0
 8001334:	617b      	str	r3, [r7, #20]
 8001336:	e076      	b.n	8001426 <GPIO_Init+0x10a>
 8001338:	2201      	movs	r2, #1
 800133a:	697b      	ldr	r3, [r7, #20]
 800133c:	fa02 f303 	lsl.w	r3, r2, r3
 8001340:	613b      	str	r3, [r7, #16]
 8001342:	683b      	ldr	r3, [r7, #0]
 8001344:	681b      	ldr	r3, [r3, #0]
 8001346:	693a      	ldr	r2, [r7, #16]
 8001348:	4013      	ands	r3, r2
 800134a:	60fb      	str	r3, [r7, #12]
 800134c:	68fa      	ldr	r2, [r7, #12]
 800134e:	693b      	ldr	r3, [r7, #16]
 8001350:	429a      	cmp	r2, r3
 8001352:	d165      	bne.n	8001420 <GPIO_Init+0x104>
 8001354:	687b      	ldr	r3, [r7, #4]
 8001356:	681a      	ldr	r2, [r3, #0]
 8001358:	697b      	ldr	r3, [r7, #20]
 800135a:	005b      	lsls	r3, r3, #1
 800135c:	2103      	movs	r1, #3
 800135e:	fa01 f303 	lsl.w	r3, r1, r3
 8001362:	43db      	mvns	r3, r3
 8001364:	401a      	ands	r2, r3
 8001366:	687b      	ldr	r3, [r7, #4]
 8001368:	601a      	str	r2, [r3, #0]
 800136a:	687b      	ldr	r3, [r7, #4]
 800136c:	681a      	ldr	r2, [r3, #0]
 800136e:	683b      	ldr	r3, [r7, #0]
 8001370:	791b      	ldrb	r3, [r3, #4]
 8001372:	4619      	mov	r1, r3
 8001374:	697b      	ldr	r3, [r7, #20]
 8001376:	005b      	lsls	r3, r3, #1
 8001378:	fa01 f303 	lsl.w	r3, r1, r3
 800137c:	431a      	orrs	r2, r3
 800137e:	687b      	ldr	r3, [r7, #4]
 8001380:	601a      	str	r2, [r3, #0]
 8001382:	683b      	ldr	r3, [r7, #0]
 8001384:	791b      	ldrb	r3, [r3, #4]
 8001386:	2b01      	cmp	r3, #1
 8001388:	d003      	beq.n	8001392 <GPIO_Init+0x76>
 800138a:	683b      	ldr	r3, [r7, #0]
 800138c:	791b      	ldrb	r3, [r3, #4]
 800138e:	2b02      	cmp	r3, #2
 8001390:	d12e      	bne.n	80013f0 <GPIO_Init+0xd4>
 8001392:	687b      	ldr	r3, [r7, #4]
 8001394:	689a      	ldr	r2, [r3, #8]
 8001396:	697b      	ldr	r3, [r7, #20]
 8001398:	005b      	lsls	r3, r3, #1
 800139a:	2103      	movs	r1, #3
 800139c:	fa01 f303 	lsl.w	r3, r1, r3
 80013a0:	43db      	mvns	r3, r3
 80013a2:	401a      	ands	r2, r3
 80013a4:	687b      	ldr	r3, [r7, #4]
 80013a6:	609a      	str	r2, [r3, #8]
 80013a8:	687b      	ldr	r3, [r7, #4]
 80013aa:	689a      	ldr	r2, [r3, #8]
 80013ac:	683b      	ldr	r3, [r7, #0]
 80013ae:	795b      	ldrb	r3, [r3, #5]
 80013b0:	4619      	mov	r1, r3
 80013b2:	697b      	ldr	r3, [r7, #20]
 80013b4:	005b      	lsls	r3, r3, #1
 80013b6:	fa01 f303 	lsl.w	r3, r1, r3
 80013ba:	431a      	orrs	r2, r3
 80013bc:	687b      	ldr	r3, [r7, #4]
 80013be:	609a      	str	r2, [r3, #8]
 80013c0:	687b      	ldr	r3, [r7, #4]
 80013c2:	685a      	ldr	r2, [r3, #4]
 80013c4:	697b      	ldr	r3, [r7, #20]
 80013c6:	b29b      	uxth	r3, r3
 80013c8:	4619      	mov	r1, r3
 80013ca:	2301      	movs	r3, #1
 80013cc:	408b      	lsls	r3, r1
 80013ce:	43db      	mvns	r3, r3
 80013d0:	401a      	ands	r2, r3
 80013d2:	687b      	ldr	r3, [r7, #4]
 80013d4:	605a      	str	r2, [r3, #4]
 80013d6:	687b      	ldr	r3, [r7, #4]
 80013d8:	685b      	ldr	r3, [r3, #4]
 80013da:	683a      	ldr	r2, [r7, #0]
 80013dc:	7992      	ldrb	r2, [r2, #6]
 80013de:	4611      	mov	r1, r2
 80013e0:	697a      	ldr	r2, [r7, #20]
 80013e2:	b292      	uxth	r2, r2
 80013e4:	fa01 f202 	lsl.w	r2, r1, r2
 80013e8:	b292      	uxth	r2, r2
 80013ea:	431a      	orrs	r2, r3
 80013ec:	687b      	ldr	r3, [r7, #4]
 80013ee:	605a      	str	r2, [r3, #4]
 80013f0:	687b      	ldr	r3, [r7, #4]
 80013f2:	68da      	ldr	r2, [r3, #12]
 80013f4:	697b      	ldr	r3, [r7, #20]
 80013f6:	b29b      	uxth	r3, r3
 80013f8:	005b      	lsls	r3, r3, #1
 80013fa:	2103      	movs	r1, #3
 80013fc:	fa01 f303 	lsl.w	r3, r1, r3
 8001400:	43db      	mvns	r3, r3
 8001402:	401a      	ands	r2, r3
 8001404:	687b      	ldr	r3, [r7, #4]
 8001406:	60da      	str	r2, [r3, #12]
 8001408:	687b      	ldr	r3, [r7, #4]
 800140a:	68da      	ldr	r2, [r3, #12]
 800140c:	683b      	ldr	r3, [r7, #0]
 800140e:	79db      	ldrb	r3, [r3, #7]
 8001410:	4619      	mov	r1, r3
 8001412:	697b      	ldr	r3, [r7, #20]
 8001414:	005b      	lsls	r3, r3, #1
 8001416:	fa01 f303 	lsl.w	r3, r1, r3
 800141a:	431a      	orrs	r2, r3
 800141c:	687b      	ldr	r3, [r7, #4]
 800141e:	60da      	str	r2, [r3, #12]
 8001420:	697b      	ldr	r3, [r7, #20]
 8001422:	3301      	adds	r3, #1
 8001424:	617b      	str	r3, [r7, #20]
 8001426:	697b      	ldr	r3, [r7, #20]
 8001428:	2b0f      	cmp	r3, #15
 800142a:	d985      	bls.n	8001338 <GPIO_Init+0x1c>
 800142c:	bf00      	nop
 800142e:	371c      	adds	r7, #28
 8001430:	46bd      	mov	sp, r7
 8001432:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001436:	4770      	bx	lr

08001438 <GPIO_WriteBit>:
 8001438:	b480      	push	{r7}
 800143a:	b083      	sub	sp, #12
 800143c:	af00      	add	r7, sp, #0
 800143e:	6078      	str	r0, [r7, #4]
 8001440:	460b      	mov	r3, r1
 8001442:	807b      	strh	r3, [r7, #2]
 8001444:	4613      	mov	r3, r2
 8001446:	707b      	strb	r3, [r7, #1]
 8001448:	787b      	ldrb	r3, [r7, #1]
 800144a:	2b00      	cmp	r3, #0
 800144c:	d003      	beq.n	8001456 <GPIO_WriteBit+0x1e>
 800144e:	687b      	ldr	r3, [r7, #4]
 8001450:	887a      	ldrh	r2, [r7, #2]
 8001452:	831a      	strh	r2, [r3, #24]
 8001454:	e002      	b.n	800145c <GPIO_WriteBit+0x24>
 8001456:	687b      	ldr	r3, [r7, #4]
 8001458:	887a      	ldrh	r2, [r7, #2]
 800145a:	835a      	strh	r2, [r3, #26]
 800145c:	bf00      	nop
 800145e:	370c      	adds	r7, #12
 8001460:	46bd      	mov	sp, r7
 8001462:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001466:	4770      	bx	lr

08001468 <GPIO_PinAFConfig>:
 8001468:	b480      	push	{r7}
 800146a:	b085      	sub	sp, #20
 800146c:	af00      	add	r7, sp, #0
 800146e:	6078      	str	r0, [r7, #4]
 8001470:	460b      	mov	r3, r1
 8001472:	807b      	strh	r3, [r7, #2]
 8001474:	4613      	mov	r3, r2
 8001476:	707b      	strb	r3, [r7, #1]
 8001478:	2300      	movs	r3, #0
 800147a:	60fb      	str	r3, [r7, #12]
 800147c:	2300      	movs	r3, #0
 800147e:	60bb      	str	r3, [r7, #8]
 8001480:	787a      	ldrb	r2, [r7, #1]
 8001482:	887b      	ldrh	r3, [r7, #2]
 8001484:	f003 0307 	and.w	r3, r3, #7
 8001488:	009b      	lsls	r3, r3, #2
 800148a:	fa02 f303 	lsl.w	r3, r2, r3
 800148e:	60fb      	str	r3, [r7, #12]
 8001490:	887b      	ldrh	r3, [r7, #2]
 8001492:	08db      	lsrs	r3, r3, #3
 8001494:	b29b      	uxth	r3, r3
 8001496:	461a      	mov	r2, r3
 8001498:	687b      	ldr	r3, [r7, #4]
 800149a:	3208      	adds	r2, #8
 800149c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80014a0:	887b      	ldrh	r3, [r7, #2]
 80014a2:	f003 0307 	and.w	r3, r3, #7
 80014a6:	009b      	lsls	r3, r3, #2
 80014a8:	210f      	movs	r1, #15
 80014aa:	fa01 f303 	lsl.w	r3, r1, r3
 80014ae:	43db      	mvns	r3, r3
 80014b0:	8879      	ldrh	r1, [r7, #2]
 80014b2:	08c9      	lsrs	r1, r1, #3
 80014b4:	b289      	uxth	r1, r1
 80014b6:	4608      	mov	r0, r1
 80014b8:	ea02 0103 	and.w	r1, r2, r3
 80014bc:	687b      	ldr	r3, [r7, #4]
 80014be:	f100 0208 	add.w	r2, r0, #8
 80014c2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80014c6:	887b      	ldrh	r3, [r7, #2]
 80014c8:	08db      	lsrs	r3, r3, #3
 80014ca:	b29b      	uxth	r3, r3
 80014cc:	461a      	mov	r2, r3
 80014ce:	687b      	ldr	r3, [r7, #4]
 80014d0:	3208      	adds	r2, #8
 80014d2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80014d6:	68fa      	ldr	r2, [r7, #12]
 80014d8:	4313      	orrs	r3, r2
 80014da:	60bb      	str	r3, [r7, #8]
 80014dc:	887b      	ldrh	r3, [r7, #2]
 80014de:	08db      	lsrs	r3, r3, #3
 80014e0:	b29b      	uxth	r3, r3
 80014e2:	461a      	mov	r2, r3
 80014e4:	687b      	ldr	r3, [r7, #4]
 80014e6:	3208      	adds	r2, #8
 80014e8:	68b9      	ldr	r1, [r7, #8]
 80014ea:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80014ee:	bf00      	nop
 80014f0:	3714      	adds	r7, #20
 80014f2:	46bd      	mov	sp, r7
 80014f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014f8:	4770      	bx	lr
	...

080014fc <I2C_Init>:
 80014fc:	b580      	push	{r7, lr}
 80014fe:	b08a      	sub	sp, #40	; 0x28
 8001500:	af00      	add	r7, sp, #0
 8001502:	6078      	str	r0, [r7, #4]
 8001504:	6039      	str	r1, [r7, #0]
 8001506:	2300      	movs	r3, #0
 8001508:	84fb      	strh	r3, [r7, #38]	; 0x26
 800150a:	2300      	movs	r3, #0
 800150c:	847b      	strh	r3, [r7, #34]	; 0x22
 800150e:	2304      	movs	r3, #4
 8001510:	84bb      	strh	r3, [r7, #36]	; 0x24
 8001512:	4b57      	ldr	r3, [pc, #348]	; (8001670 <I2C_Init+0x174>)
 8001514:	61fb      	str	r3, [r7, #28]
 8001516:	687b      	ldr	r3, [r7, #4]
 8001518:	889b      	ldrh	r3, [r3, #4]
 800151a:	84fb      	strh	r3, [r7, #38]	; 0x26
 800151c:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800151e:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8001522:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001524:	f107 030c 	add.w	r3, r7, #12
 8001528:	4618      	mov	r0, r3
 800152a:	f000 f9c9 	bl	80018c0 <RCC_GetClocksFreq>
 800152e:	697b      	ldr	r3, [r7, #20]
 8001530:	61fb      	str	r3, [r7, #28]
 8001532:	69fb      	ldr	r3, [r7, #28]
 8001534:	4a4f      	ldr	r2, [pc, #316]	; (8001674 <I2C_Init+0x178>)
 8001536:	fba2 2303 	umull	r2, r3, r2, r3
 800153a:	0c9b      	lsrs	r3, r3, #18
 800153c:	847b      	strh	r3, [r7, #34]	; 0x22
 800153e:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8001540:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8001542:	4313      	orrs	r3, r2
 8001544:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001546:	687b      	ldr	r3, [r7, #4]
 8001548:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 800154a:	809a      	strh	r2, [r3, #4]
 800154c:	687b      	ldr	r3, [r7, #4]
 800154e:	881b      	ldrh	r3, [r3, #0]
 8001550:	b29b      	uxth	r3, r3
 8001552:	f023 0301 	bic.w	r3, r3, #1
 8001556:	b29a      	uxth	r2, r3
 8001558:	687b      	ldr	r3, [r7, #4]
 800155a:	801a      	strh	r2, [r3, #0]
 800155c:	2300      	movs	r3, #0
 800155e:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001560:	683b      	ldr	r3, [r7, #0]
 8001562:	681b      	ldr	r3, [r3, #0]
 8001564:	4a44      	ldr	r2, [pc, #272]	; (8001678 <I2C_Init+0x17c>)
 8001566:	4293      	cmp	r3, r2
 8001568:	d815      	bhi.n	8001596 <I2C_Init+0x9a>
 800156a:	683b      	ldr	r3, [r7, #0]
 800156c:	681b      	ldr	r3, [r3, #0]
 800156e:	005b      	lsls	r3, r3, #1
 8001570:	69fa      	ldr	r2, [r7, #28]
 8001572:	fbb2 f3f3 	udiv	r3, r2, r3
 8001576:	84bb      	strh	r3, [r7, #36]	; 0x24
 8001578:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 800157a:	2b03      	cmp	r3, #3
 800157c:	d801      	bhi.n	8001582 <I2C_Init+0x86>
 800157e:	2304      	movs	r3, #4
 8001580:	84bb      	strh	r3, [r7, #36]	; 0x24
 8001582:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8001584:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8001586:	4313      	orrs	r3, r2
 8001588:	84fb      	strh	r3, [r7, #38]	; 0x26
 800158a:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 800158c:	3301      	adds	r3, #1
 800158e:	b29a      	uxth	r2, r3
 8001590:	687b      	ldr	r3, [r7, #4]
 8001592:	841a      	strh	r2, [r3, #32]
 8001594:	e040      	b.n	8001618 <I2C_Init+0x11c>
 8001596:	683b      	ldr	r3, [r7, #0]
 8001598:	88db      	ldrh	r3, [r3, #6]
 800159a:	f64b 72ff 	movw	r2, #49151	; 0xbfff
 800159e:	4293      	cmp	r3, r2
 80015a0:	d109      	bne.n	80015b6 <I2C_Init+0xba>
 80015a2:	683b      	ldr	r3, [r7, #0]
 80015a4:	681a      	ldr	r2, [r3, #0]
 80015a6:	4613      	mov	r3, r2
 80015a8:	005b      	lsls	r3, r3, #1
 80015aa:	4413      	add	r3, r2
 80015ac:	69fa      	ldr	r2, [r7, #28]
 80015ae:	fbb2 f3f3 	udiv	r3, r2, r3
 80015b2:	84bb      	strh	r3, [r7, #36]	; 0x24
 80015b4:	e00e      	b.n	80015d4 <I2C_Init+0xd8>
 80015b6:	683b      	ldr	r3, [r7, #0]
 80015b8:	681a      	ldr	r2, [r3, #0]
 80015ba:	4613      	mov	r3, r2
 80015bc:	009b      	lsls	r3, r3, #2
 80015be:	4413      	add	r3, r2
 80015c0:	009a      	lsls	r2, r3, #2
 80015c2:	4413      	add	r3, r2
 80015c4:	69fa      	ldr	r2, [r7, #28]
 80015c6:	fbb2 f3f3 	udiv	r3, r2, r3
 80015ca:	84bb      	strh	r3, [r7, #36]	; 0x24
 80015cc:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80015ce:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80015d2:	84bb      	strh	r3, [r7, #36]	; 0x24
 80015d4:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80015d6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80015da:	2b00      	cmp	r3, #0
 80015dc:	d103      	bne.n	80015e6 <I2C_Init+0xea>
 80015de:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80015e0:	f043 0301 	orr.w	r3, r3, #1
 80015e4:	84bb      	strh	r3, [r7, #36]	; 0x24
 80015e6:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 80015e8:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 80015ea:	4313      	orrs	r3, r2
 80015ec:	b29b      	uxth	r3, r3
 80015ee:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80015f2:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80015f6:	84fb      	strh	r3, [r7, #38]	; 0x26
 80015f8:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 80015fa:	f44f 7296 	mov.w	r2, #300	; 0x12c
 80015fe:	fb02 f303 	mul.w	r3, r2, r3
 8001602:	4a1e      	ldr	r2, [pc, #120]	; (800167c <I2C_Init+0x180>)
 8001604:	fb82 1203 	smull	r1, r2, r2, r3
 8001608:	1192      	asrs	r2, r2, #6
 800160a:	17db      	asrs	r3, r3, #31
 800160c:	1ad3      	subs	r3, r2, r3
 800160e:	b29b      	uxth	r3, r3
 8001610:	3301      	adds	r3, #1
 8001612:	b29a      	uxth	r2, r3
 8001614:	687b      	ldr	r3, [r7, #4]
 8001616:	841a      	strh	r2, [r3, #32]
 8001618:	687b      	ldr	r3, [r7, #4]
 800161a:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 800161c:	839a      	strh	r2, [r3, #28]
 800161e:	687b      	ldr	r3, [r7, #4]
 8001620:	881b      	ldrh	r3, [r3, #0]
 8001622:	b29b      	uxth	r3, r3
 8001624:	f043 0301 	orr.w	r3, r3, #1
 8001628:	b29a      	uxth	r2, r3
 800162a:	687b      	ldr	r3, [r7, #4]
 800162c:	801a      	strh	r2, [r3, #0]
 800162e:	687b      	ldr	r3, [r7, #4]
 8001630:	881b      	ldrh	r3, [r3, #0]
 8001632:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001634:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8001636:	f423 6381 	bic.w	r3, r3, #1032	; 0x408
 800163a:	f023 0302 	bic.w	r3, r3, #2
 800163e:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001640:	683b      	ldr	r3, [r7, #0]
 8001642:	889a      	ldrh	r2, [r3, #4]
 8001644:	683b      	ldr	r3, [r7, #0]
 8001646:	895b      	ldrh	r3, [r3, #10]
 8001648:	4313      	orrs	r3, r2
 800164a:	b29a      	uxth	r2, r3
 800164c:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800164e:	4313      	orrs	r3, r2
 8001650:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001652:	687b      	ldr	r3, [r7, #4]
 8001654:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8001656:	801a      	strh	r2, [r3, #0]
 8001658:	683b      	ldr	r3, [r7, #0]
 800165a:	899a      	ldrh	r2, [r3, #12]
 800165c:	683b      	ldr	r3, [r7, #0]
 800165e:	891b      	ldrh	r3, [r3, #8]
 8001660:	4313      	orrs	r3, r2
 8001662:	b29a      	uxth	r2, r3
 8001664:	687b      	ldr	r3, [r7, #4]
 8001666:	811a      	strh	r2, [r3, #8]
 8001668:	bf00      	nop
 800166a:	3728      	adds	r7, #40	; 0x28
 800166c:	46bd      	mov	sp, r7
 800166e:	bd80      	pop	{r7, pc}
 8001670:	007a1200 	.word	0x007a1200
 8001674:	431bde83 	.word	0x431bde83
 8001678:	000186a0 	.word	0x000186a0
 800167c:	10624dd3 	.word	0x10624dd3

08001680 <I2C_Cmd>:
 8001680:	b480      	push	{r7}
 8001682:	b083      	sub	sp, #12
 8001684:	af00      	add	r7, sp, #0
 8001686:	6078      	str	r0, [r7, #4]
 8001688:	460b      	mov	r3, r1
 800168a:	70fb      	strb	r3, [r7, #3]
 800168c:	78fb      	ldrb	r3, [r7, #3]
 800168e:	2b00      	cmp	r3, #0
 8001690:	d008      	beq.n	80016a4 <I2C_Cmd+0x24>
 8001692:	687b      	ldr	r3, [r7, #4]
 8001694:	881b      	ldrh	r3, [r3, #0]
 8001696:	b29b      	uxth	r3, r3
 8001698:	f043 0301 	orr.w	r3, r3, #1
 800169c:	b29a      	uxth	r2, r3
 800169e:	687b      	ldr	r3, [r7, #4]
 80016a0:	801a      	strh	r2, [r3, #0]
 80016a2:	e007      	b.n	80016b4 <I2C_Cmd+0x34>
 80016a4:	687b      	ldr	r3, [r7, #4]
 80016a6:	881b      	ldrh	r3, [r3, #0]
 80016a8:	b29b      	uxth	r3, r3
 80016aa:	f023 0301 	bic.w	r3, r3, #1
 80016ae:	b29a      	uxth	r2, r3
 80016b0:	687b      	ldr	r3, [r7, #4]
 80016b2:	801a      	strh	r2, [r3, #0]
 80016b4:	bf00      	nop
 80016b6:	370c      	adds	r7, #12
 80016b8:	46bd      	mov	sp, r7
 80016ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016be:	4770      	bx	lr

080016c0 <I2C_GenerateSTART>:
 80016c0:	b480      	push	{r7}
 80016c2:	b083      	sub	sp, #12
 80016c4:	af00      	add	r7, sp, #0
 80016c6:	6078      	str	r0, [r7, #4]
 80016c8:	460b      	mov	r3, r1
 80016ca:	70fb      	strb	r3, [r7, #3]
 80016cc:	78fb      	ldrb	r3, [r7, #3]
 80016ce:	2b00      	cmp	r3, #0
 80016d0:	d008      	beq.n	80016e4 <I2C_GenerateSTART+0x24>
 80016d2:	687b      	ldr	r3, [r7, #4]
 80016d4:	881b      	ldrh	r3, [r3, #0]
 80016d6:	b29b      	uxth	r3, r3
 80016d8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80016dc:	b29a      	uxth	r2, r3
 80016de:	687b      	ldr	r3, [r7, #4]
 80016e0:	801a      	strh	r2, [r3, #0]
 80016e2:	e007      	b.n	80016f4 <I2C_GenerateSTART+0x34>
 80016e4:	687b      	ldr	r3, [r7, #4]
 80016e6:	881b      	ldrh	r3, [r3, #0]
 80016e8:	b29b      	uxth	r3, r3
 80016ea:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80016ee:	b29a      	uxth	r2, r3
 80016f0:	687b      	ldr	r3, [r7, #4]
 80016f2:	801a      	strh	r2, [r3, #0]
 80016f4:	bf00      	nop
 80016f6:	370c      	adds	r7, #12
 80016f8:	46bd      	mov	sp, r7
 80016fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016fe:	4770      	bx	lr

08001700 <I2C_GenerateSTOP>:
 8001700:	b480      	push	{r7}
 8001702:	b083      	sub	sp, #12
 8001704:	af00      	add	r7, sp, #0
 8001706:	6078      	str	r0, [r7, #4]
 8001708:	460b      	mov	r3, r1
 800170a:	70fb      	strb	r3, [r7, #3]
 800170c:	78fb      	ldrb	r3, [r7, #3]
 800170e:	2b00      	cmp	r3, #0
 8001710:	d008      	beq.n	8001724 <I2C_GenerateSTOP+0x24>
 8001712:	687b      	ldr	r3, [r7, #4]
 8001714:	881b      	ldrh	r3, [r3, #0]
 8001716:	b29b      	uxth	r3, r3
 8001718:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800171c:	b29a      	uxth	r2, r3
 800171e:	687b      	ldr	r3, [r7, #4]
 8001720:	801a      	strh	r2, [r3, #0]
 8001722:	e007      	b.n	8001734 <I2C_GenerateSTOP+0x34>
 8001724:	687b      	ldr	r3, [r7, #4]
 8001726:	881b      	ldrh	r3, [r3, #0]
 8001728:	b29b      	uxth	r3, r3
 800172a:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800172e:	b29a      	uxth	r2, r3
 8001730:	687b      	ldr	r3, [r7, #4]
 8001732:	801a      	strh	r2, [r3, #0]
 8001734:	bf00      	nop
 8001736:	370c      	adds	r7, #12
 8001738:	46bd      	mov	sp, r7
 800173a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800173e:	4770      	bx	lr

08001740 <I2C_Send7bitAddress>:
 8001740:	b480      	push	{r7}
 8001742:	b083      	sub	sp, #12
 8001744:	af00      	add	r7, sp, #0
 8001746:	6078      	str	r0, [r7, #4]
 8001748:	460b      	mov	r3, r1
 800174a:	70fb      	strb	r3, [r7, #3]
 800174c:	4613      	mov	r3, r2
 800174e:	70bb      	strb	r3, [r7, #2]
 8001750:	78bb      	ldrb	r3, [r7, #2]
 8001752:	2b00      	cmp	r3, #0
 8001754:	d004      	beq.n	8001760 <I2C_Send7bitAddress+0x20>
 8001756:	78fb      	ldrb	r3, [r7, #3]
 8001758:	f043 0301 	orr.w	r3, r3, #1
 800175c:	70fb      	strb	r3, [r7, #3]
 800175e:	e003      	b.n	8001768 <I2C_Send7bitAddress+0x28>
 8001760:	78fb      	ldrb	r3, [r7, #3]
 8001762:	f023 0301 	bic.w	r3, r3, #1
 8001766:	70fb      	strb	r3, [r7, #3]
 8001768:	78fb      	ldrb	r3, [r7, #3]
 800176a:	b29a      	uxth	r2, r3
 800176c:	687b      	ldr	r3, [r7, #4]
 800176e:	821a      	strh	r2, [r3, #16]
 8001770:	bf00      	nop
 8001772:	370c      	adds	r7, #12
 8001774:	46bd      	mov	sp, r7
 8001776:	f85d 7b04 	ldr.w	r7, [sp], #4
 800177a:	4770      	bx	lr

0800177c <I2C_AcknowledgeConfig>:
 800177c:	b480      	push	{r7}
 800177e:	b083      	sub	sp, #12
 8001780:	af00      	add	r7, sp, #0
 8001782:	6078      	str	r0, [r7, #4]
 8001784:	460b      	mov	r3, r1
 8001786:	70fb      	strb	r3, [r7, #3]
 8001788:	78fb      	ldrb	r3, [r7, #3]
 800178a:	2b00      	cmp	r3, #0
 800178c:	d008      	beq.n	80017a0 <I2C_AcknowledgeConfig+0x24>
 800178e:	687b      	ldr	r3, [r7, #4]
 8001790:	881b      	ldrh	r3, [r3, #0]
 8001792:	b29b      	uxth	r3, r3
 8001794:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001798:	b29a      	uxth	r2, r3
 800179a:	687b      	ldr	r3, [r7, #4]
 800179c:	801a      	strh	r2, [r3, #0]
 800179e:	e007      	b.n	80017b0 <I2C_AcknowledgeConfig+0x34>
 80017a0:	687b      	ldr	r3, [r7, #4]
 80017a2:	881b      	ldrh	r3, [r3, #0]
 80017a4:	b29b      	uxth	r3, r3
 80017a6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80017aa:	b29a      	uxth	r2, r3
 80017ac:	687b      	ldr	r3, [r7, #4]
 80017ae:	801a      	strh	r2, [r3, #0]
 80017b0:	bf00      	nop
 80017b2:	370c      	adds	r7, #12
 80017b4:	46bd      	mov	sp, r7
 80017b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017ba:	4770      	bx	lr

080017bc <I2C_SendData>:
 80017bc:	b480      	push	{r7}
 80017be:	b083      	sub	sp, #12
 80017c0:	af00      	add	r7, sp, #0
 80017c2:	6078      	str	r0, [r7, #4]
 80017c4:	460b      	mov	r3, r1
 80017c6:	70fb      	strb	r3, [r7, #3]
 80017c8:	78fb      	ldrb	r3, [r7, #3]
 80017ca:	b29a      	uxth	r2, r3
 80017cc:	687b      	ldr	r3, [r7, #4]
 80017ce:	821a      	strh	r2, [r3, #16]
 80017d0:	bf00      	nop
 80017d2:	370c      	adds	r7, #12
 80017d4:	46bd      	mov	sp, r7
 80017d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017da:	4770      	bx	lr

080017dc <I2C_ReceiveData>:
 80017dc:	b480      	push	{r7}
 80017de:	b083      	sub	sp, #12
 80017e0:	af00      	add	r7, sp, #0
 80017e2:	6078      	str	r0, [r7, #4]
 80017e4:	687b      	ldr	r3, [r7, #4]
 80017e6:	8a1b      	ldrh	r3, [r3, #16]
 80017e8:	b29b      	uxth	r3, r3
 80017ea:	b2db      	uxtb	r3, r3
 80017ec:	4618      	mov	r0, r3
 80017ee:	370c      	adds	r7, #12
 80017f0:	46bd      	mov	sp, r7
 80017f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017f6:	4770      	bx	lr

080017f8 <I2C_CheckEvent>:
 80017f8:	b480      	push	{r7}
 80017fa:	b087      	sub	sp, #28
 80017fc:	af00      	add	r7, sp, #0
 80017fe:	6078      	str	r0, [r7, #4]
 8001800:	6039      	str	r1, [r7, #0]
 8001802:	2300      	movs	r3, #0
 8001804:	613b      	str	r3, [r7, #16]
 8001806:	2300      	movs	r3, #0
 8001808:	60fb      	str	r3, [r7, #12]
 800180a:	2300      	movs	r3, #0
 800180c:	60bb      	str	r3, [r7, #8]
 800180e:	2300      	movs	r3, #0
 8001810:	75fb      	strb	r3, [r7, #23]
 8001812:	687b      	ldr	r3, [r7, #4]
 8001814:	8a9b      	ldrh	r3, [r3, #20]
 8001816:	b29b      	uxth	r3, r3
 8001818:	60fb      	str	r3, [r7, #12]
 800181a:	687b      	ldr	r3, [r7, #4]
 800181c:	8b1b      	ldrh	r3, [r3, #24]
 800181e:	b29b      	uxth	r3, r3
 8001820:	60bb      	str	r3, [r7, #8]
 8001822:	68bb      	ldr	r3, [r7, #8]
 8001824:	041b      	lsls	r3, r3, #16
 8001826:	60bb      	str	r3, [r7, #8]
 8001828:	68fa      	ldr	r2, [r7, #12]
 800182a:	68bb      	ldr	r3, [r7, #8]
 800182c:	4313      	orrs	r3, r2
 800182e:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8001832:	613b      	str	r3, [r7, #16]
 8001834:	693a      	ldr	r2, [r7, #16]
 8001836:	683b      	ldr	r3, [r7, #0]
 8001838:	4013      	ands	r3, r2
 800183a:	683a      	ldr	r2, [r7, #0]
 800183c:	429a      	cmp	r2, r3
 800183e:	d102      	bne.n	8001846 <I2C_CheckEvent+0x4e>
 8001840:	2301      	movs	r3, #1
 8001842:	75fb      	strb	r3, [r7, #23]
 8001844:	e001      	b.n	800184a <I2C_CheckEvent+0x52>
 8001846:	2300      	movs	r3, #0
 8001848:	75fb      	strb	r3, [r7, #23]
 800184a:	7dfb      	ldrb	r3, [r7, #23]
 800184c:	4618      	mov	r0, r3
 800184e:	371c      	adds	r7, #28
 8001850:	46bd      	mov	sp, r7
 8001852:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001856:	4770      	bx	lr

08001858 <I2C_GetFlagStatus>:
 8001858:	b480      	push	{r7}
 800185a:	b087      	sub	sp, #28
 800185c:	af00      	add	r7, sp, #0
 800185e:	6078      	str	r0, [r7, #4]
 8001860:	6039      	str	r1, [r7, #0]
 8001862:	2300      	movs	r3, #0
 8001864:	75fb      	strb	r3, [r7, #23]
 8001866:	2300      	movs	r3, #0
 8001868:	613b      	str	r3, [r7, #16]
 800186a:	2300      	movs	r3, #0
 800186c:	60fb      	str	r3, [r7, #12]
 800186e:	687b      	ldr	r3, [r7, #4]
 8001870:	60fb      	str	r3, [r7, #12]
 8001872:	683b      	ldr	r3, [r7, #0]
 8001874:	0f1b      	lsrs	r3, r3, #28
 8001876:	613b      	str	r3, [r7, #16]
 8001878:	683b      	ldr	r3, [r7, #0]
 800187a:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 800187e:	603b      	str	r3, [r7, #0]
 8001880:	693b      	ldr	r3, [r7, #16]
 8001882:	2b00      	cmp	r3, #0
 8001884:	d003      	beq.n	800188e <I2C_GetFlagStatus+0x36>
 8001886:	68fb      	ldr	r3, [r7, #12]
 8001888:	3314      	adds	r3, #20
 800188a:	60fb      	str	r3, [r7, #12]
 800188c:	e005      	b.n	800189a <I2C_GetFlagStatus+0x42>
 800188e:	683b      	ldr	r3, [r7, #0]
 8001890:	0c1b      	lsrs	r3, r3, #16
 8001892:	603b      	str	r3, [r7, #0]
 8001894:	68fb      	ldr	r3, [r7, #12]
 8001896:	3318      	adds	r3, #24
 8001898:	60fb      	str	r3, [r7, #12]
 800189a:	68fb      	ldr	r3, [r7, #12]
 800189c:	681a      	ldr	r2, [r3, #0]
 800189e:	683b      	ldr	r3, [r7, #0]
 80018a0:	4013      	ands	r3, r2
 80018a2:	2b00      	cmp	r3, #0
 80018a4:	d002      	beq.n	80018ac <I2C_GetFlagStatus+0x54>
 80018a6:	2301      	movs	r3, #1
 80018a8:	75fb      	strb	r3, [r7, #23]
 80018aa:	e001      	b.n	80018b0 <I2C_GetFlagStatus+0x58>
 80018ac:	2300      	movs	r3, #0
 80018ae:	75fb      	strb	r3, [r7, #23]
 80018b0:	7dfb      	ldrb	r3, [r7, #23]
 80018b2:	4618      	mov	r0, r3
 80018b4:	371c      	adds	r7, #28
 80018b6:	46bd      	mov	sp, r7
 80018b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018bc:	4770      	bx	lr
	...

080018c0 <RCC_GetClocksFreq>:
 80018c0:	b480      	push	{r7}
 80018c2:	b089      	sub	sp, #36	; 0x24
 80018c4:	af00      	add	r7, sp, #0
 80018c6:	6078      	str	r0, [r7, #4]
 80018c8:	2300      	movs	r3, #0
 80018ca:	61bb      	str	r3, [r7, #24]
 80018cc:	2300      	movs	r3, #0
 80018ce:	617b      	str	r3, [r7, #20]
 80018d0:	2300      	movs	r3, #0
 80018d2:	61fb      	str	r3, [r7, #28]
 80018d4:	2302      	movs	r3, #2
 80018d6:	613b      	str	r3, [r7, #16]
 80018d8:	2300      	movs	r3, #0
 80018da:	60fb      	str	r3, [r7, #12]
 80018dc:	2302      	movs	r3, #2
 80018de:	60bb      	str	r3, [r7, #8]
 80018e0:	4b47      	ldr	r3, [pc, #284]	; (8001a00 <RCC_GetClocksFreq+0x140>)
 80018e2:	689b      	ldr	r3, [r3, #8]
 80018e4:	f003 030c 	and.w	r3, r3, #12
 80018e8:	61bb      	str	r3, [r7, #24]
 80018ea:	69bb      	ldr	r3, [r7, #24]
 80018ec:	2b04      	cmp	r3, #4
 80018ee:	d007      	beq.n	8001900 <RCC_GetClocksFreq+0x40>
 80018f0:	2b08      	cmp	r3, #8
 80018f2:	d009      	beq.n	8001908 <RCC_GetClocksFreq+0x48>
 80018f4:	2b00      	cmp	r3, #0
 80018f6:	d13d      	bne.n	8001974 <RCC_GetClocksFreq+0xb4>
 80018f8:	687b      	ldr	r3, [r7, #4]
 80018fa:	4a42      	ldr	r2, [pc, #264]	; (8001a04 <RCC_GetClocksFreq+0x144>)
 80018fc:	601a      	str	r2, [r3, #0]
 80018fe:	e03d      	b.n	800197c <RCC_GetClocksFreq+0xbc>
 8001900:	687b      	ldr	r3, [r7, #4]
 8001902:	4a41      	ldr	r2, [pc, #260]	; (8001a08 <RCC_GetClocksFreq+0x148>)
 8001904:	601a      	str	r2, [r3, #0]
 8001906:	e039      	b.n	800197c <RCC_GetClocksFreq+0xbc>
 8001908:	4b3d      	ldr	r3, [pc, #244]	; (8001a00 <RCC_GetClocksFreq+0x140>)
 800190a:	685b      	ldr	r3, [r3, #4]
 800190c:	0d9b      	lsrs	r3, r3, #22
 800190e:	f003 0301 	and.w	r3, r3, #1
 8001912:	60fb      	str	r3, [r7, #12]
 8001914:	4b3a      	ldr	r3, [pc, #232]	; (8001a00 <RCC_GetClocksFreq+0x140>)
 8001916:	685b      	ldr	r3, [r3, #4]
 8001918:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800191c:	60bb      	str	r3, [r7, #8]
 800191e:	68fb      	ldr	r3, [r7, #12]
 8001920:	2b00      	cmp	r3, #0
 8001922:	d00c      	beq.n	800193e <RCC_GetClocksFreq+0x7e>
 8001924:	4a38      	ldr	r2, [pc, #224]	; (8001a08 <RCC_GetClocksFreq+0x148>)
 8001926:	68bb      	ldr	r3, [r7, #8]
 8001928:	fbb2 f3f3 	udiv	r3, r2, r3
 800192c:	4a34      	ldr	r2, [pc, #208]	; (8001a00 <RCC_GetClocksFreq+0x140>)
 800192e:	6852      	ldr	r2, [r2, #4]
 8001930:	0992      	lsrs	r2, r2, #6
 8001932:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001936:	fb02 f303 	mul.w	r3, r2, r3
 800193a:	61fb      	str	r3, [r7, #28]
 800193c:	e00b      	b.n	8001956 <RCC_GetClocksFreq+0x96>
 800193e:	4a31      	ldr	r2, [pc, #196]	; (8001a04 <RCC_GetClocksFreq+0x144>)
 8001940:	68bb      	ldr	r3, [r7, #8]
 8001942:	fbb2 f3f3 	udiv	r3, r2, r3
 8001946:	4a2e      	ldr	r2, [pc, #184]	; (8001a00 <RCC_GetClocksFreq+0x140>)
 8001948:	6852      	ldr	r2, [r2, #4]
 800194a:	0992      	lsrs	r2, r2, #6
 800194c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001950:	fb02 f303 	mul.w	r3, r2, r3
 8001954:	61fb      	str	r3, [r7, #28]
 8001956:	4b2a      	ldr	r3, [pc, #168]	; (8001a00 <RCC_GetClocksFreq+0x140>)
 8001958:	685b      	ldr	r3, [r3, #4]
 800195a:	0c1b      	lsrs	r3, r3, #16
 800195c:	f003 0303 	and.w	r3, r3, #3
 8001960:	3301      	adds	r3, #1
 8001962:	005b      	lsls	r3, r3, #1
 8001964:	613b      	str	r3, [r7, #16]
 8001966:	69fa      	ldr	r2, [r7, #28]
 8001968:	693b      	ldr	r3, [r7, #16]
 800196a:	fbb2 f2f3 	udiv	r2, r2, r3
 800196e:	687b      	ldr	r3, [r7, #4]
 8001970:	601a      	str	r2, [r3, #0]
 8001972:	e003      	b.n	800197c <RCC_GetClocksFreq+0xbc>
 8001974:	687b      	ldr	r3, [r7, #4]
 8001976:	4a23      	ldr	r2, [pc, #140]	; (8001a04 <RCC_GetClocksFreq+0x144>)
 8001978:	601a      	str	r2, [r3, #0]
 800197a:	bf00      	nop
 800197c:	4b20      	ldr	r3, [pc, #128]	; (8001a00 <RCC_GetClocksFreq+0x140>)
 800197e:	689b      	ldr	r3, [r3, #8]
 8001980:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8001984:	61bb      	str	r3, [r7, #24]
 8001986:	69bb      	ldr	r3, [r7, #24]
 8001988:	091b      	lsrs	r3, r3, #4
 800198a:	61bb      	str	r3, [r7, #24]
 800198c:	4a1f      	ldr	r2, [pc, #124]	; (8001a0c <RCC_GetClocksFreq+0x14c>)
 800198e:	69bb      	ldr	r3, [r7, #24]
 8001990:	4413      	add	r3, r2
 8001992:	781b      	ldrb	r3, [r3, #0]
 8001994:	b2db      	uxtb	r3, r3
 8001996:	617b      	str	r3, [r7, #20]
 8001998:	687b      	ldr	r3, [r7, #4]
 800199a:	681a      	ldr	r2, [r3, #0]
 800199c:	697b      	ldr	r3, [r7, #20]
 800199e:	40da      	lsrs	r2, r3
 80019a0:	687b      	ldr	r3, [r7, #4]
 80019a2:	605a      	str	r2, [r3, #4]
 80019a4:	4b16      	ldr	r3, [pc, #88]	; (8001a00 <RCC_GetClocksFreq+0x140>)
 80019a6:	689b      	ldr	r3, [r3, #8]
 80019a8:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 80019ac:	61bb      	str	r3, [r7, #24]
 80019ae:	69bb      	ldr	r3, [r7, #24]
 80019b0:	0a9b      	lsrs	r3, r3, #10
 80019b2:	61bb      	str	r3, [r7, #24]
 80019b4:	4a15      	ldr	r2, [pc, #84]	; (8001a0c <RCC_GetClocksFreq+0x14c>)
 80019b6:	69bb      	ldr	r3, [r7, #24]
 80019b8:	4413      	add	r3, r2
 80019ba:	781b      	ldrb	r3, [r3, #0]
 80019bc:	b2db      	uxtb	r3, r3
 80019be:	617b      	str	r3, [r7, #20]
 80019c0:	687b      	ldr	r3, [r7, #4]
 80019c2:	685a      	ldr	r2, [r3, #4]
 80019c4:	697b      	ldr	r3, [r7, #20]
 80019c6:	40da      	lsrs	r2, r3
 80019c8:	687b      	ldr	r3, [r7, #4]
 80019ca:	609a      	str	r2, [r3, #8]
 80019cc:	4b0c      	ldr	r3, [pc, #48]	; (8001a00 <RCC_GetClocksFreq+0x140>)
 80019ce:	689b      	ldr	r3, [r3, #8]
 80019d0:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 80019d4:	61bb      	str	r3, [r7, #24]
 80019d6:	69bb      	ldr	r3, [r7, #24]
 80019d8:	0b5b      	lsrs	r3, r3, #13
 80019da:	61bb      	str	r3, [r7, #24]
 80019dc:	4a0b      	ldr	r2, [pc, #44]	; (8001a0c <RCC_GetClocksFreq+0x14c>)
 80019de:	69bb      	ldr	r3, [r7, #24]
 80019e0:	4413      	add	r3, r2
 80019e2:	781b      	ldrb	r3, [r3, #0]
 80019e4:	b2db      	uxtb	r3, r3
 80019e6:	617b      	str	r3, [r7, #20]
 80019e8:	687b      	ldr	r3, [r7, #4]
 80019ea:	685a      	ldr	r2, [r3, #4]
 80019ec:	697b      	ldr	r3, [r7, #20]
 80019ee:	40da      	lsrs	r2, r3
 80019f0:	687b      	ldr	r3, [r7, #4]
 80019f2:	60da      	str	r2, [r3, #12]
 80019f4:	bf00      	nop
 80019f6:	3724      	adds	r7, #36	; 0x24
 80019f8:	46bd      	mov	sp, r7
 80019fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019fe:	4770      	bx	lr
 8001a00:	40023800 	.word	0x40023800
 8001a04:	00f42400 	.word	0x00f42400
 8001a08:	017d7840 	.word	0x017d7840
 8001a0c:	20000014 	.word	0x20000014

08001a10 <RCC_AHB1PeriphClockCmd>:
 8001a10:	b480      	push	{r7}
 8001a12:	b083      	sub	sp, #12
 8001a14:	af00      	add	r7, sp, #0
 8001a16:	6078      	str	r0, [r7, #4]
 8001a18:	460b      	mov	r3, r1
 8001a1a:	70fb      	strb	r3, [r7, #3]
 8001a1c:	78fb      	ldrb	r3, [r7, #3]
 8001a1e:	2b00      	cmp	r3, #0
 8001a20:	d006      	beq.n	8001a30 <RCC_AHB1PeriphClockCmd+0x20>
 8001a22:	4b0a      	ldr	r3, [pc, #40]	; (8001a4c <RCC_AHB1PeriphClockCmd+0x3c>)
 8001a24:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a26:	4909      	ldr	r1, [pc, #36]	; (8001a4c <RCC_AHB1PeriphClockCmd+0x3c>)
 8001a28:	687b      	ldr	r3, [r7, #4]
 8001a2a:	4313      	orrs	r3, r2
 8001a2c:	630b      	str	r3, [r1, #48]	; 0x30
 8001a2e:	e006      	b.n	8001a3e <RCC_AHB1PeriphClockCmd+0x2e>
 8001a30:	4b06      	ldr	r3, [pc, #24]	; (8001a4c <RCC_AHB1PeriphClockCmd+0x3c>)
 8001a32:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a34:	687b      	ldr	r3, [r7, #4]
 8001a36:	43db      	mvns	r3, r3
 8001a38:	4904      	ldr	r1, [pc, #16]	; (8001a4c <RCC_AHB1PeriphClockCmd+0x3c>)
 8001a3a:	4013      	ands	r3, r2
 8001a3c:	630b      	str	r3, [r1, #48]	; 0x30
 8001a3e:	bf00      	nop
 8001a40:	370c      	adds	r7, #12
 8001a42:	46bd      	mov	sp, r7
 8001a44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a48:	4770      	bx	lr
 8001a4a:	bf00      	nop
 8001a4c:	40023800 	.word	0x40023800

08001a50 <RCC_APB1PeriphClockCmd>:
 8001a50:	b480      	push	{r7}
 8001a52:	b083      	sub	sp, #12
 8001a54:	af00      	add	r7, sp, #0
 8001a56:	6078      	str	r0, [r7, #4]
 8001a58:	460b      	mov	r3, r1
 8001a5a:	70fb      	strb	r3, [r7, #3]
 8001a5c:	78fb      	ldrb	r3, [r7, #3]
 8001a5e:	2b00      	cmp	r3, #0
 8001a60:	d006      	beq.n	8001a70 <RCC_APB1PeriphClockCmd+0x20>
 8001a62:	4b0a      	ldr	r3, [pc, #40]	; (8001a8c <RCC_APB1PeriphClockCmd+0x3c>)
 8001a64:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001a66:	4909      	ldr	r1, [pc, #36]	; (8001a8c <RCC_APB1PeriphClockCmd+0x3c>)
 8001a68:	687b      	ldr	r3, [r7, #4]
 8001a6a:	4313      	orrs	r3, r2
 8001a6c:	640b      	str	r3, [r1, #64]	; 0x40
 8001a6e:	e006      	b.n	8001a7e <RCC_APB1PeriphClockCmd+0x2e>
 8001a70:	4b06      	ldr	r3, [pc, #24]	; (8001a8c <RCC_APB1PeriphClockCmd+0x3c>)
 8001a72:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001a74:	687b      	ldr	r3, [r7, #4]
 8001a76:	43db      	mvns	r3, r3
 8001a78:	4904      	ldr	r1, [pc, #16]	; (8001a8c <RCC_APB1PeriphClockCmd+0x3c>)
 8001a7a:	4013      	ands	r3, r2
 8001a7c:	640b      	str	r3, [r1, #64]	; 0x40
 8001a7e:	bf00      	nop
 8001a80:	370c      	adds	r7, #12
 8001a82:	46bd      	mov	sp, r7
 8001a84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a88:	4770      	bx	lr
 8001a8a:	bf00      	nop
 8001a8c:	40023800 	.word	0x40023800

08001a90 <NVIC_SetPriority>:
 8001a90:	b480      	push	{r7}
 8001a92:	b083      	sub	sp, #12
 8001a94:	af00      	add	r7, sp, #0
 8001a96:	4603      	mov	r3, r0
 8001a98:	6039      	str	r1, [r7, #0]
 8001a9a:	71fb      	strb	r3, [r7, #7]
 8001a9c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001aa0:	2b00      	cmp	r3, #0
 8001aa2:	da0b      	bge.n	8001abc <NVIC_SetPriority+0x2c>
 8001aa4:	683b      	ldr	r3, [r7, #0]
 8001aa6:	b2da      	uxtb	r2, r3
 8001aa8:	490c      	ldr	r1, [pc, #48]	; (8001adc <NVIC_SetPriority+0x4c>)
 8001aaa:	79fb      	ldrb	r3, [r7, #7]
 8001aac:	f003 030f 	and.w	r3, r3, #15
 8001ab0:	3b04      	subs	r3, #4
 8001ab2:	0112      	lsls	r2, r2, #4
 8001ab4:	b2d2      	uxtb	r2, r2
 8001ab6:	440b      	add	r3, r1
 8001ab8:	761a      	strb	r2, [r3, #24]
 8001aba:	e009      	b.n	8001ad0 <NVIC_SetPriority+0x40>
 8001abc:	683b      	ldr	r3, [r7, #0]
 8001abe:	b2da      	uxtb	r2, r3
 8001ac0:	4907      	ldr	r1, [pc, #28]	; (8001ae0 <NVIC_SetPriority+0x50>)
 8001ac2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001ac6:	0112      	lsls	r2, r2, #4
 8001ac8:	b2d2      	uxtb	r2, r2
 8001aca:	440b      	add	r3, r1
 8001acc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001ad0:	bf00      	nop
 8001ad2:	370c      	adds	r7, #12
 8001ad4:	46bd      	mov	sp, r7
 8001ad6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ada:	4770      	bx	lr
 8001adc:	e000ed00 	.word	0xe000ed00
 8001ae0:	e000e100 	.word	0xe000e100

08001ae4 <SysTick_Config>:
 8001ae4:	b580      	push	{r7, lr}
 8001ae6:	b082      	sub	sp, #8
 8001ae8:	af00      	add	r7, sp, #0
 8001aea:	6078      	str	r0, [r7, #4]
 8001aec:	687b      	ldr	r3, [r7, #4]
 8001aee:	3b01      	subs	r3, #1
 8001af0:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001af4:	d301      	bcc.n	8001afa <SysTick_Config+0x16>
 8001af6:	2301      	movs	r3, #1
 8001af8:	e00f      	b.n	8001b1a <SysTick_Config+0x36>
 8001afa:	4a0a      	ldr	r2, [pc, #40]	; (8001b24 <SysTick_Config+0x40>)
 8001afc:	687b      	ldr	r3, [r7, #4]
 8001afe:	3b01      	subs	r3, #1
 8001b00:	6053      	str	r3, [r2, #4]
 8001b02:	210f      	movs	r1, #15
 8001b04:	f04f 30ff 	mov.w	r0, #4294967295
 8001b08:	f7ff ffc2 	bl	8001a90 <NVIC_SetPriority>
 8001b0c:	4b05      	ldr	r3, [pc, #20]	; (8001b24 <SysTick_Config+0x40>)
 8001b0e:	2200      	movs	r2, #0
 8001b10:	609a      	str	r2, [r3, #8]
 8001b12:	4b04      	ldr	r3, [pc, #16]	; (8001b24 <SysTick_Config+0x40>)
 8001b14:	2207      	movs	r2, #7
 8001b16:	601a      	str	r2, [r3, #0]
 8001b18:	2300      	movs	r3, #0
 8001b1a:	4618      	mov	r0, r3
 8001b1c:	3708      	adds	r7, #8
 8001b1e:	46bd      	mov	sp, r7
 8001b20:	bd80      	pop	{r7, pc}
 8001b22:	bf00      	nop
 8001b24:	e000e010 	.word	0xe000e010

08001b28 <TimerInit>:
 8001b28:	b580      	push	{r7, lr}
 8001b2a:	b084      	sub	sp, #16
 8001b2c:	af00      	add	r7, sp, #0
 8001b2e:	463b      	mov	r3, r7
 8001b30:	4618      	mov	r0, r3
 8001b32:	f7ff fec5 	bl	80018c0 <RCC_GetClocksFreq>
 8001b36:	683b      	ldr	r3, [r7, #0]
 8001b38:	4a0a      	ldr	r2, [pc, #40]	; (8001b64 <TimerInit+0x3c>)
 8001b3a:	fba2 2303 	umull	r2, r3, r2, r3
 8001b3e:	099b      	lsrs	r3, r3, #6
 8001b40:	4618      	mov	r0, r3
 8001b42:	f7ff ffcf 	bl	8001ae4 <SysTick_Config>
 8001b46:	2101      	movs	r1, #1
 8001b48:	f04f 30ff 	mov.w	r0, #4294967295
 8001b4c:	f7ff ffa0 	bl	8001a90 <NVIC_SetPriority>
 8001b50:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8001b54:	2100      	movs	r1, #0
 8001b56:	4804      	ldr	r0, [pc, #16]	; (8001b68 <TimerInit+0x40>)
 8001b58:	f7fe fc8d 	bl	8000476 <memsetl>
 8001b5c:	bf00      	nop
 8001b5e:	3710      	adds	r7, #16
 8001b60:	46bd      	mov	sp, r7
 8001b62:	bd80      	pop	{r7, pc}
 8001b64:	10624dd3 	.word	0x10624dd3
 8001b68:	200001b0 	.word	0x200001b0

08001b6c <TimerStart>:
 8001b6c:	b590      	push	{r4, r7, lr}
 8001b6e:	b087      	sub	sp, #28
 8001b70:	af00      	add	r7, sp, #0
 8001b72:	60f8      	str	r0, [r7, #12]
 8001b74:	60b9      	str	r1, [r7, #8]
 8001b76:	603b      	str	r3, [r7, #0]
 8001b78:	4613      	mov	r3, r2
 8001b7a:	71fb      	strb	r3, [r7, #7]
 8001b7c:	2300      	movs	r3, #0
 8001b7e:	75fb      	strb	r3, [r7, #23]
 8001b80:	e04c      	b.n	8001c1c <TimerStart+0xb0>
 8001b82:	7dfa      	ldrb	r2, [r7, #23]
 8001b84:	4929      	ldr	r1, [pc, #164]	; (8001c2c <TimerStart+0xc0>)
 8001b86:	4613      	mov	r3, r2
 8001b88:	005b      	lsls	r3, r3, #1
 8001b8a:	4413      	add	r3, r2
 8001b8c:	00db      	lsls	r3, r3, #3
 8001b8e:	440b      	add	r3, r1
 8001b90:	3310      	adds	r3, #16
 8001b92:	681b      	ldr	r3, [r3, #0]
 8001b94:	2b00      	cmp	r3, #0
 8001b96:	d13e      	bne.n	8001c16 <TimerStart+0xaa>
 8001b98:	7dfa      	ldrb	r2, [r7, #23]
 8001b9a:	4924      	ldr	r1, [pc, #144]	; (8001c2c <TimerStart+0xc0>)
 8001b9c:	4613      	mov	r3, r2
 8001b9e:	005b      	lsls	r3, r3, #1
 8001ba0:	4413      	add	r3, r2
 8001ba2:	00db      	lsls	r3, r3, #3
 8001ba4:	440b      	add	r3, r1
 8001ba6:	68fa      	ldr	r2, [r7, #12]
 8001ba8:	601a      	str	r2, [r3, #0]
 8001baa:	7dfa      	ldrb	r2, [r7, #23]
 8001bac:	491f      	ldr	r1, [pc, #124]	; (8001c2c <TimerStart+0xc0>)
 8001bae:	4613      	mov	r3, r2
 8001bb0:	005b      	lsls	r3, r3, #1
 8001bb2:	4413      	add	r3, r2
 8001bb4:	00db      	lsls	r3, r3, #3
 8001bb6:	440b      	add	r3, r1
 8001bb8:	3310      	adds	r3, #16
 8001bba:	683a      	ldr	r2, [r7, #0]
 8001bbc:	601a      	str	r2, [r3, #0]
 8001bbe:	7dfa      	ldrb	r2, [r7, #23]
 8001bc0:	491a      	ldr	r1, [pc, #104]	; (8001c2c <TimerStart+0xc0>)
 8001bc2:	4613      	mov	r3, r2
 8001bc4:	005b      	lsls	r3, r3, #1
 8001bc6:	4413      	add	r3, r2
 8001bc8:	00db      	lsls	r3, r3, #3
 8001bca:	440b      	add	r3, r1
 8001bcc:	330c      	adds	r3, #12
 8001bce:	79fa      	ldrb	r2, [r7, #7]
 8001bd0:	701a      	strb	r2, [r3, #0]
 8001bd2:	7dfa      	ldrb	r2, [r7, #23]
 8001bd4:	4915      	ldr	r1, [pc, #84]	; (8001c2c <TimerStart+0xc0>)
 8001bd6:	4613      	mov	r3, r2
 8001bd8:	005b      	lsls	r3, r3, #1
 8001bda:	4413      	add	r3, r2
 8001bdc:	00db      	lsls	r3, r3, #3
 8001bde:	440b      	add	r3, r1
 8001be0:	3314      	adds	r3, #20
 8001be2:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8001be4:	601a      	str	r2, [r3, #0]
 8001be6:	7dfc      	ldrb	r4, [r7, #23]
 8001be8:	f000 f872 	bl	8001cd0 <GetMilSecTick>
 8001bec:	4601      	mov	r1, r0
 8001bee:	4a0f      	ldr	r2, [pc, #60]	; (8001c2c <TimerStart+0xc0>)
 8001bf0:	4623      	mov	r3, r4
 8001bf2:	005b      	lsls	r3, r3, #1
 8001bf4:	4423      	add	r3, r4
 8001bf6:	00db      	lsls	r3, r3, #3
 8001bf8:	4413      	add	r3, r2
 8001bfa:	3304      	adds	r3, #4
 8001bfc:	6019      	str	r1, [r3, #0]
 8001bfe:	7dfa      	ldrb	r2, [r7, #23]
 8001c00:	490a      	ldr	r1, [pc, #40]	; (8001c2c <TimerStart+0xc0>)
 8001c02:	4613      	mov	r3, r2
 8001c04:	005b      	lsls	r3, r3, #1
 8001c06:	4413      	add	r3, r2
 8001c08:	00db      	lsls	r3, r3, #3
 8001c0a:	440b      	add	r3, r1
 8001c0c:	3308      	adds	r3, #8
 8001c0e:	68ba      	ldr	r2, [r7, #8]
 8001c10:	601a      	str	r2, [r3, #0]
 8001c12:	7dfb      	ldrb	r3, [r7, #23]
 8001c14:	e006      	b.n	8001c24 <TimerStart+0xb8>
 8001c16:	7dfb      	ldrb	r3, [r7, #23]
 8001c18:	3301      	adds	r3, #1
 8001c1a:	75fb      	strb	r3, [r7, #23]
 8001c1c:	7dfb      	ldrb	r3, [r7, #23]
 8001c1e:	2b0f      	cmp	r3, #15
 8001c20:	d9af      	bls.n	8001b82 <TimerStart+0x16>
 8001c22:	23ff      	movs	r3, #255	; 0xff
 8001c24:	4618      	mov	r0, r3
 8001c26:	371c      	adds	r7, #28
 8001c28:	46bd      	mov	sp, r7
 8001c2a:	bd90      	pop	{r4, r7, pc}
 8001c2c:	200001b0 	.word	0x200001b0

08001c30 <TimerStop>:
 8001c30:	b480      	push	{r7}
 8001c32:	b083      	sub	sp, #12
 8001c34:	af00      	add	r7, sp, #0
 8001c36:	4603      	mov	r3, r0
 8001c38:	71fb      	strb	r3, [r7, #7]
 8001c3a:	79fb      	ldrb	r3, [r7, #7]
 8001c3c:	2b0f      	cmp	r3, #15
 8001c3e:	d80a      	bhi.n	8001c56 <TimerStop+0x26>
 8001c40:	79fa      	ldrb	r2, [r7, #7]
 8001c42:	4922      	ldr	r1, [pc, #136]	; (8001ccc <TimerStop+0x9c>)
 8001c44:	4613      	mov	r3, r2
 8001c46:	005b      	lsls	r3, r3, #1
 8001c48:	4413      	add	r3, r2
 8001c4a:	00db      	lsls	r3, r3, #3
 8001c4c:	440b      	add	r3, r1
 8001c4e:	3310      	adds	r3, #16
 8001c50:	681b      	ldr	r3, [r3, #0]
 8001c52:	2b00      	cmp	r3, #0
 8001c54:	d101      	bne.n	8001c5a <TimerStop+0x2a>
 8001c56:	2300      	movs	r3, #0
 8001c58:	e031      	b.n	8001cbe <TimerStop+0x8e>
 8001c5a:	79fa      	ldrb	r2, [r7, #7]
 8001c5c:	491b      	ldr	r1, [pc, #108]	; (8001ccc <TimerStop+0x9c>)
 8001c5e:	4613      	mov	r3, r2
 8001c60:	005b      	lsls	r3, r3, #1
 8001c62:	4413      	add	r3, r2
 8001c64:	00db      	lsls	r3, r3, #3
 8001c66:	440b      	add	r3, r1
 8001c68:	2200      	movs	r2, #0
 8001c6a:	601a      	str	r2, [r3, #0]
 8001c6c:	79fa      	ldrb	r2, [r7, #7]
 8001c6e:	4917      	ldr	r1, [pc, #92]	; (8001ccc <TimerStop+0x9c>)
 8001c70:	4613      	mov	r3, r2
 8001c72:	005b      	lsls	r3, r3, #1
 8001c74:	4413      	add	r3, r2
 8001c76:	00db      	lsls	r3, r3, #3
 8001c78:	440b      	add	r3, r1
 8001c7a:	3310      	adds	r3, #16
 8001c7c:	2200      	movs	r2, #0
 8001c7e:	601a      	str	r2, [r3, #0]
 8001c80:	79fa      	ldrb	r2, [r7, #7]
 8001c82:	4912      	ldr	r1, [pc, #72]	; (8001ccc <TimerStop+0x9c>)
 8001c84:	4613      	mov	r3, r2
 8001c86:	005b      	lsls	r3, r3, #1
 8001c88:	4413      	add	r3, r2
 8001c8a:	00db      	lsls	r3, r3, #3
 8001c8c:	440b      	add	r3, r1
 8001c8e:	330c      	adds	r3, #12
 8001c90:	2200      	movs	r2, #0
 8001c92:	701a      	strb	r2, [r3, #0]
 8001c94:	79fa      	ldrb	r2, [r7, #7]
 8001c96:	490d      	ldr	r1, [pc, #52]	; (8001ccc <TimerStop+0x9c>)
 8001c98:	4613      	mov	r3, r2
 8001c9a:	005b      	lsls	r3, r3, #1
 8001c9c:	4413      	add	r3, r2
 8001c9e:	00db      	lsls	r3, r3, #3
 8001ca0:	440b      	add	r3, r1
 8001ca2:	3308      	adds	r3, #8
 8001ca4:	2200      	movs	r2, #0
 8001ca6:	601a      	str	r2, [r3, #0]
 8001ca8:	79fa      	ldrb	r2, [r7, #7]
 8001caa:	4908      	ldr	r1, [pc, #32]	; (8001ccc <TimerStop+0x9c>)
 8001cac:	4613      	mov	r3, r2
 8001cae:	005b      	lsls	r3, r3, #1
 8001cb0:	4413      	add	r3, r2
 8001cb2:	00db      	lsls	r3, r3, #3
 8001cb4:	440b      	add	r3, r1
 8001cb6:	3304      	adds	r3, #4
 8001cb8:	2200      	movs	r2, #0
 8001cba:	601a      	str	r2, [r3, #0]
 8001cbc:	2301      	movs	r3, #1
 8001cbe:	4618      	mov	r0, r3
 8001cc0:	370c      	adds	r7, #12
 8001cc2:	46bd      	mov	sp, r7
 8001cc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cc8:	4770      	bx	lr
 8001cca:	bf00      	nop
 8001ccc:	200001b0 	.word	0x200001b0

08001cd0 <GetMilSecTick>:
 8001cd0:	b480      	push	{r7}
 8001cd2:	af00      	add	r7, sp, #0
 8001cd4:	4b03      	ldr	r3, [pc, #12]	; (8001ce4 <GetMilSecTick+0x14>)
 8001cd6:	681b      	ldr	r3, [r3, #0]
 8001cd8:	4618      	mov	r0, r3
 8001cda:	46bd      	mov	sp, r7
 8001cdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ce0:	4770      	bx	lr
 8001ce2:	bf00      	nop
 8001ce4:	20000330 	.word	0x20000330

08001ce8 <processTimerScheduler>:
 8001ce8:	b580      	push	{r7, lr}
 8001cea:	b084      	sub	sp, #16
 8001cec:	af00      	add	r7, sp, #0
 8001cee:	2300      	movs	r3, #0
 8001cf0:	73fb      	strb	r3, [r7, #15]
 8001cf2:	e068      	b.n	8001dc6 <processTimerScheduler+0xde>
 8001cf4:	7bfa      	ldrb	r2, [r7, #15]
 8001cf6:	4937      	ldr	r1, [pc, #220]	; (8001dd4 <processTimerScheduler+0xec>)
 8001cf8:	4613      	mov	r3, r2
 8001cfa:	005b      	lsls	r3, r3, #1
 8001cfc:	4413      	add	r3, r2
 8001cfe:	00db      	lsls	r3, r3, #3
 8001d00:	440b      	add	r3, r1
 8001d02:	3310      	adds	r3, #16
 8001d04:	681b      	ldr	r3, [r3, #0]
 8001d06:	2b00      	cmp	r3, #0
 8001d08:	d05a      	beq.n	8001dc0 <processTimerScheduler+0xd8>
 8001d0a:	7bfb      	ldrb	r3, [r7, #15]
 8001d0c:	4618      	mov	r0, r3
 8001d0e:	f000 f863 	bl	8001dd8 <TimeExpired>
 8001d12:	4603      	mov	r3, r0
 8001d14:	2b00      	cmp	r3, #0
 8001d16:	d053      	beq.n	8001dc0 <processTimerScheduler+0xd8>
 8001d18:	7bfa      	ldrb	r2, [r7, #15]
 8001d1a:	492e      	ldr	r1, [pc, #184]	; (8001dd4 <processTimerScheduler+0xec>)
 8001d1c:	4613      	mov	r3, r2
 8001d1e:	005b      	lsls	r3, r3, #1
 8001d20:	4413      	add	r3, r2
 8001d22:	00db      	lsls	r3, r3, #3
 8001d24:	440b      	add	r3, r1
 8001d26:	3310      	adds	r3, #16
 8001d28:	681b      	ldr	r3, [r3, #0]
 8001d2a:	60bb      	str	r3, [r7, #8]
 8001d2c:	7bfa      	ldrb	r2, [r7, #15]
 8001d2e:	4929      	ldr	r1, [pc, #164]	; (8001dd4 <processTimerScheduler+0xec>)
 8001d30:	4613      	mov	r3, r2
 8001d32:	005b      	lsls	r3, r3, #1
 8001d34:	4413      	add	r3, r2
 8001d36:	00db      	lsls	r3, r3, #3
 8001d38:	440b      	add	r3, r1
 8001d3a:	3314      	adds	r3, #20
 8001d3c:	681b      	ldr	r3, [r3, #0]
 8001d3e:	607b      	str	r3, [r7, #4]
 8001d40:	7bfa      	ldrb	r2, [r7, #15]
 8001d42:	4924      	ldr	r1, [pc, #144]	; (8001dd4 <processTimerScheduler+0xec>)
 8001d44:	4613      	mov	r3, r2
 8001d46:	005b      	lsls	r3, r3, #1
 8001d48:	4413      	add	r3, r2
 8001d4a:	00db      	lsls	r3, r3, #3
 8001d4c:	440b      	add	r3, r1
 8001d4e:	330c      	adds	r3, #12
 8001d50:	781b      	ldrb	r3, [r3, #0]
 8001d52:	b2db      	uxtb	r3, r3
 8001d54:	2bff      	cmp	r3, #255	; 0xff
 8001d56:	d020      	beq.n	8001d9a <processTimerScheduler+0xb2>
 8001d58:	7bfa      	ldrb	r2, [r7, #15]
 8001d5a:	491e      	ldr	r1, [pc, #120]	; (8001dd4 <processTimerScheduler+0xec>)
 8001d5c:	4613      	mov	r3, r2
 8001d5e:	005b      	lsls	r3, r3, #1
 8001d60:	4413      	add	r3, r2
 8001d62:	00db      	lsls	r3, r3, #3
 8001d64:	440b      	add	r3, r1
 8001d66:	330c      	adds	r3, #12
 8001d68:	781b      	ldrb	r3, [r3, #0]
 8001d6a:	b2db      	uxtb	r3, r3
 8001d6c:	2b00      	cmp	r3, #0
 8001d6e:	d014      	beq.n	8001d9a <processTimerScheduler+0xb2>
 8001d70:	7bfa      	ldrb	r2, [r7, #15]
 8001d72:	4918      	ldr	r1, [pc, #96]	; (8001dd4 <processTimerScheduler+0xec>)
 8001d74:	4613      	mov	r3, r2
 8001d76:	005b      	lsls	r3, r3, #1
 8001d78:	4413      	add	r3, r2
 8001d7a:	00db      	lsls	r3, r3, #3
 8001d7c:	440b      	add	r3, r1
 8001d7e:	330c      	adds	r3, #12
 8001d80:	781b      	ldrb	r3, [r3, #0]
 8001d82:	b2db      	uxtb	r3, r3
 8001d84:	3b01      	subs	r3, #1
 8001d86:	b2d8      	uxtb	r0, r3
 8001d88:	4912      	ldr	r1, [pc, #72]	; (8001dd4 <processTimerScheduler+0xec>)
 8001d8a:	4613      	mov	r3, r2
 8001d8c:	005b      	lsls	r3, r3, #1
 8001d8e:	4413      	add	r3, r2
 8001d90:	00db      	lsls	r3, r3, #3
 8001d92:	440b      	add	r3, r1
 8001d94:	330c      	adds	r3, #12
 8001d96:	4602      	mov	r2, r0
 8001d98:	701a      	strb	r2, [r3, #0]
 8001d9a:	7bfa      	ldrb	r2, [r7, #15]
 8001d9c:	490d      	ldr	r1, [pc, #52]	; (8001dd4 <processTimerScheduler+0xec>)
 8001d9e:	4613      	mov	r3, r2
 8001da0:	005b      	lsls	r3, r3, #1
 8001da2:	4413      	add	r3, r2
 8001da4:	00db      	lsls	r3, r3, #3
 8001da6:	440b      	add	r3, r1
 8001da8:	330c      	adds	r3, #12
 8001daa:	781b      	ldrb	r3, [r3, #0]
 8001dac:	b2db      	uxtb	r3, r3
 8001dae:	2b00      	cmp	r3, #0
 8001db0:	d103      	bne.n	8001dba <processTimerScheduler+0xd2>
 8001db2:	7bfb      	ldrb	r3, [r7, #15]
 8001db4:	4618      	mov	r0, r3
 8001db6:	f7ff ff3b 	bl	8001c30 <TimerStop>
 8001dba:	68bb      	ldr	r3, [r7, #8]
 8001dbc:	6878      	ldr	r0, [r7, #4]
 8001dbe:	4798      	blx	r3
 8001dc0:	7bfb      	ldrb	r3, [r7, #15]
 8001dc2:	3301      	adds	r3, #1
 8001dc4:	73fb      	strb	r3, [r7, #15]
 8001dc6:	7bfb      	ldrb	r3, [r7, #15]
 8001dc8:	2b0f      	cmp	r3, #15
 8001dca:	d993      	bls.n	8001cf4 <processTimerScheduler+0xc>
 8001dcc:	bf00      	nop
 8001dce:	3710      	adds	r7, #16
 8001dd0:	46bd      	mov	sp, r7
 8001dd2:	bd80      	pop	{r7, pc}
 8001dd4:	200001b0 	.word	0x200001b0

08001dd8 <TimeExpired>:
 8001dd8:	b580      	push	{r7, lr}
 8001dda:	b084      	sub	sp, #16
 8001ddc:	af00      	add	r7, sp, #0
 8001dde:	4603      	mov	r3, r0
 8001de0:	71fb      	strb	r3, [r7, #7]
 8001de2:	2300      	movs	r3, #0
 8001de4:	60fb      	str	r3, [r7, #12]
 8001de6:	b672      	cpsid	i
 8001de8:	f7ff ff72 	bl	8001cd0 <GetMilSecTick>
 8001dec:	60b8      	str	r0, [r7, #8]
 8001dee:	79fb      	ldrb	r3, [r7, #7]
 8001df0:	2b0f      	cmp	r3, #15
 8001df2:	d80a      	bhi.n	8001e0a <TimeExpired+0x32>
 8001df4:	79fa      	ldrb	r2, [r7, #7]
 8001df6:	492a      	ldr	r1, [pc, #168]	; (8001ea0 <TimeExpired+0xc8>)
 8001df8:	4613      	mov	r3, r2
 8001dfa:	005b      	lsls	r3, r3, #1
 8001dfc:	4413      	add	r3, r2
 8001dfe:	00db      	lsls	r3, r3, #3
 8001e00:	440b      	add	r3, r1
 8001e02:	3310      	adds	r3, #16
 8001e04:	681b      	ldr	r3, [r3, #0]
 8001e06:	2b00      	cmp	r3, #0
 8001e08:	d102      	bne.n	8001e10 <TimeExpired+0x38>
 8001e0a:	b662      	cpsie	i
 8001e0c:	2300      	movs	r3, #0
 8001e0e:	e042      	b.n	8001e96 <TimeExpired+0xbe>
 8001e10:	79fa      	ldrb	r2, [r7, #7]
 8001e12:	4923      	ldr	r1, [pc, #140]	; (8001ea0 <TimeExpired+0xc8>)
 8001e14:	4613      	mov	r3, r2
 8001e16:	005b      	lsls	r3, r3, #1
 8001e18:	4413      	add	r3, r2
 8001e1a:	00db      	lsls	r3, r3, #3
 8001e1c:	440b      	add	r3, r1
 8001e1e:	3304      	adds	r3, #4
 8001e20:	681b      	ldr	r3, [r3, #0]
 8001e22:	68ba      	ldr	r2, [r7, #8]
 8001e24:	429a      	cmp	r2, r3
 8001e26:	d30c      	bcc.n	8001e42 <TimeExpired+0x6a>
 8001e28:	79fa      	ldrb	r2, [r7, #7]
 8001e2a:	491d      	ldr	r1, [pc, #116]	; (8001ea0 <TimeExpired+0xc8>)
 8001e2c:	4613      	mov	r3, r2
 8001e2e:	005b      	lsls	r3, r3, #1
 8001e30:	4413      	add	r3, r2
 8001e32:	00db      	lsls	r3, r3, #3
 8001e34:	440b      	add	r3, r1
 8001e36:	3304      	adds	r3, #4
 8001e38:	681b      	ldr	r3, [r3, #0]
 8001e3a:	68ba      	ldr	r2, [r7, #8]
 8001e3c:	1ad3      	subs	r3, r2, r3
 8001e3e:	60fb      	str	r3, [r7, #12]
 8001e40:	e00e      	b.n	8001e60 <TimeExpired+0x88>
 8001e42:	79fa      	ldrb	r2, [r7, #7]
 8001e44:	4916      	ldr	r1, [pc, #88]	; (8001ea0 <TimeExpired+0xc8>)
 8001e46:	4613      	mov	r3, r2
 8001e48:	005b      	lsls	r3, r3, #1
 8001e4a:	4413      	add	r3, r2
 8001e4c:	00db      	lsls	r3, r3, #3
 8001e4e:	440b      	add	r3, r1
 8001e50:	3304      	adds	r3, #4
 8001e52:	681a      	ldr	r2, [r3, #0]
 8001e54:	68bb      	ldr	r3, [r7, #8]
 8001e56:	1ad3      	subs	r3, r2, r3
 8001e58:	60fb      	str	r3, [r7, #12]
 8001e5a:	68fb      	ldr	r3, [r7, #12]
 8001e5c:	43db      	mvns	r3, r3
 8001e5e:	60fb      	str	r3, [r7, #12]
 8001e60:	79fa      	ldrb	r2, [r7, #7]
 8001e62:	490f      	ldr	r1, [pc, #60]	; (8001ea0 <TimeExpired+0xc8>)
 8001e64:	4613      	mov	r3, r2
 8001e66:	005b      	lsls	r3, r3, #1
 8001e68:	4413      	add	r3, r2
 8001e6a:	00db      	lsls	r3, r3, #3
 8001e6c:	440b      	add	r3, r1
 8001e6e:	3308      	adds	r3, #8
 8001e70:	681b      	ldr	r3, [r3, #0]
 8001e72:	68fa      	ldr	r2, [r7, #12]
 8001e74:	429a      	cmp	r2, r3
 8001e76:	d202      	bcs.n	8001e7e <TimeExpired+0xa6>
 8001e78:	b662      	cpsie	i
 8001e7a:	2300      	movs	r3, #0
 8001e7c:	e00b      	b.n	8001e96 <TimeExpired+0xbe>
 8001e7e:	79fa      	ldrb	r2, [r7, #7]
 8001e80:	4907      	ldr	r1, [pc, #28]	; (8001ea0 <TimeExpired+0xc8>)
 8001e82:	4613      	mov	r3, r2
 8001e84:	005b      	lsls	r3, r3, #1
 8001e86:	4413      	add	r3, r2
 8001e88:	00db      	lsls	r3, r3, #3
 8001e8a:	440b      	add	r3, r1
 8001e8c:	3304      	adds	r3, #4
 8001e8e:	68ba      	ldr	r2, [r7, #8]
 8001e90:	601a      	str	r2, [r3, #0]
 8001e92:	b662      	cpsie	i
 8001e94:	2301      	movs	r3, #1
 8001e96:	4618      	mov	r0, r3
 8001e98:	3710      	adds	r7, #16
 8001e9a:	46bd      	mov	sp, r7
 8001e9c:	bd80      	pop	{r7, pc}
 8001e9e:	bf00      	nop
 8001ea0:	200001b0 	.word	0x200001b0

08001ea4 <SysTick_Handler>:
 8001ea4:	b480      	push	{r7}
 8001ea6:	af00      	add	r7, sp, #0
 8001ea8:	4b04      	ldr	r3, [pc, #16]	; (8001ebc <SysTick_Handler+0x18>)
 8001eaa:	681b      	ldr	r3, [r3, #0]
 8001eac:	3301      	adds	r3, #1
 8001eae:	4a03      	ldr	r2, [pc, #12]	; (8001ebc <SysTick_Handler+0x18>)
 8001eb0:	6013      	str	r3, [r2, #0]
 8001eb2:	bf00      	nop
 8001eb4:	46bd      	mov	sp, r7
 8001eb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eba:	4770      	bx	lr
 8001ebc:	20000330 	.word	0x20000330

08001ec0 <TemHumSensor_Init>:
 8001ec0:	b580      	push	{r7, lr}
 8001ec2:	af00      	add	r7, sp, #0
 8001ec4:	f000 f802 	bl	8001ecc <i2c_config>
 8001ec8:	bf00      	nop
 8001eca:	bd80      	pop	{r7, pc}

08001ecc <i2c_config>:
 8001ecc:	b580      	push	{r7, lr}
 8001ece:	b086      	sub	sp, #24
 8001ed0:	af00      	add	r7, sp, #0
 8001ed2:	2101      	movs	r1, #1
 8001ed4:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
 8001ed8:	f7ff fdba 	bl	8001a50 <RCC_APB1PeriphClockCmd>
 8001edc:	4b1d      	ldr	r3, [pc, #116]	; (8001f54 <i2c_config+0x88>)
 8001ede:	60bb      	str	r3, [r7, #8]
 8001ee0:	2300      	movs	r3, #0
 8001ee2:	81bb      	strh	r3, [r7, #12]
 8001ee4:	f64b 73ff 	movw	r3, #49151	; 0xbfff
 8001ee8:	81fb      	strh	r3, [r7, #14]
 8001eea:	2300      	movs	r3, #0
 8001eec:	823b      	strh	r3, [r7, #16]
 8001eee:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001ef2:	827b      	strh	r3, [r7, #18]
 8001ef4:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001ef8:	82bb      	strh	r3, [r7, #20]
 8001efa:	f107 0308 	add.w	r3, r7, #8
 8001efe:	4619      	mov	r1, r3
 8001f00:	4815      	ldr	r0, [pc, #84]	; (8001f58 <i2c_config+0x8c>)
 8001f02:	f7ff fafb 	bl	80014fc <I2C_Init>
 8001f06:	2101      	movs	r1, #1
 8001f08:	4813      	ldr	r0, [pc, #76]	; (8001f58 <i2c_config+0x8c>)
 8001f0a:	f7ff fbb9 	bl	8001680 <I2C_Cmd>
 8001f0e:	2101      	movs	r1, #1
 8001f10:	2002      	movs	r0, #2
 8001f12:	f7ff fd7d 	bl	8001a10 <RCC_AHB1PeriphClockCmd>
 8001f16:	f44f 7340 	mov.w	r3, #768	; 0x300
 8001f1a:	603b      	str	r3, [r7, #0]
 8001f1c:	2302      	movs	r3, #2
 8001f1e:	713b      	strb	r3, [r7, #4]
 8001f20:	2302      	movs	r3, #2
 8001f22:	717b      	strb	r3, [r7, #5]
 8001f24:	2301      	movs	r3, #1
 8001f26:	71bb      	strb	r3, [r7, #6]
 8001f28:	2300      	movs	r3, #0
 8001f2a:	71fb      	strb	r3, [r7, #7]
 8001f2c:	463b      	mov	r3, r7
 8001f2e:	4619      	mov	r1, r3
 8001f30:	480a      	ldr	r0, [pc, #40]	; (8001f5c <i2c_config+0x90>)
 8001f32:	f7ff f9f3 	bl	800131c <GPIO_Init>
 8001f36:	2204      	movs	r2, #4
 8001f38:	2108      	movs	r1, #8
 8001f3a:	4808      	ldr	r0, [pc, #32]	; (8001f5c <i2c_config+0x90>)
 8001f3c:	f7ff fa94 	bl	8001468 <GPIO_PinAFConfig>
 8001f40:	2204      	movs	r2, #4
 8001f42:	2109      	movs	r1, #9
 8001f44:	4805      	ldr	r0, [pc, #20]	; (8001f5c <i2c_config+0x90>)
 8001f46:	f7ff fa8f 	bl	8001468 <GPIO_PinAFConfig>
 8001f4a:	bf00      	nop
 8001f4c:	3718      	adds	r7, #24
 8001f4e:	46bd      	mov	sp, r7
 8001f50:	bd80      	pop	{r7, pc}
 8001f52:	bf00      	nop
 8001f54:	00061a80 	.word	0x00061a80
 8001f58:	40005400 	.word	0x40005400
 8001f5c:	40020400 	.word	0x40020400

08001f60 <USART2_IRQHandler>:
 8001f60:	b580      	push	{r7, lr}
 8001f62:	b082      	sub	sp, #8
 8001f64:	af00      	add	r7, sp, #0
 8001f66:	b672      	cpsid	i
 8001f68:	f240 5125 	movw	r1, #1317	; 0x525
 8001f6c:	480e      	ldr	r0, [pc, #56]	; (8001fa8 <USART2_IRQHandler+0x48>)
 8001f6e:	f001 fced 	bl	800394c <USART_GetITStatus>
 8001f72:	4603      	mov	r3, r0
 8001f74:	2b01      	cmp	r3, #1
 8001f76:	d112      	bne.n	8001f9e <USART2_IRQHandler+0x3e>
 8001f78:	4b0c      	ldr	r3, [pc, #48]	; (8001fac <USART2_IRQHandler+0x4c>)
 8001f7a:	681b      	ldr	r3, [r3, #0]
 8001f7c:	607b      	str	r3, [r7, #4]
 8001f7e:	480a      	ldr	r0, [pc, #40]	; (8001fa8 <USART2_IRQHandler+0x48>)
 8001f80:	f001 fcd4 	bl	800392c <USART_ReceiveData>
 8001f84:	4603      	mov	r3, r0
 8001f86:	b2db      	uxtb	r3, r3
 8001f88:	70fb      	strb	r3, [r7, #3]
 8001f8a:	1cfb      	adds	r3, r7, #3
 8001f8c:	4619      	mov	r1, r3
 8001f8e:	6878      	ldr	r0, [r7, #4]
 8001f90:	f7fe f9dc 	bl	800034c <bufEnDat>
 8001f94:	f240 5125 	movw	r1, #1317	; 0x525
 8001f98:	4803      	ldr	r0, [pc, #12]	; (8001fa8 <USART2_IRQHandler+0x48>)
 8001f9a:	f001 fd32 	bl	8003a02 <USART_ClearITPendingBit>
 8001f9e:	b662      	cpsie	i
 8001fa0:	bf00      	nop
 8001fa2:	3708      	adds	r7, #8
 8001fa4:	46bd      	mov	sp, r7
 8001fa6:	bd80      	pop	{r7, pc}
 8001fa8:	40004400 	.word	0x40004400
 8001fac:	20000334 	.word	0x20000334

08001fb0 <delayMicroseconds>:
 8001fb0:	b480      	push	{r7}
 8001fb2:	b083      	sub	sp, #12
 8001fb4:	af00      	add	r7, sp, #0
 8001fb6:	6078      	str	r0, [r7, #4]
 8001fb8:	bf00      	nop
 8001fba:	370c      	adds	r7, #12
 8001fbc:	46bd      	mov	sp, r7
 8001fbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fc2:	4770      	bx	lr

08001fc4 <ucg_gpio_init>:
 8001fc4:	b580      	push	{r7, lr}
 8001fc6:	b082      	sub	sp, #8
 8001fc8:	af00      	add	r7, sp, #0
 8001fca:	2101      	movs	r1, #1
 8001fcc:	2007      	movs	r0, #7
 8001fce:	f7ff fd1f 	bl	8001a10 <RCC_AHB1PeriphClockCmd>
 8001fd2:	2301      	movs	r3, #1
 8001fd4:	713b      	strb	r3, [r7, #4]
 8001fd6:	2303      	movs	r3, #3
 8001fd8:	717b      	strb	r3, [r7, #5]
 8001fda:	2300      	movs	r3, #0
 8001fdc:	71bb      	strb	r3, [r7, #6]
 8001fde:	2300      	movs	r3, #0
 8001fe0:	71fb      	strb	r3, [r7, #7]
 8001fe2:	f44f 7368 	mov.w	r3, #928	; 0x3a0
 8001fe6:	603b      	str	r3, [r7, #0]
 8001fe8:	463b      	mov	r3, r7
 8001fea:	4619      	mov	r1, r3
 8001fec:	480a      	ldr	r0, [pc, #40]	; (8002018 <ucg_gpio_init+0x54>)
 8001fee:	f7ff f995 	bl	800131c <GPIO_Init>
 8001ff2:	f44f 6388 	mov.w	r3, #1088	; 0x440
 8001ff6:	603b      	str	r3, [r7, #0]
 8001ff8:	463b      	mov	r3, r7
 8001ffa:	4619      	mov	r1, r3
 8001ffc:	4807      	ldr	r0, [pc, #28]	; (800201c <ucg_gpio_init+0x58>)
 8001ffe:	f7ff f98d 	bl	800131c <GPIO_Init>
 8002002:	2380      	movs	r3, #128	; 0x80
 8002004:	603b      	str	r3, [r7, #0]
 8002006:	463b      	mov	r3, r7
 8002008:	4619      	mov	r1, r3
 800200a:	4805      	ldr	r0, [pc, #20]	; (8002020 <ucg_gpio_init+0x5c>)
 800200c:	f7ff f986 	bl	800131c <GPIO_Init>
 8002010:	bf00      	nop
 8002012:	3708      	adds	r7, #8
 8002014:	46bd      	mov	sp, r7
 8002016:	bd80      	pop	{r7, pc}
 8002018:	40020000 	.word	0x40020000
 800201c:	40020400 	.word	0x40020400
 8002020:	40020800 	.word	0x40020800

08002024 <ucg_com_arduino_send_generic_SW_SPI>:
 8002024:	b580      	push	{r7, lr}
 8002026:	b084      	sub	sp, #16
 8002028:	af00      	add	r7, sp, #0
 800202a:	6078      	str	r0, [r7, #4]
 800202c:	460b      	mov	r3, r1
 800202e:	70fb      	strb	r3, [r7, #3]
 8002030:	2308      	movs	r3, #8
 8002032:	73fb      	strb	r3, [r7, #15]
 8002034:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8002038:	2b00      	cmp	r3, #0
 800203a:	da05      	bge.n	8002048 <ucg_com_arduino_send_generic_SW_SPI+0x24>
 800203c:	2201      	movs	r2, #1
 800203e:	2180      	movs	r1, #128	; 0x80
 8002040:	4814      	ldr	r0, [pc, #80]	; (8002094 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8002042:	f7ff f9f9 	bl	8001438 <GPIO_WriteBit>
 8002046:	e004      	b.n	8002052 <ucg_com_arduino_send_generic_SW_SPI+0x2e>
 8002048:	2200      	movs	r2, #0
 800204a:	2180      	movs	r1, #128	; 0x80
 800204c:	4811      	ldr	r0, [pc, #68]	; (8002094 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 800204e:	f7ff f9f3 	bl	8001438 <GPIO_WriteBit>
 8002052:	2001      	movs	r0, #1
 8002054:	f7ff ffac 	bl	8001fb0 <delayMicroseconds>
 8002058:	2201      	movs	r2, #1
 800205a:	2120      	movs	r1, #32
 800205c:	480d      	ldr	r0, [pc, #52]	; (8002094 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 800205e:	f7ff f9eb 	bl	8001438 <GPIO_WriteBit>
 8002062:	2001      	movs	r0, #1
 8002064:	f7ff ffa4 	bl	8001fb0 <delayMicroseconds>
 8002068:	7bfb      	ldrb	r3, [r7, #15]
 800206a:	3b01      	subs	r3, #1
 800206c:	73fb      	strb	r3, [r7, #15]
 800206e:	2200      	movs	r2, #0
 8002070:	2120      	movs	r1, #32
 8002072:	4808      	ldr	r0, [pc, #32]	; (8002094 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8002074:	f7ff f9e0 	bl	8001438 <GPIO_WriteBit>
 8002078:	2001      	movs	r0, #1
 800207a:	f7ff ff99 	bl	8001fb0 <delayMicroseconds>
 800207e:	78fb      	ldrb	r3, [r7, #3]
 8002080:	005b      	lsls	r3, r3, #1
 8002082:	70fb      	strb	r3, [r7, #3]
 8002084:	7bfb      	ldrb	r3, [r7, #15]
 8002086:	2b00      	cmp	r3, #0
 8002088:	d1d4      	bne.n	8002034 <ucg_com_arduino_send_generic_SW_SPI+0x10>
 800208a:	bf00      	nop
 800208c:	3710      	adds	r7, #16
 800208e:	46bd      	mov	sp, r7
 8002090:	bd80      	pop	{r7, pc}
 8002092:	bf00      	nop
 8002094:	40020000 	.word	0x40020000

08002098 <ucg_com_arduino_generic_SW_SPI>:
 8002098:	b580      	push	{r7, lr}
 800209a:	b084      	sub	sp, #16
 800209c:	af00      	add	r7, sp, #0
 800209e:	60f8      	str	r0, [r7, #12]
 80020a0:	607b      	str	r3, [r7, #4]
 80020a2:	460b      	mov	r3, r1
 80020a4:	817b      	strh	r3, [r7, #10]
 80020a6:	4613      	mov	r3, r2
 80020a8:	813b      	strh	r3, [r7, #8]
 80020aa:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80020ae:	3b0a      	subs	r3, #10
 80020b0:	2b0b      	cmp	r3, #11
 80020b2:	f200 80dc 	bhi.w	800226e <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80020b6:	a201      	add	r2, pc, #4	; (adr r2, 80020bc <ucg_com_arduino_generic_SW_SPI+0x24>)
 80020b8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80020bc:	080020ed 	.word	0x080020ed
 80020c0:	0800226f 	.word	0x0800226f
 80020c4:	0800213f 	.word	0x0800213f
 80020c8:	08002149 	.word	0x08002149
 80020cc:	08002159 	.word	0x08002159
 80020d0:	08002169 	.word	0x08002169
 80020d4:	0800217b 	.word	0x0800217b
 80020d8:	0800219b 	.word	0x0800219b
 80020dc:	080021c3 	.word	0x080021c3
 80020e0:	080021f9 	.word	0x080021f9
 80020e4:	08002217 	.word	0x08002217
 80020e8:	08002267 	.word	0x08002267
 80020ec:	f7ff ff6a 	bl	8001fc4 <ucg_gpio_init>
 80020f0:	2201      	movs	r2, #1
 80020f2:	2180      	movs	r1, #128	; 0x80
 80020f4:	4860      	ldr	r0, [pc, #384]	; (8002278 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 80020f6:	f7ff f99f 	bl	8001438 <GPIO_WriteBit>
 80020fa:	2201      	movs	r2, #1
 80020fc:	2140      	movs	r1, #64	; 0x40
 80020fe:	485f      	ldr	r0, [pc, #380]	; (800227c <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 8002100:	f7ff f99a 	bl	8001438 <GPIO_WriteBit>
 8002104:	2201      	movs	r2, #1
 8002106:	2180      	movs	r1, #128	; 0x80
 8002108:	485d      	ldr	r0, [pc, #372]	; (8002280 <ucg_com_arduino_generic_SW_SPI+0x1e8>)
 800210a:	f7ff f995 	bl	8001438 <GPIO_WriteBit>
 800210e:	2201      	movs	r2, #1
 8002110:	f44f 7100 	mov.w	r1, #512	; 0x200
 8002114:	4858      	ldr	r0, [pc, #352]	; (8002278 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8002116:	f7ff f98f 	bl	8001438 <GPIO_WriteBit>
 800211a:	2200      	movs	r2, #0
 800211c:	2120      	movs	r1, #32
 800211e:	4856      	ldr	r0, [pc, #344]	; (8002278 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8002120:	f7ff f98a 	bl	8001438 <GPIO_WriteBit>
 8002124:	2201      	movs	r2, #1
 8002126:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800212a:	4854      	ldr	r0, [pc, #336]	; (800227c <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 800212c:	f7ff f984 	bl	8001438 <GPIO_WriteBit>
 8002130:	2201      	movs	r2, #1
 8002132:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002136:	4850      	ldr	r0, [pc, #320]	; (8002278 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8002138:	f7ff f97e 	bl	8001438 <GPIO_WriteBit>
 800213c:	e097      	b.n	800226e <ucg_com_arduino_generic_SW_SPI+0x1d6>
 800213e:	893b      	ldrh	r3, [r7, #8]
 8002140:	4618      	mov	r0, r3
 8002142:	f7ff ff35 	bl	8001fb0 <delayMicroseconds>
 8002146:	e092      	b.n	800226e <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002148:	893b      	ldrh	r3, [r7, #8]
 800214a:	b2db      	uxtb	r3, r3
 800214c:	461a      	mov	r2, r3
 800214e:	2180      	movs	r1, #128	; 0x80
 8002150:	484b      	ldr	r0, [pc, #300]	; (8002280 <ucg_com_arduino_generic_SW_SPI+0x1e8>)
 8002152:	f7ff f971 	bl	8001438 <GPIO_WriteBit>
 8002156:	e08a      	b.n	800226e <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002158:	893b      	ldrh	r3, [r7, #8]
 800215a:	b2db      	uxtb	r3, r3
 800215c:	461a      	mov	r2, r3
 800215e:	2140      	movs	r1, #64	; 0x40
 8002160:	4846      	ldr	r0, [pc, #280]	; (800227c <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 8002162:	f7ff f969 	bl	8001438 <GPIO_WriteBit>
 8002166:	e082      	b.n	800226e <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002168:	893b      	ldrh	r3, [r7, #8]
 800216a:	b2db      	uxtb	r3, r3
 800216c:	461a      	mov	r2, r3
 800216e:	f44f 7100 	mov.w	r1, #512	; 0x200
 8002172:	4841      	ldr	r0, [pc, #260]	; (8002278 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8002174:	f7ff f960 	bl	8001438 <GPIO_WriteBit>
 8002178:	e079      	b.n	800226e <ucg_com_arduino_generic_SW_SPI+0x1d6>
 800217a:	893b      	ldrh	r3, [r7, #8]
 800217c:	b2db      	uxtb	r3, r3
 800217e:	4619      	mov	r1, r3
 8002180:	68f8      	ldr	r0, [r7, #12]
 8002182:	f7ff ff4f 	bl	8002024 <ucg_com_arduino_send_generic_SW_SPI>
 8002186:	e072      	b.n	800226e <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002188:	687b      	ldr	r3, [r7, #4]
 800218a:	781b      	ldrb	r3, [r3, #0]
 800218c:	4619      	mov	r1, r3
 800218e:	68f8      	ldr	r0, [r7, #12]
 8002190:	f7ff ff48 	bl	8002024 <ucg_com_arduino_send_generic_SW_SPI>
 8002194:	893b      	ldrh	r3, [r7, #8]
 8002196:	3b01      	subs	r3, #1
 8002198:	813b      	strh	r3, [r7, #8]
 800219a:	893b      	ldrh	r3, [r7, #8]
 800219c:	2b00      	cmp	r3, #0
 800219e:	d1f3      	bne.n	8002188 <ucg_com_arduino_generic_SW_SPI+0xf0>
 80021a0:	e065      	b.n	800226e <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80021a2:	687b      	ldr	r3, [r7, #4]
 80021a4:	781b      	ldrb	r3, [r3, #0]
 80021a6:	4619      	mov	r1, r3
 80021a8:	68f8      	ldr	r0, [r7, #12]
 80021aa:	f7ff ff3b 	bl	8002024 <ucg_com_arduino_send_generic_SW_SPI>
 80021ae:	687b      	ldr	r3, [r7, #4]
 80021b0:	3301      	adds	r3, #1
 80021b2:	781b      	ldrb	r3, [r3, #0]
 80021b4:	4619      	mov	r1, r3
 80021b6:	68f8      	ldr	r0, [r7, #12]
 80021b8:	f7ff ff34 	bl	8002024 <ucg_com_arduino_send_generic_SW_SPI>
 80021bc:	893b      	ldrh	r3, [r7, #8]
 80021be:	3b01      	subs	r3, #1
 80021c0:	813b      	strh	r3, [r7, #8]
 80021c2:	893b      	ldrh	r3, [r7, #8]
 80021c4:	2b00      	cmp	r3, #0
 80021c6:	d1ec      	bne.n	80021a2 <ucg_com_arduino_generic_SW_SPI+0x10a>
 80021c8:	e051      	b.n	800226e <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80021ca:	687b      	ldr	r3, [r7, #4]
 80021cc:	781b      	ldrb	r3, [r3, #0]
 80021ce:	4619      	mov	r1, r3
 80021d0:	68f8      	ldr	r0, [r7, #12]
 80021d2:	f7ff ff27 	bl	8002024 <ucg_com_arduino_send_generic_SW_SPI>
 80021d6:	687b      	ldr	r3, [r7, #4]
 80021d8:	3301      	adds	r3, #1
 80021da:	781b      	ldrb	r3, [r3, #0]
 80021dc:	4619      	mov	r1, r3
 80021de:	68f8      	ldr	r0, [r7, #12]
 80021e0:	f7ff ff20 	bl	8002024 <ucg_com_arduino_send_generic_SW_SPI>
 80021e4:	687b      	ldr	r3, [r7, #4]
 80021e6:	3302      	adds	r3, #2
 80021e8:	781b      	ldrb	r3, [r3, #0]
 80021ea:	4619      	mov	r1, r3
 80021ec:	68f8      	ldr	r0, [r7, #12]
 80021ee:	f7ff ff19 	bl	8002024 <ucg_com_arduino_send_generic_SW_SPI>
 80021f2:	893b      	ldrh	r3, [r7, #8]
 80021f4:	3b01      	subs	r3, #1
 80021f6:	813b      	strh	r3, [r7, #8]
 80021f8:	893b      	ldrh	r3, [r7, #8]
 80021fa:	2b00      	cmp	r3, #0
 80021fc:	d1e5      	bne.n	80021ca <ucg_com_arduino_generic_SW_SPI+0x132>
 80021fe:	e036      	b.n	800226e <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002200:	687b      	ldr	r3, [r7, #4]
 8002202:	1c5a      	adds	r2, r3, #1
 8002204:	607a      	str	r2, [r7, #4]
 8002206:	781b      	ldrb	r3, [r3, #0]
 8002208:	4619      	mov	r1, r3
 800220a:	68f8      	ldr	r0, [r7, #12]
 800220c:	f7ff ff0a 	bl	8002024 <ucg_com_arduino_send_generic_SW_SPI>
 8002210:	893b      	ldrh	r3, [r7, #8]
 8002212:	3b01      	subs	r3, #1
 8002214:	813b      	strh	r3, [r7, #8]
 8002216:	893b      	ldrh	r3, [r7, #8]
 8002218:	2b00      	cmp	r3, #0
 800221a:	d1f1      	bne.n	8002200 <ucg_com_arduino_generic_SW_SPI+0x168>
 800221c:	e027      	b.n	800226e <ucg_com_arduino_generic_SW_SPI+0x1d6>
 800221e:	687b      	ldr	r3, [r7, #4]
 8002220:	781b      	ldrb	r3, [r3, #0]
 8002222:	2b00      	cmp	r3, #0
 8002224:	d010      	beq.n	8002248 <ucg_com_arduino_generic_SW_SPI+0x1b0>
 8002226:	687b      	ldr	r3, [r7, #4]
 8002228:	781b      	ldrb	r3, [r3, #0]
 800222a:	2b01      	cmp	r3, #1
 800222c:	d106      	bne.n	800223c <ucg_com_arduino_generic_SW_SPI+0x1a4>
 800222e:	2200      	movs	r2, #0
 8002230:	f44f 7100 	mov.w	r1, #512	; 0x200
 8002234:	4810      	ldr	r0, [pc, #64]	; (8002278 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8002236:	f7ff f8ff 	bl	8001438 <GPIO_WriteBit>
 800223a:	e005      	b.n	8002248 <ucg_com_arduino_generic_SW_SPI+0x1b0>
 800223c:	2201      	movs	r2, #1
 800223e:	f44f 7100 	mov.w	r1, #512	; 0x200
 8002242:	480d      	ldr	r0, [pc, #52]	; (8002278 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8002244:	f7ff f8f8 	bl	8001438 <GPIO_WriteBit>
 8002248:	687b      	ldr	r3, [r7, #4]
 800224a:	3301      	adds	r3, #1
 800224c:	607b      	str	r3, [r7, #4]
 800224e:	687b      	ldr	r3, [r7, #4]
 8002250:	781b      	ldrb	r3, [r3, #0]
 8002252:	4619      	mov	r1, r3
 8002254:	68f8      	ldr	r0, [r7, #12]
 8002256:	f7ff fee5 	bl	8002024 <ucg_com_arduino_send_generic_SW_SPI>
 800225a:	687b      	ldr	r3, [r7, #4]
 800225c:	3301      	adds	r3, #1
 800225e:	607b      	str	r3, [r7, #4]
 8002260:	893b      	ldrh	r3, [r7, #8]
 8002262:	3b01      	subs	r3, #1
 8002264:	813b      	strh	r3, [r7, #8]
 8002266:	893b      	ldrh	r3, [r7, #8]
 8002268:	2b00      	cmp	r3, #0
 800226a:	d1d8      	bne.n	800221e <ucg_com_arduino_generic_SW_SPI+0x186>
 800226c:	bf00      	nop
 800226e:	2301      	movs	r3, #1
 8002270:	4618      	mov	r0, r3
 8002272:	3710      	adds	r7, #16
 8002274:	46bd      	mov	sp, r7
 8002276:	bd80      	pop	{r7, pc}
 8002278:	40020000 	.word	0x40020000
 800227c:	40020400 	.word	0x40020400
 8002280:	40020800 	.word	0x40020800

08002284 <Ucglib4WireSWSPI_begin>:
 8002284:	b580      	push	{r7, lr}
 8002286:	b082      	sub	sp, #8
 8002288:	af00      	add	r7, sp, #0
 800228a:	6078      	str	r0, [r7, #4]
 800228c:	460b      	mov	r3, r1
 800228e:	70fb      	strb	r3, [r7, #3]
 8002290:	4b07      	ldr	r3, [pc, #28]	; (80022b0 <Ucglib4WireSWSPI_begin+0x2c>)
 8002292:	4a08      	ldr	r2, [pc, #32]	; (80022b4 <Ucglib4WireSWSPI_begin+0x30>)
 8002294:	4908      	ldr	r1, [pc, #32]	; (80022b8 <Ucglib4WireSWSPI_begin+0x34>)
 8002296:	6878      	ldr	r0, [r7, #4]
 8002298:	f001 f9a2 	bl	80035e0 <ucg_Init>
 800229c:	78fb      	ldrb	r3, [r7, #3]
 800229e:	4619      	mov	r1, r3
 80022a0:	6878      	ldr	r0, [r7, #4]
 80022a2:	f000 ff86 	bl	80031b2 <ucg_SetFontMode>
 80022a6:	bf00      	nop
 80022a8:	3708      	adds	r7, #8
 80022aa:	46bd      	mov	sp, r7
 80022ac:	bd80      	pop	{r7, pc}
 80022ae:	bf00      	nop
 80022b0:	08002099 	.word	0x08002099
 80022b4:	080028f1 	.word	0x080028f1
 80022b8:	08002a19 	.word	0x08002a19

080022bc <ucg_DrawBox>:
 80022bc:	b580      	push	{r7, lr}
 80022be:	b084      	sub	sp, #16
 80022c0:	af00      	add	r7, sp, #0
 80022c2:	60f8      	str	r0, [r7, #12]
 80022c4:	4608      	mov	r0, r1
 80022c6:	4611      	mov	r1, r2
 80022c8:	461a      	mov	r2, r3
 80022ca:	4603      	mov	r3, r0
 80022cc:	817b      	strh	r3, [r7, #10]
 80022ce:	460b      	mov	r3, r1
 80022d0:	813b      	strh	r3, [r7, #8]
 80022d2:	4613      	mov	r3, r2
 80022d4:	80fb      	strh	r3, [r7, #6]
 80022d6:	e014      	b.n	8002302 <ucg_DrawBox+0x46>
 80022d8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80022dc:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 80022e0:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 80022e4:	68f8      	ldr	r0, [r7, #12]
 80022e6:	f001 f9ed 	bl	80036c4 <ucg_DrawHLine>
 80022ea:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 80022ee:	b29b      	uxth	r3, r3
 80022f0:	3b01      	subs	r3, #1
 80022f2:	b29b      	uxth	r3, r3
 80022f4:	833b      	strh	r3, [r7, #24]
 80022f6:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 80022fa:	b29b      	uxth	r3, r3
 80022fc:	3301      	adds	r3, #1
 80022fe:	b29b      	uxth	r3, r3
 8002300:	813b      	strh	r3, [r7, #8]
 8002302:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 8002306:	2b00      	cmp	r3, #0
 8002308:	dce6      	bgt.n	80022d8 <ucg_DrawBox+0x1c>
 800230a:	bf00      	nop
 800230c:	3710      	adds	r7, #16
 800230e:	46bd      	mov	sp, r7
 8002310:	bd80      	pop	{r7, pc}

08002312 <ucg_ClearScreen>:
 8002312:	b580      	push	{r7, lr}
 8002314:	b084      	sub	sp, #16
 8002316:	af02      	add	r7, sp, #8
 8002318:	6078      	str	r0, [r7, #4]
 800231a:	2300      	movs	r3, #0
 800231c:	9300      	str	r3, [sp, #0]
 800231e:	2300      	movs	r3, #0
 8002320:	2200      	movs	r2, #0
 8002322:	2100      	movs	r1, #0
 8002324:	6878      	ldr	r0, [r7, #4]
 8002326:	f001 f9ec 	bl	8003702 <ucg_SetColor>
 800232a:	6878      	ldr	r0, [r7, #4]
 800232c:	f000 fb3b 	bl	80029a6 <ucg_SetMaxClipRange>
 8002330:	687b      	ldr	r3, [r7, #4]
 8002332:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8002336:	687b      	ldr	r3, [r7, #4]
 8002338:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800233c:	9300      	str	r3, [sp, #0]
 800233e:	4613      	mov	r3, r2
 8002340:	2200      	movs	r2, #0
 8002342:	2100      	movs	r1, #0
 8002344:	6878      	ldr	r0, [r7, #4]
 8002346:	f7ff ffb9 	bl	80022bc <ucg_DrawBox>
 800234a:	23ff      	movs	r3, #255	; 0xff
 800234c:	9300      	str	r3, [sp, #0]
 800234e:	23ff      	movs	r3, #255	; 0xff
 8002350:	22ff      	movs	r2, #255	; 0xff
 8002352:	2100      	movs	r1, #0
 8002354:	6878      	ldr	r0, [r7, #4]
 8002356:	f001 f9d4 	bl	8003702 <ucg_SetColor>
 800235a:	bf00      	nop
 800235c:	3708      	adds	r7, #8
 800235e:	46bd      	mov	sp, r7
 8002360:	bd80      	pop	{r7, pc}

08002362 <ucg_ccs_init>:
 8002362:	b480      	push	{r7}
 8002364:	b083      	sub	sp, #12
 8002366:	af00      	add	r7, sp, #0
 8002368:	6078      	str	r0, [r7, #4]
 800236a:	4608      	mov	r0, r1
 800236c:	4611      	mov	r1, r2
 800236e:	461a      	mov	r2, r3
 8002370:	4603      	mov	r3, r0
 8002372:	70fb      	strb	r3, [r7, #3]
 8002374:	460b      	mov	r3, r1
 8002376:	70bb      	strb	r3, [r7, #2]
 8002378:	4613      	mov	r3, r2
 800237a:	803b      	strh	r3, [r7, #0]
 800237c:	687b      	ldr	r3, [r7, #4]
 800237e:	78fa      	ldrb	r2, [r7, #3]
 8002380:	705a      	strb	r2, [r3, #1]
 8002382:	78bb      	ldrb	r3, [r7, #2]
 8002384:	b29a      	uxth	r2, r3
 8002386:	78fb      	ldrb	r3, [r7, #3]
 8002388:	b29b      	uxth	r3, r3
 800238a:	1ad3      	subs	r3, r2, r3
 800238c:	b29b      	uxth	r3, r3
 800238e:	b21a      	sxth	r2, r3
 8002390:	687b      	ldr	r3, [r7, #4]
 8002392:	809a      	strh	r2, [r3, #4]
 8002394:	883b      	ldrh	r3, [r7, #0]
 8002396:	3b01      	subs	r3, #1
 8002398:	b29b      	uxth	r3, r3
 800239a:	b21a      	sxth	r2, r3
 800239c:	687b      	ldr	r3, [r7, #4]
 800239e:	811a      	strh	r2, [r3, #8]
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	2201      	movs	r2, #1
 80023a4:	805a      	strh	r2, [r3, #2]
 80023a6:	687b      	ldr	r3, [r7, #4]
 80023a8:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80023ac:	461a      	mov	r2, r3
 80023ae:	687b      	ldr	r3, [r7, #4]
 80023b0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80023b4:	fb92 f3f3 	sdiv	r3, r2, r3
 80023b8:	b21a      	sxth	r2, r3
 80023ba:	687b      	ldr	r3, [r7, #4]
 80023bc:	80da      	strh	r2, [r3, #6]
 80023be:	687b      	ldr	r3, [r7, #4]
 80023c0:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80023c4:	2b00      	cmp	r3, #0
 80023c6:	da0c      	bge.n	80023e2 <ucg_ccs_init+0x80>
 80023c8:	687b      	ldr	r3, [r7, #4]
 80023ca:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80023ce:	b29b      	uxth	r3, r3
 80023d0:	425b      	negs	r3, r3
 80023d2:	b29b      	uxth	r3, r3
 80023d4:	b21a      	sxth	r2, r3
 80023d6:	687b      	ldr	r3, [r7, #4]
 80023d8:	809a      	strh	r2, [r3, #4]
 80023da:	687b      	ldr	r3, [r7, #4]
 80023dc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80023e0:	805a      	strh	r2, [r3, #2]
 80023e2:	687b      	ldr	r3, [r7, #4]
 80023e4:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80023e8:	687a      	ldr	r2, [r7, #4]
 80023ea:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80023ee:	fb93 f1f2 	sdiv	r1, r3, r2
 80023f2:	fb02 f201 	mul.w	r2, r2, r1
 80023f6:	1a9b      	subs	r3, r3, r2
 80023f8:	b21a      	sxth	r2, r3
 80023fa:	687b      	ldr	r3, [r7, #4]
 80023fc:	815a      	strh	r2, [r3, #10]
 80023fe:	687b      	ldr	r3, [r7, #4]
 8002400:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002404:	0fda      	lsrs	r2, r3, #31
 8002406:	4413      	add	r3, r2
 8002408:	105b      	asrs	r3, r3, #1
 800240a:	b21a      	sxth	r2, r3
 800240c:	687b      	ldr	r3, [r7, #4]
 800240e:	819a      	strh	r2, [r3, #12]
 8002410:	687b      	ldr	r3, [r7, #4]
 8002412:	78fa      	ldrb	r2, [r7, #3]
 8002414:	701a      	strb	r2, [r3, #0]
 8002416:	bf00      	nop
 8002418:	370c      	adds	r7, #12
 800241a:	46bd      	mov	sp, r7
 800241c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002420:	4770      	bx	lr

08002422 <ucg_ccs_step>:
 8002422:	b480      	push	{r7}
 8002424:	b083      	sub	sp, #12
 8002426:	af00      	add	r7, sp, #0
 8002428:	6078      	str	r0, [r7, #4]
 800242a:	687b      	ldr	r3, [r7, #4]
 800242c:	781a      	ldrb	r2, [r3, #0]
 800242e:	687b      	ldr	r3, [r7, #4]
 8002430:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8002434:	b2db      	uxtb	r3, r3
 8002436:	4413      	add	r3, r2
 8002438:	b2da      	uxtb	r2, r3
 800243a:	687b      	ldr	r3, [r7, #4]
 800243c:	701a      	strb	r2, [r3, #0]
 800243e:	687b      	ldr	r3, [r7, #4]
 8002440:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 8002444:	b29a      	uxth	r2, r3
 8002446:	687b      	ldr	r3, [r7, #4]
 8002448:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 800244c:	b29b      	uxth	r3, r3
 800244e:	4413      	add	r3, r2
 8002450:	b29b      	uxth	r3, r3
 8002452:	b21a      	sxth	r2, r3
 8002454:	687b      	ldr	r3, [r7, #4]
 8002456:	819a      	strh	r2, [r3, #12]
 8002458:	687b      	ldr	r3, [r7, #4]
 800245a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 800245e:	687b      	ldr	r3, [r7, #4]
 8002460:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002464:	429a      	cmp	r2, r3
 8002466:	db16      	blt.n	8002496 <ucg_ccs_step+0x74>
 8002468:	687b      	ldr	r3, [r7, #4]
 800246a:	781a      	ldrb	r2, [r3, #0]
 800246c:	687b      	ldr	r3, [r7, #4]
 800246e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8002472:	b2db      	uxtb	r3, r3
 8002474:	4413      	add	r3, r2
 8002476:	b2da      	uxtb	r2, r3
 8002478:	687b      	ldr	r3, [r7, #4]
 800247a:	701a      	strb	r2, [r3, #0]
 800247c:	687b      	ldr	r3, [r7, #4]
 800247e:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 8002482:	b29a      	uxth	r2, r3
 8002484:	687b      	ldr	r3, [r7, #4]
 8002486:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800248a:	b29b      	uxth	r3, r3
 800248c:	1ad3      	subs	r3, r2, r3
 800248e:	b29b      	uxth	r3, r3
 8002490:	b21a      	sxth	r2, r3
 8002492:	687b      	ldr	r3, [r7, #4]
 8002494:	819a      	strh	r2, [r3, #12]
 8002496:	bf00      	nop
 8002498:	370c      	adds	r7, #12
 800249a:	46bd      	mov	sp, r7
 800249c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024a0:	4770      	bx	lr

080024a2 <ucg_ccs_seek>:
 80024a2:	b480      	push	{r7}
 80024a4:	b085      	sub	sp, #20
 80024a6:	af00      	add	r7, sp, #0
 80024a8:	6078      	str	r0, [r7, #4]
 80024aa:	460b      	mov	r3, r1
 80024ac:	807b      	strh	r3, [r7, #2]
 80024ae:	687b      	ldr	r3, [r7, #4]
 80024b0:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80024b4:	b2da      	uxtb	r2, r3
 80024b6:	687b      	ldr	r3, [r7, #4]
 80024b8:	701a      	strb	r2, [r3, #0]
 80024ba:	687b      	ldr	r3, [r7, #4]
 80024bc:	781a      	ldrb	r2, [r3, #0]
 80024be:	887b      	ldrh	r3, [r7, #2]
 80024c0:	b2db      	uxtb	r3, r3
 80024c2:	fb12 f303 	smulbb	r3, r2, r3
 80024c6:	b2da      	uxtb	r2, r3
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	701a      	strb	r2, [r3, #0]
 80024cc:	687b      	ldr	r3, [r7, #4]
 80024ce:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 80024d2:	b29a      	uxth	r2, r3
 80024d4:	887b      	ldrh	r3, [r7, #2]
 80024d6:	fb12 f303 	smulbb	r3, r2, r3
 80024da:	b29a      	uxth	r2, r3
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80024e2:	0fd9      	lsrs	r1, r3, #31
 80024e4:	440b      	add	r3, r1
 80024e6:	105b      	asrs	r3, r3, #1
 80024e8:	b21b      	sxth	r3, r3
 80024ea:	b29b      	uxth	r3, r3
 80024ec:	4413      	add	r3, r2
 80024ee:	b29b      	uxth	r3, r3
 80024f0:	81fb      	strh	r3, [r7, #14]
 80024f2:	687b      	ldr	r3, [r7, #4]
 80024f4:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80024f8:	2b00      	cmp	r3, #0
 80024fa:	db0e      	blt.n	800251a <ucg_ccs_seek+0x78>
 80024fc:	687b      	ldr	r3, [r7, #4]
 80024fe:	781a      	ldrb	r2, [r3, #0]
 8002500:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002504:	6879      	ldr	r1, [r7, #4]
 8002506:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800250a:	fb93 f3f1 	sdiv	r3, r3, r1
 800250e:	b2db      	uxtb	r3, r3
 8002510:	4413      	add	r3, r2
 8002512:	b2da      	uxtb	r2, r3
 8002514:	687b      	ldr	r3, [r7, #4]
 8002516:	701a      	strb	r2, [r3, #0]
 8002518:	e00d      	b.n	8002536 <ucg_ccs_seek+0x94>
 800251a:	687b      	ldr	r3, [r7, #4]
 800251c:	781a      	ldrb	r2, [r3, #0]
 800251e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002522:	6879      	ldr	r1, [r7, #4]
 8002524:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8002528:	fb93 f3f1 	sdiv	r3, r3, r1
 800252c:	b2db      	uxtb	r3, r3
 800252e:	1ad3      	subs	r3, r2, r3
 8002530:	b2da      	uxtb	r2, r3
 8002532:	687b      	ldr	r3, [r7, #4]
 8002534:	701a      	strb	r2, [r3, #0]
 8002536:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800253a:	687a      	ldr	r2, [r7, #4]
 800253c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8002540:	fb93 f1f2 	sdiv	r1, r3, r2
 8002544:	fb02 f201 	mul.w	r2, r2, r1
 8002548:	1a9b      	subs	r3, r3, r2
 800254a:	b21a      	sxth	r2, r3
 800254c:	687b      	ldr	r3, [r7, #4]
 800254e:	819a      	strh	r2, [r3, #12]
 8002550:	687b      	ldr	r3, [r7, #4]
 8002552:	781a      	ldrb	r2, [r3, #0]
 8002554:	687b      	ldr	r3, [r7, #4]
 8002556:	785b      	ldrb	r3, [r3, #1]
 8002558:	4413      	add	r3, r2
 800255a:	b2da      	uxtb	r2, r3
 800255c:	687b      	ldr	r3, [r7, #4]
 800255e:	701a      	strb	r2, [r3, #0]
 8002560:	bf00      	nop
 8002562:	3714      	adds	r7, #20
 8002564:	46bd      	mov	sp, r7
 8002566:	f85d 7b04 	ldr.w	r7, [sp], #4
 800256a:	4770      	bx	lr

0800256c <ucg_dev_default_cb>:
 800256c:	b580      	push	{r7, lr}
 800256e:	b084      	sub	sp, #16
 8002570:	af00      	add	r7, sp, #0
 8002572:	60f8      	str	r0, [r7, #12]
 8002574:	460b      	mov	r3, r1
 8002576:	607a      	str	r2, [r7, #4]
 8002578:	817b      	strh	r3, [r7, #10]
 800257a:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800257e:	2b0c      	cmp	r3, #12
 8002580:	d00a      	beq.n	8002598 <ucg_dev_default_cb+0x2c>
 8002582:	2b17      	cmp	r3, #23
 8002584:	d10f      	bne.n	80025a6 <ucg_dev_default_cb+0x3a>
 8002586:	68fb      	ldr	r3, [r7, #12]
 8002588:	68db      	ldr	r3, [r3, #12]
 800258a:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800258e:	687a      	ldr	r2, [r7, #4]
 8002590:	68f8      	ldr	r0, [r7, #12]
 8002592:	4798      	blx	r3
 8002594:	4603      	mov	r3, r0
 8002596:	e007      	b.n	80025a8 <ucg_dev_default_cb+0x3c>
 8002598:	68fb      	ldr	r3, [r7, #12]
 800259a:	687a      	ldr	r2, [r7, #4]
 800259c:	3370      	adds	r3, #112	; 0x70
 800259e:	6810      	ldr	r0, [r2, #0]
 80025a0:	6851      	ldr	r1, [r2, #4]
 80025a2:	c303      	stmia	r3!, {r0, r1}
 80025a4:	bf00      	nop
 80025a6:	2301      	movs	r3, #1
 80025a8:	4618      	mov	r0, r3
 80025aa:	3710      	adds	r7, #16
 80025ac:	46bd      	mov	sp, r7
 80025ae:	bd80      	pop	{r7, pc}

080025b0 <ucg_ext_none>:
 80025b0:	b480      	push	{r7}
 80025b2:	b085      	sub	sp, #20
 80025b4:	af00      	add	r7, sp, #0
 80025b6:	60f8      	str	r0, [r7, #12]
 80025b8:	460b      	mov	r3, r1
 80025ba:	607a      	str	r2, [r7, #4]
 80025bc:	817b      	strh	r3, [r7, #10]
 80025be:	2301      	movs	r3, #1
 80025c0:	4618      	mov	r0, r3
 80025c2:	3714      	adds	r7, #20
 80025c4:	46bd      	mov	sp, r7
 80025c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025ca:	4770      	bx	lr

080025cc <ucg_handle_st7735_l90fx>:
 80025cc:	b590      	push	{r4, r7, lr}
 80025ce:	b085      	sub	sp, #20
 80025d0:	af00      	add	r7, sp, #0
 80025d2:	6078      	str	r0, [r7, #4]
 80025d4:	6878      	ldr	r0, [r7, #4]
 80025d6:	f001 facf 	bl	8003b78 <ucg_clip_l90fx>
 80025da:	4603      	mov	r3, r0
 80025dc:	2b00      	cmp	r3, #0
 80025de:	d053      	beq.n	8002688 <ucg_handle_st7735_l90fx+0xbc>
 80025e0:	687b      	ldr	r3, [r7, #4]
 80025e2:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 80025e6:	2b01      	cmp	r3, #1
 80025e8:	d008      	beq.n	80025fc <ucg_handle_st7735_l90fx+0x30>
 80025ea:	2b02      	cmp	r3, #2
 80025ec:	d00b      	beq.n	8002606 <ucg_handle_st7735_l90fx+0x3a>
 80025ee:	2b00      	cmp	r3, #0
 80025f0:	d11b      	bne.n	800262a <ucg_handle_st7735_l90fx+0x5e>
 80025f2:	4928      	ldr	r1, [pc, #160]	; (8002694 <ucg_handle_st7735_l90fx+0xc8>)
 80025f4:	6878      	ldr	r0, [r7, #4]
 80025f6:	f001 fded 	bl	80041d4 <ucg_com_SendCmdSeq>
 80025fa:	e028      	b.n	800264e <ucg_handle_st7735_l90fx+0x82>
 80025fc:	4926      	ldr	r1, [pc, #152]	; (8002698 <ucg_handle_st7735_l90fx+0xcc>)
 80025fe:	6878      	ldr	r0, [r7, #4]
 8002600:	f001 fde8 	bl	80041d4 <ucg_com_SendCmdSeq>
 8002604:	e023      	b.n	800264e <ucg_handle_st7735_l90fx+0x82>
 8002606:	687b      	ldr	r3, [r7, #4]
 8002608:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800260a:	81fb      	strh	r3, [r7, #14]
 800260c:	89fb      	ldrh	r3, [r7, #14]
 800260e:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 8002612:	b29b      	uxth	r3, r3
 8002614:	b21a      	sxth	r2, r3
 8002616:	687b      	ldr	r3, [r7, #4]
 8002618:	849a      	strh	r2, [r3, #36]	; 0x24
 800261a:	4920      	ldr	r1, [pc, #128]	; (800269c <ucg_handle_st7735_l90fx+0xd0>)
 800261c:	6878      	ldr	r0, [r7, #4]
 800261e:	f001 fdd9 	bl	80041d4 <ucg_com_SendCmdSeq>
 8002622:	687b      	ldr	r3, [r7, #4]
 8002624:	89fa      	ldrh	r2, [r7, #14]
 8002626:	849a      	strh	r2, [r3, #36]	; 0x24
 8002628:	e011      	b.n	800264e <ucg_handle_st7735_l90fx+0x82>
 800262a:	687b      	ldr	r3, [r7, #4]
 800262c:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800262e:	81fb      	strh	r3, [r7, #14]
 8002630:	89fb      	ldrh	r3, [r7, #14]
 8002632:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 8002636:	b29b      	uxth	r3, r3
 8002638:	b21a      	sxth	r2, r3
 800263a:	687b      	ldr	r3, [r7, #4]
 800263c:	84da      	strh	r2, [r3, #38]	; 0x26
 800263e:	4918      	ldr	r1, [pc, #96]	; (80026a0 <ucg_handle_st7735_l90fx+0xd4>)
 8002640:	6878      	ldr	r0, [r7, #4]
 8002642:	f001 fdc7 	bl	80041d4 <ucg_com_SendCmdSeq>
 8002646:	687b      	ldr	r3, [r7, #4]
 8002648:	89fa      	ldrh	r2, [r7, #14]
 800264a:	84da      	strh	r2, [r3, #38]	; 0x26
 800264c:	bf00      	nop
 800264e:	687b      	ldr	r3, [r7, #4]
 8002650:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8002654:	723b      	strb	r3, [r7, #8]
 8002656:	687b      	ldr	r3, [r7, #4]
 8002658:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 800265c:	727b      	strb	r3, [r7, #9]
 800265e:	687b      	ldr	r3, [r7, #4]
 8002660:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 8002664:	72bb      	strb	r3, [r7, #10]
 8002666:	687b      	ldr	r3, [r7, #4]
 8002668:	69dc      	ldr	r4, [r3, #28]
 800266a:	687b      	ldr	r3, [r7, #4]
 800266c:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8002670:	b29a      	uxth	r2, r3
 8002672:	f107 0308 	add.w	r3, r7, #8
 8002676:	2113      	movs	r1, #19
 8002678:	6878      	ldr	r0, [r7, #4]
 800267a:	47a0      	blx	r4
 800267c:	2101      	movs	r1, #1
 800267e:	6878      	ldr	r0, [r7, #4]
 8002680:	f001 fcf4 	bl	800406c <ucg_com_SetCSLineStatus>
 8002684:	2301      	movs	r3, #1
 8002686:	e000      	b.n	800268a <ucg_handle_st7735_l90fx+0xbe>
 8002688:	2300      	movs	r3, #0
 800268a:	4618      	mov	r0, r3
 800268c:	3714      	adds	r7, #20
 800268e:	46bd      	mov	sp, r7
 8002690:	bd90      	pop	{r4, r7, pc}
 8002692:	bf00      	nop
 8002694:	08004e18 	.word	0x08004e18
 8002698:	08004e38 	.word	0x08004e38
 800269c:	08004e5c 	.word	0x08004e5c
 80026a0:	08004e80 	.word	0x08004e80

080026a4 <ucg_handle_st7735_l90se>:
 80026a4:	b590      	push	{r4, r7, lr}
 80026a6:	b087      	sub	sp, #28
 80026a8:	af00      	add	r7, sp, #0
 80026aa:	6078      	str	r0, [r7, #4]
 80026ac:	2300      	movs	r3, #0
 80026ae:	75fb      	strb	r3, [r7, #23]
 80026b0:	e01a      	b.n	80026e8 <ucg_handle_st7735_l90se+0x44>
 80026b2:	687b      	ldr	r3, [r7, #4]
 80026b4:	f103 0146 	add.w	r1, r3, #70	; 0x46
 80026b8:	7dfa      	ldrb	r2, [r7, #23]
 80026ba:	4613      	mov	r3, r2
 80026bc:	00db      	lsls	r3, r3, #3
 80026be:	1a9b      	subs	r3, r3, r2
 80026c0:	005b      	lsls	r3, r3, #1
 80026c2:	18c8      	adds	r0, r1, r3
 80026c4:	7dfb      	ldrb	r3, [r7, #23]
 80026c6:	687a      	ldr	r2, [r7, #4]
 80026c8:	4413      	add	r3, r2
 80026ca:	f893 103a 	ldrb.w	r1, [r3, #58]	; 0x3a
 80026ce:	7dfb      	ldrb	r3, [r7, #23]
 80026d0:	687a      	ldr	r2, [r7, #4]
 80026d2:	4413      	add	r3, r2
 80026d4:	f893 203d 	ldrb.w	r2, [r3, #61]	; 0x3d
 80026d8:	687b      	ldr	r3, [r7, #4]
 80026da:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 80026de:	f7ff fe40 	bl	8002362 <ucg_ccs_init>
 80026e2:	7dfb      	ldrb	r3, [r7, #23]
 80026e4:	3301      	adds	r3, #1
 80026e6:	75fb      	strb	r3, [r7, #23]
 80026e8:	7dfb      	ldrb	r3, [r7, #23]
 80026ea:	2b02      	cmp	r3, #2
 80026ec:	d9e1      	bls.n	80026b2 <ucg_handle_st7735_l90se+0xe>
 80026ee:	6878      	ldr	r0, [r7, #4]
 80026f0:	f001 fbc2 	bl	8003e78 <ucg_clip_l90se>
 80026f4:	4603      	mov	r3, r0
 80026f6:	2b00      	cmp	r3, #0
 80026f8:	d071      	beq.n	80027de <ucg_handle_st7735_l90se+0x13a>
 80026fa:	687b      	ldr	r3, [r7, #4]
 80026fc:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 8002700:	2b01      	cmp	r3, #1
 8002702:	d008      	beq.n	8002716 <ucg_handle_st7735_l90se+0x72>
 8002704:	2b02      	cmp	r3, #2
 8002706:	d00b      	beq.n	8002720 <ucg_handle_st7735_l90se+0x7c>
 8002708:	2b00      	cmp	r3, #0
 800270a:	d11b      	bne.n	8002744 <ucg_handle_st7735_l90se+0xa0>
 800270c:	4936      	ldr	r1, [pc, #216]	; (80027e8 <ucg_handle_st7735_l90se+0x144>)
 800270e:	6878      	ldr	r0, [r7, #4]
 8002710:	f001 fd60 	bl	80041d4 <ucg_com_SendCmdSeq>
 8002714:	e028      	b.n	8002768 <ucg_handle_st7735_l90se+0xc4>
 8002716:	4935      	ldr	r1, [pc, #212]	; (80027ec <ucg_handle_st7735_l90se+0x148>)
 8002718:	6878      	ldr	r0, [r7, #4]
 800271a:	f001 fd5b 	bl	80041d4 <ucg_com_SendCmdSeq>
 800271e:	e023      	b.n	8002768 <ucg_handle_st7735_l90se+0xc4>
 8002720:	687b      	ldr	r3, [r7, #4]
 8002722:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8002724:	827b      	strh	r3, [r7, #18]
 8002726:	8a7b      	ldrh	r3, [r7, #18]
 8002728:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 800272c:	b29b      	uxth	r3, r3
 800272e:	b21a      	sxth	r2, r3
 8002730:	687b      	ldr	r3, [r7, #4]
 8002732:	849a      	strh	r2, [r3, #36]	; 0x24
 8002734:	492e      	ldr	r1, [pc, #184]	; (80027f0 <ucg_handle_st7735_l90se+0x14c>)
 8002736:	6878      	ldr	r0, [r7, #4]
 8002738:	f001 fd4c 	bl	80041d4 <ucg_com_SendCmdSeq>
 800273c:	687b      	ldr	r3, [r7, #4]
 800273e:	8a7a      	ldrh	r2, [r7, #18]
 8002740:	849a      	strh	r2, [r3, #36]	; 0x24
 8002742:	e011      	b.n	8002768 <ucg_handle_st7735_l90se+0xc4>
 8002744:	687b      	ldr	r3, [r7, #4]
 8002746:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002748:	827b      	strh	r3, [r7, #18]
 800274a:	8a7b      	ldrh	r3, [r7, #18]
 800274c:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 8002750:	b29b      	uxth	r3, r3
 8002752:	b21a      	sxth	r2, r3
 8002754:	687b      	ldr	r3, [r7, #4]
 8002756:	84da      	strh	r2, [r3, #38]	; 0x26
 8002758:	4926      	ldr	r1, [pc, #152]	; (80027f4 <ucg_handle_st7735_l90se+0x150>)
 800275a:	6878      	ldr	r0, [r7, #4]
 800275c:	f001 fd3a 	bl	80041d4 <ucg_com_SendCmdSeq>
 8002760:	687b      	ldr	r3, [r7, #4]
 8002762:	8a7a      	ldrh	r2, [r7, #18]
 8002764:	84da      	strh	r2, [r3, #38]	; 0x26
 8002766:	bf00      	nop
 8002768:	2300      	movs	r3, #0
 800276a:	82bb      	strh	r3, [r7, #20]
 800276c:	e02a      	b.n	80027c4 <ucg_handle_st7735_l90se+0x120>
 800276e:	687b      	ldr	r3, [r7, #4]
 8002770:	f893 3046 	ldrb.w	r3, [r3, #70]	; 0x46
 8002774:	733b      	strb	r3, [r7, #12]
 8002776:	687b      	ldr	r3, [r7, #4]
 8002778:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 800277c:	737b      	strb	r3, [r7, #13]
 800277e:	687b      	ldr	r3, [r7, #4]
 8002780:	f893 3062 	ldrb.w	r3, [r3, #98]	; 0x62
 8002784:	73bb      	strb	r3, [r7, #14]
 8002786:	687b      	ldr	r3, [r7, #4]
 8002788:	69dc      	ldr	r4, [r3, #28]
 800278a:	f107 030c 	add.w	r3, r7, #12
 800278e:	2201      	movs	r2, #1
 8002790:	2113      	movs	r1, #19
 8002792:	6878      	ldr	r0, [r7, #4]
 8002794:	47a0      	blx	r4
 8002796:	687b      	ldr	r3, [r7, #4]
 8002798:	3346      	adds	r3, #70	; 0x46
 800279a:	4618      	mov	r0, r3
 800279c:	f7ff fe41 	bl	8002422 <ucg_ccs_step>
 80027a0:	687b      	ldr	r3, [r7, #4]
 80027a2:	3346      	adds	r3, #70	; 0x46
 80027a4:	330e      	adds	r3, #14
 80027a6:	4618      	mov	r0, r3
 80027a8:	f7ff fe3b 	bl	8002422 <ucg_ccs_step>
 80027ac:	687b      	ldr	r3, [r7, #4]
 80027ae:	3346      	adds	r3, #70	; 0x46
 80027b0:	331c      	adds	r3, #28
 80027b2:	4618      	mov	r0, r3
 80027b4:	f7ff fe35 	bl	8002422 <ucg_ccs_step>
 80027b8:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 80027bc:	b29b      	uxth	r3, r3
 80027be:	3301      	adds	r3, #1
 80027c0:	b29b      	uxth	r3, r3
 80027c2:	82bb      	strh	r3, [r7, #20]
 80027c4:	687b      	ldr	r3, [r7, #4]
 80027c6:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 80027ca:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 80027ce:	429a      	cmp	r2, r3
 80027d0:	dbcd      	blt.n	800276e <ucg_handle_st7735_l90se+0xca>
 80027d2:	2101      	movs	r1, #1
 80027d4:	6878      	ldr	r0, [r7, #4]
 80027d6:	f001 fc49 	bl	800406c <ucg_com_SetCSLineStatus>
 80027da:	2301      	movs	r3, #1
 80027dc:	e000      	b.n	80027e0 <ucg_handle_st7735_l90se+0x13c>
 80027de:	2300      	movs	r3, #0
 80027e0:	4618      	mov	r0, r3
 80027e2:	371c      	adds	r7, #28
 80027e4:	46bd      	mov	sp, r7
 80027e6:	bd90      	pop	{r4, r7, pc}
 80027e8:	08004e18 	.word	0x08004e18
 80027ec:	08004e38 	.word	0x08004e38
 80027f0:	08004e5c 	.word	0x08004e5c
 80027f4:	08004e80 	.word	0x08004e80

080027f8 <ucg_dev_ic_st7735_18>:
 80027f8:	b590      	push	{r4, r7, lr}
 80027fa:	b087      	sub	sp, #28
 80027fc:	af00      	add	r7, sp, #0
 80027fe:	60f8      	str	r0, [r7, #12]
 8002800:	460b      	mov	r3, r1
 8002802:	607a      	str	r2, [r7, #4]
 8002804:	817b      	strh	r3, [r7, #10]
 8002806:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800280a:	3b0a      	subs	r3, #10
 800280c:	2b0b      	cmp	r3, #11
 800280e:	d85f      	bhi.n	80028d0 <ucg_dev_ic_st7735_18+0xd8>
 8002810:	a201      	add	r2, pc, #4	; (adr r2, 8002818 <ucg_dev_ic_st7735_18+0x20>)
 8002812:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002816:	bf00      	nop
 8002818:	08002849 	.word	0x08002849
 800281c:	08002863 	.word	0x08002863
 8002820:	080028d1 	.word	0x080028d1
 8002824:	080028d1 	.word	0x080028d1
 8002828:	080028d1 	.word	0x080028d1
 800282c:	0800286f 	.word	0x0800286f
 8002830:	080028d1 	.word	0x080028d1
 8002834:	080028d1 	.word	0x080028d1
 8002838:	080028d1 	.word	0x080028d1
 800283c:	080028d1 	.word	0x080028d1
 8002840:	0800287f 	.word	0x0800287f
 8002844:	080028c7 	.word	0x080028c7
 8002848:	68fb      	ldr	r3, [r7, #12]
 800284a:	2202      	movs	r2, #2
 800284c:	841a      	strh	r2, [r3, #32]
 800284e:	68fb      	ldr	r3, [r7, #12]
 8002850:	2201      	movs	r2, #1
 8002852:	845a      	strh	r2, [r3, #34]	; 0x22
 8002854:	2242      	movs	r2, #66	; 0x42
 8002856:	2164      	movs	r1, #100	; 0x64
 8002858:	68f8      	ldr	r0, [r7, #12]
 800285a:	f001 fb56 	bl	8003f0a <ucg_com_PowerUp>
 800285e:	4603      	mov	r3, r0
 8002860:	e03e      	b.n	80028e0 <ucg_dev_ic_st7735_18+0xe8>
 8002862:	4921      	ldr	r1, [pc, #132]	; (80028e8 <ucg_dev_ic_st7735_18+0xf0>)
 8002864:	68f8      	ldr	r0, [r7, #12]
 8002866:	f001 fcb5 	bl	80041d4 <ucg_com_SendCmdSeq>
 800286a:	2301      	movs	r3, #1
 800286c:	e038      	b.n	80028e0 <ucg_dev_ic_st7735_18+0xe8>
 800286e:	687b      	ldr	r3, [r7, #4]
 8002870:	2280      	movs	r2, #128	; 0x80
 8002872:	801a      	strh	r2, [r3, #0]
 8002874:	687b      	ldr	r3, [r7, #4]
 8002876:	2280      	movs	r2, #128	; 0x80
 8002878:	805a      	strh	r2, [r3, #2]
 800287a:	2301      	movs	r3, #1
 800287c:	e030      	b.n	80028e0 <ucg_dev_ic_st7735_18+0xe8>
 800287e:	68f8      	ldr	r0, [r7, #12]
 8002880:	f001 f960 	bl	8003b44 <ucg_clip_is_pixel_visible>
 8002884:	4603      	mov	r3, r0
 8002886:	2b00      	cmp	r3, #0
 8002888:	d01b      	beq.n	80028c2 <ucg_dev_ic_st7735_18+0xca>
 800288a:	4918      	ldr	r1, [pc, #96]	; (80028ec <ucg_dev_ic_st7735_18+0xf4>)
 800288c:	68f8      	ldr	r0, [r7, #12]
 800288e:	f001 fca1 	bl	80041d4 <ucg_com_SendCmdSeq>
 8002892:	68fb      	ldr	r3, [r7, #12]
 8002894:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8002898:	753b      	strb	r3, [r7, #20]
 800289a:	68fb      	ldr	r3, [r7, #12]
 800289c:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 80028a0:	757b      	strb	r3, [r7, #21]
 80028a2:	68fb      	ldr	r3, [r7, #12]
 80028a4:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 80028a8:	75bb      	strb	r3, [r7, #22]
 80028aa:	68fb      	ldr	r3, [r7, #12]
 80028ac:	69dc      	ldr	r4, [r3, #28]
 80028ae:	f107 0314 	add.w	r3, r7, #20
 80028b2:	2201      	movs	r2, #1
 80028b4:	2113      	movs	r1, #19
 80028b6:	68f8      	ldr	r0, [r7, #12]
 80028b8:	47a0      	blx	r4
 80028ba:	2101      	movs	r1, #1
 80028bc:	68f8      	ldr	r0, [r7, #12]
 80028be:	f001 fbd5 	bl	800406c <ucg_com_SetCSLineStatus>
 80028c2:	2301      	movs	r3, #1
 80028c4:	e00c      	b.n	80028e0 <ucg_dev_ic_st7735_18+0xe8>
 80028c6:	68f8      	ldr	r0, [r7, #12]
 80028c8:	f7ff fe80 	bl	80025cc <ucg_handle_st7735_l90fx>
 80028cc:	2301      	movs	r3, #1
 80028ce:	e007      	b.n	80028e0 <ucg_dev_ic_st7735_18+0xe8>
 80028d0:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80028d4:	687a      	ldr	r2, [r7, #4]
 80028d6:	4619      	mov	r1, r3
 80028d8:	68f8      	ldr	r0, [r7, #12]
 80028da:	f7ff fe47 	bl	800256c <ucg_dev_default_cb>
 80028de:	4603      	mov	r3, r0
 80028e0:	4618      	mov	r0, r3
 80028e2:	371c      	adds	r7, #28
 80028e4:	46bd      	mov	sp, r7
 80028e6:	bd90      	pop	{r4, r7, pc}
 80028e8:	08004ea4 	.word	0x08004ea4
 80028ec:	08004df8 	.word	0x08004df8

080028f0 <ucg_ext_st7735_18>:
 80028f0:	b580      	push	{r7, lr}
 80028f2:	b084      	sub	sp, #16
 80028f4:	af00      	add	r7, sp, #0
 80028f6:	60f8      	str	r0, [r7, #12]
 80028f8:	460b      	mov	r3, r1
 80028fa:	607a      	str	r2, [r7, #4]
 80028fc:	817b      	strh	r3, [r7, #10]
 80028fe:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002902:	2b17      	cmp	r3, #23
 8002904:	d103      	bne.n	800290e <ucg_ext_st7735_18+0x1e>
 8002906:	68f8      	ldr	r0, [r7, #12]
 8002908:	f7ff fecc 	bl	80026a4 <ucg_handle_st7735_l90se>
 800290c:	bf00      	nop
 800290e:	2301      	movs	r3, #1
 8002910:	4618      	mov	r0, r3
 8002912:	3710      	adds	r7, #16
 8002914:	46bd      	mov	sp, r7
 8002916:	bd80      	pop	{r7, pc}

08002918 <ucg_PowerDown>:
 8002918:	b580      	push	{r7, lr}
 800291a:	b082      	sub	sp, #8
 800291c:	af00      	add	r7, sp, #0
 800291e:	6078      	str	r0, [r7, #4]
 8002920:	687b      	ldr	r3, [r7, #4]
 8002922:	781b      	ldrb	r3, [r3, #0]
 8002924:	f003 0301 	and.w	r3, r3, #1
 8002928:	b2db      	uxtb	r3, r3
 800292a:	2b00      	cmp	r3, #0
 800292c:	d00a      	beq.n	8002944 <ucg_PowerDown+0x2c>
 800292e:	687b      	ldr	r3, [r7, #4]
 8002930:	689b      	ldr	r3, [r3, #8]
 8002932:	2200      	movs	r2, #0
 8002934:	210b      	movs	r1, #11
 8002936:	6878      	ldr	r0, [r7, #4]
 8002938:	4798      	blx	r3
 800293a:	687a      	ldr	r2, [r7, #4]
 800293c:	7813      	ldrb	r3, [r2, #0]
 800293e:	f36f 0300 	bfc	r3, #0, #1
 8002942:	7013      	strb	r3, [r2, #0]
 8002944:	bf00      	nop
 8002946:	3708      	adds	r7, #8
 8002948:	46bd      	mov	sp, r7
 800294a:	bd80      	pop	{r7, pc}

0800294c <ucg_PowerUp>:
 800294c:	b580      	push	{r7, lr}
 800294e:	b084      	sub	sp, #16
 8002950:	af00      	add	r7, sp, #0
 8002952:	6078      	str	r0, [r7, #4]
 8002954:	6878      	ldr	r0, [r7, #4]
 8002956:	f7ff ffdf 	bl	8002918 <ucg_PowerDown>
 800295a:	687b      	ldr	r3, [r7, #4]
 800295c:	689b      	ldr	r3, [r3, #8]
 800295e:	2200      	movs	r2, #0
 8002960:	210a      	movs	r1, #10
 8002962:	6878      	ldr	r0, [r7, #4]
 8002964:	4798      	blx	r3
 8002966:	4603      	mov	r3, r0
 8002968:	81fb      	strh	r3, [r7, #14]
 800296a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800296e:	2b00      	cmp	r3, #0
 8002970:	d004      	beq.n	800297c <ucg_PowerUp+0x30>
 8002972:	687a      	ldr	r2, [r7, #4]
 8002974:	7813      	ldrb	r3, [r2, #0]
 8002976:	f043 0301 	orr.w	r3, r3, #1
 800297a:	7013      	strb	r3, [r2, #0]
 800297c:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002980:	4618      	mov	r0, r3
 8002982:	3710      	adds	r7, #16
 8002984:	46bd      	mov	sp, r7
 8002986:	bd80      	pop	{r7, pc}

08002988 <ucg_SetClipBox>:
 8002988:	b580      	push	{r7, lr}
 800298a:	b082      	sub	sp, #8
 800298c:	af00      	add	r7, sp, #0
 800298e:	6078      	str	r0, [r7, #4]
 8002990:	6039      	str	r1, [r7, #0]
 8002992:	687b      	ldr	r3, [r7, #4]
 8002994:	689b      	ldr	r3, [r3, #8]
 8002996:	683a      	ldr	r2, [r7, #0]
 8002998:	210c      	movs	r1, #12
 800299a:	6878      	ldr	r0, [r7, #4]
 800299c:	4798      	blx	r3
 800299e:	bf00      	nop
 80029a0:	3708      	adds	r7, #8
 80029a2:	46bd      	mov	sp, r7
 80029a4:	bd80      	pop	{r7, pc}

080029a6 <ucg_SetMaxClipRange>:
 80029a6:	b580      	push	{r7, lr}
 80029a8:	b084      	sub	sp, #16
 80029aa:	af00      	add	r7, sp, #0
 80029ac:	6078      	str	r0, [r7, #4]
 80029ae:	687a      	ldr	r2, [r7, #4]
 80029b0:	f107 030c 	add.w	r3, r7, #12
 80029b4:	3202      	adds	r2, #2
 80029b6:	6810      	ldr	r0, [r2, #0]
 80029b8:	6018      	str	r0, [r3, #0]
 80029ba:	2300      	movs	r3, #0
 80029bc:	813b      	strh	r3, [r7, #8]
 80029be:	2300      	movs	r3, #0
 80029c0:	817b      	strh	r3, [r7, #10]
 80029c2:	f107 0308 	add.w	r3, r7, #8
 80029c6:	4619      	mov	r1, r3
 80029c8:	6878      	ldr	r0, [r7, #4]
 80029ca:	f7ff ffdd 	bl	8002988 <ucg_SetClipBox>
 80029ce:	bf00      	nop
 80029d0:	3710      	adds	r7, #16
 80029d2:	46bd      	mov	sp, r7
 80029d4:	bd80      	pop	{r7, pc}

080029d6 <ucg_GetDimension>:
 80029d6:	b580      	push	{r7, lr}
 80029d8:	b082      	sub	sp, #8
 80029da:	af00      	add	r7, sp, #0
 80029dc:	6078      	str	r0, [r7, #4]
 80029de:	687b      	ldr	r3, [r7, #4]
 80029e0:	689b      	ldr	r3, [r3, #8]
 80029e2:	687a      	ldr	r2, [r7, #4]
 80029e4:	3202      	adds	r2, #2
 80029e6:	210f      	movs	r1, #15
 80029e8:	6878      	ldr	r0, [r7, #4]
 80029ea:	4798      	blx	r3
 80029ec:	6878      	ldr	r0, [r7, #4]
 80029ee:	f7ff ffda 	bl	80029a6 <ucg_SetMaxClipRange>
 80029f2:	bf00      	nop
 80029f4:	3708      	adds	r7, #8
 80029f6:	46bd      	mov	sp, r7
 80029f8:	bd80      	pop	{r7, pc}

080029fa <ucg_DrawL90FXWithArg>:
 80029fa:	b580      	push	{r7, lr}
 80029fc:	b082      	sub	sp, #8
 80029fe:	af00      	add	r7, sp, #0
 8002a00:	6078      	str	r0, [r7, #4]
 8002a02:	687b      	ldr	r3, [r7, #4]
 8002a04:	689b      	ldr	r3, [r3, #8]
 8002a06:	687a      	ldr	r2, [r7, #4]
 8002a08:	3224      	adds	r2, #36	; 0x24
 8002a0a:	2115      	movs	r1, #21
 8002a0c:	6878      	ldr	r0, [r7, #4]
 8002a0e:	4798      	blx	r3
 8002a10:	bf00      	nop
 8002a12:	3708      	adds	r7, #8
 8002a14:	46bd      	mov	sp, r7
 8002a16:	bd80      	pop	{r7, pc}

08002a18 <ucg_dev_st7735_18x128x128>:
 8002a18:	b580      	push	{r7, lr}
 8002a1a:	b084      	sub	sp, #16
 8002a1c:	af00      	add	r7, sp, #0
 8002a1e:	60f8      	str	r0, [r7, #12]
 8002a20:	460b      	mov	r3, r1
 8002a22:	607a      	str	r2, [r7, #4]
 8002a24:	817b      	strh	r3, [r7, #10]
 8002a26:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002a2a:	2b0b      	cmp	r3, #11
 8002a2c:	d015      	beq.n	8002a5a <ucg_dev_st7735_18x128x128+0x42>
 8002a2e:	2b0f      	cmp	r3, #15
 8002a30:	d01c      	beq.n	8002a6c <ucg_dev_st7735_18x128x128+0x54>
 8002a32:	2b0a      	cmp	r3, #10
 8002a34:	d122      	bne.n	8002a7c <ucg_dev_st7735_18x128x128+0x64>
 8002a36:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002a3a:	687a      	ldr	r2, [r7, #4]
 8002a3c:	4619      	mov	r1, r3
 8002a3e:	68f8      	ldr	r0, [r7, #12]
 8002a40:	f7ff feda 	bl	80027f8 <ucg_dev_ic_st7735_18>
 8002a44:	4603      	mov	r3, r0
 8002a46:	2b00      	cmp	r3, #0
 8002a48:	d101      	bne.n	8002a4e <ucg_dev_st7735_18x128x128+0x36>
 8002a4a:	2300      	movs	r3, #0
 8002a4c:	e01e      	b.n	8002a8c <ucg_dev_st7735_18x128x128+0x74>
 8002a4e:	4911      	ldr	r1, [pc, #68]	; (8002a94 <ucg_dev_st7735_18x128x128+0x7c>)
 8002a50:	68f8      	ldr	r0, [r7, #12]
 8002a52:	f001 fbbf 	bl	80041d4 <ucg_com_SendCmdSeq>
 8002a56:	2301      	movs	r3, #1
 8002a58:	e018      	b.n	8002a8c <ucg_dev_st7735_18x128x128+0x74>
 8002a5a:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002a5e:	687a      	ldr	r2, [r7, #4]
 8002a60:	4619      	mov	r1, r3
 8002a62:	68f8      	ldr	r0, [r7, #12]
 8002a64:	f7ff fec8 	bl	80027f8 <ucg_dev_ic_st7735_18>
 8002a68:	4603      	mov	r3, r0
 8002a6a:	e00f      	b.n	8002a8c <ucg_dev_st7735_18x128x128+0x74>
 8002a6c:	687b      	ldr	r3, [r7, #4]
 8002a6e:	2280      	movs	r2, #128	; 0x80
 8002a70:	801a      	strh	r2, [r3, #0]
 8002a72:	687b      	ldr	r3, [r7, #4]
 8002a74:	2280      	movs	r2, #128	; 0x80
 8002a76:	805a      	strh	r2, [r3, #2]
 8002a78:	2301      	movs	r3, #1
 8002a7a:	e007      	b.n	8002a8c <ucg_dev_st7735_18x128x128+0x74>
 8002a7c:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002a80:	687a      	ldr	r2, [r7, #4]
 8002a82:	4619      	mov	r1, r3
 8002a84:	68f8      	ldr	r0, [r7, #12]
 8002a86:	f7ff feb7 	bl	80027f8 <ucg_dev_ic_st7735_18>
 8002a8a:	4603      	mov	r3, r0
 8002a8c:	4618      	mov	r0, r3
 8002a8e:	3710      	adds	r7, #16
 8002a90:	46bd      	mov	sp, r7
 8002a92:	bd80      	pop	{r7, pc}
 8002a94:	08004eac 	.word	0x08004eac

08002a98 <ucg_font_get_byte>:
 8002a98:	b480      	push	{r7}
 8002a9a:	b083      	sub	sp, #12
 8002a9c:	af00      	add	r7, sp, #0
 8002a9e:	6078      	str	r0, [r7, #4]
 8002aa0:	460b      	mov	r3, r1
 8002aa2:	70fb      	strb	r3, [r7, #3]
 8002aa4:	78fb      	ldrb	r3, [r7, #3]
 8002aa6:	687a      	ldr	r2, [r7, #4]
 8002aa8:	4413      	add	r3, r2
 8002aaa:	607b      	str	r3, [r7, #4]
 8002aac:	687b      	ldr	r3, [r7, #4]
 8002aae:	781b      	ldrb	r3, [r3, #0]
 8002ab0:	4618      	mov	r0, r3
 8002ab2:	370c      	adds	r7, #12
 8002ab4:	46bd      	mov	sp, r7
 8002ab6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002aba:	4770      	bx	lr

08002abc <ucg_font_get_word>:
 8002abc:	b480      	push	{r7}
 8002abe:	b085      	sub	sp, #20
 8002ac0:	af00      	add	r7, sp, #0
 8002ac2:	6078      	str	r0, [r7, #4]
 8002ac4:	460b      	mov	r3, r1
 8002ac6:	70fb      	strb	r3, [r7, #3]
 8002ac8:	78fb      	ldrb	r3, [r7, #3]
 8002aca:	687a      	ldr	r2, [r7, #4]
 8002acc:	4413      	add	r3, r2
 8002ace:	607b      	str	r3, [r7, #4]
 8002ad0:	687b      	ldr	r3, [r7, #4]
 8002ad2:	781b      	ldrb	r3, [r3, #0]
 8002ad4:	81fb      	strh	r3, [r7, #14]
 8002ad6:	687b      	ldr	r3, [r7, #4]
 8002ad8:	3301      	adds	r3, #1
 8002ada:	607b      	str	r3, [r7, #4]
 8002adc:	89fb      	ldrh	r3, [r7, #14]
 8002ade:	021b      	lsls	r3, r3, #8
 8002ae0:	81fb      	strh	r3, [r7, #14]
 8002ae2:	687b      	ldr	r3, [r7, #4]
 8002ae4:	781b      	ldrb	r3, [r3, #0]
 8002ae6:	b29a      	uxth	r2, r3
 8002ae8:	89fb      	ldrh	r3, [r7, #14]
 8002aea:	4413      	add	r3, r2
 8002aec:	81fb      	strh	r3, [r7, #14]
 8002aee:	89fb      	ldrh	r3, [r7, #14]
 8002af0:	4618      	mov	r0, r3
 8002af2:	3714      	adds	r7, #20
 8002af4:	46bd      	mov	sp, r7
 8002af6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002afa:	4770      	bx	lr

08002afc <ucg_read_font_info>:
 8002afc:	b580      	push	{r7, lr}
 8002afe:	b082      	sub	sp, #8
 8002b00:	af00      	add	r7, sp, #0
 8002b02:	6078      	str	r0, [r7, #4]
 8002b04:	6039      	str	r1, [r7, #0]
 8002b06:	2100      	movs	r1, #0
 8002b08:	6838      	ldr	r0, [r7, #0]
 8002b0a:	f7ff ffc5 	bl	8002a98 <ucg_font_get_byte>
 8002b0e:	4603      	mov	r3, r0
 8002b10:	461a      	mov	r2, r3
 8002b12:	687b      	ldr	r3, [r7, #4]
 8002b14:	701a      	strb	r2, [r3, #0]
 8002b16:	2101      	movs	r1, #1
 8002b18:	6838      	ldr	r0, [r7, #0]
 8002b1a:	f7ff ffbd 	bl	8002a98 <ucg_font_get_byte>
 8002b1e:	4603      	mov	r3, r0
 8002b20:	461a      	mov	r2, r3
 8002b22:	687b      	ldr	r3, [r7, #4]
 8002b24:	705a      	strb	r2, [r3, #1]
 8002b26:	2102      	movs	r1, #2
 8002b28:	6838      	ldr	r0, [r7, #0]
 8002b2a:	f7ff ffb5 	bl	8002a98 <ucg_font_get_byte>
 8002b2e:	4603      	mov	r3, r0
 8002b30:	461a      	mov	r2, r3
 8002b32:	687b      	ldr	r3, [r7, #4]
 8002b34:	709a      	strb	r2, [r3, #2]
 8002b36:	2103      	movs	r1, #3
 8002b38:	6838      	ldr	r0, [r7, #0]
 8002b3a:	f7ff ffad 	bl	8002a98 <ucg_font_get_byte>
 8002b3e:	4603      	mov	r3, r0
 8002b40:	461a      	mov	r2, r3
 8002b42:	687b      	ldr	r3, [r7, #4]
 8002b44:	70da      	strb	r2, [r3, #3]
 8002b46:	2104      	movs	r1, #4
 8002b48:	6838      	ldr	r0, [r7, #0]
 8002b4a:	f7ff ffa5 	bl	8002a98 <ucg_font_get_byte>
 8002b4e:	4603      	mov	r3, r0
 8002b50:	461a      	mov	r2, r3
 8002b52:	687b      	ldr	r3, [r7, #4]
 8002b54:	711a      	strb	r2, [r3, #4]
 8002b56:	2105      	movs	r1, #5
 8002b58:	6838      	ldr	r0, [r7, #0]
 8002b5a:	f7ff ff9d 	bl	8002a98 <ucg_font_get_byte>
 8002b5e:	4603      	mov	r3, r0
 8002b60:	461a      	mov	r2, r3
 8002b62:	687b      	ldr	r3, [r7, #4]
 8002b64:	715a      	strb	r2, [r3, #5]
 8002b66:	2106      	movs	r1, #6
 8002b68:	6838      	ldr	r0, [r7, #0]
 8002b6a:	f7ff ff95 	bl	8002a98 <ucg_font_get_byte>
 8002b6e:	4603      	mov	r3, r0
 8002b70:	461a      	mov	r2, r3
 8002b72:	687b      	ldr	r3, [r7, #4]
 8002b74:	719a      	strb	r2, [r3, #6]
 8002b76:	2107      	movs	r1, #7
 8002b78:	6838      	ldr	r0, [r7, #0]
 8002b7a:	f7ff ff8d 	bl	8002a98 <ucg_font_get_byte>
 8002b7e:	4603      	mov	r3, r0
 8002b80:	461a      	mov	r2, r3
 8002b82:	687b      	ldr	r3, [r7, #4]
 8002b84:	71da      	strb	r2, [r3, #7]
 8002b86:	2108      	movs	r1, #8
 8002b88:	6838      	ldr	r0, [r7, #0]
 8002b8a:	f7ff ff85 	bl	8002a98 <ucg_font_get_byte>
 8002b8e:	4603      	mov	r3, r0
 8002b90:	461a      	mov	r2, r3
 8002b92:	687b      	ldr	r3, [r7, #4]
 8002b94:	721a      	strb	r2, [r3, #8]
 8002b96:	2109      	movs	r1, #9
 8002b98:	6838      	ldr	r0, [r7, #0]
 8002b9a:	f7ff ff7d 	bl	8002a98 <ucg_font_get_byte>
 8002b9e:	4603      	mov	r3, r0
 8002ba0:	b25a      	sxtb	r2, r3
 8002ba2:	687b      	ldr	r3, [r7, #4]
 8002ba4:	725a      	strb	r2, [r3, #9]
 8002ba6:	210a      	movs	r1, #10
 8002ba8:	6838      	ldr	r0, [r7, #0]
 8002baa:	f7ff ff75 	bl	8002a98 <ucg_font_get_byte>
 8002bae:	4603      	mov	r3, r0
 8002bb0:	b25a      	sxtb	r2, r3
 8002bb2:	687b      	ldr	r3, [r7, #4]
 8002bb4:	729a      	strb	r2, [r3, #10]
 8002bb6:	210b      	movs	r1, #11
 8002bb8:	6838      	ldr	r0, [r7, #0]
 8002bba:	f7ff ff6d 	bl	8002a98 <ucg_font_get_byte>
 8002bbe:	4603      	mov	r3, r0
 8002bc0:	b25a      	sxtb	r2, r3
 8002bc2:	687b      	ldr	r3, [r7, #4]
 8002bc4:	72da      	strb	r2, [r3, #11]
 8002bc6:	210c      	movs	r1, #12
 8002bc8:	6838      	ldr	r0, [r7, #0]
 8002bca:	f7ff ff65 	bl	8002a98 <ucg_font_get_byte>
 8002bce:	4603      	mov	r3, r0
 8002bd0:	b25a      	sxtb	r2, r3
 8002bd2:	687b      	ldr	r3, [r7, #4]
 8002bd4:	731a      	strb	r2, [r3, #12]
 8002bd6:	210d      	movs	r1, #13
 8002bd8:	6838      	ldr	r0, [r7, #0]
 8002bda:	f7ff ff5d 	bl	8002a98 <ucg_font_get_byte>
 8002bde:	4603      	mov	r3, r0
 8002be0:	b25a      	sxtb	r2, r3
 8002be2:	687b      	ldr	r3, [r7, #4]
 8002be4:	735a      	strb	r2, [r3, #13]
 8002be6:	210e      	movs	r1, #14
 8002be8:	6838      	ldr	r0, [r7, #0]
 8002bea:	f7ff ff55 	bl	8002a98 <ucg_font_get_byte>
 8002bee:	4603      	mov	r3, r0
 8002bf0:	b25a      	sxtb	r2, r3
 8002bf2:	687b      	ldr	r3, [r7, #4]
 8002bf4:	739a      	strb	r2, [r3, #14]
 8002bf6:	210f      	movs	r1, #15
 8002bf8:	6838      	ldr	r0, [r7, #0]
 8002bfa:	f7ff ff4d 	bl	8002a98 <ucg_font_get_byte>
 8002bfe:	4603      	mov	r3, r0
 8002c00:	b25a      	sxtb	r2, r3
 8002c02:	687b      	ldr	r3, [r7, #4]
 8002c04:	73da      	strb	r2, [r3, #15]
 8002c06:	2110      	movs	r1, #16
 8002c08:	6838      	ldr	r0, [r7, #0]
 8002c0a:	f7ff ff45 	bl	8002a98 <ucg_font_get_byte>
 8002c0e:	4603      	mov	r3, r0
 8002c10:	b25a      	sxtb	r2, r3
 8002c12:	687b      	ldr	r3, [r7, #4]
 8002c14:	741a      	strb	r2, [r3, #16]
 8002c16:	2111      	movs	r1, #17
 8002c18:	6838      	ldr	r0, [r7, #0]
 8002c1a:	f7ff ff4f 	bl	8002abc <ucg_font_get_word>
 8002c1e:	4603      	mov	r3, r0
 8002c20:	461a      	mov	r2, r3
 8002c22:	687b      	ldr	r3, [r7, #4]
 8002c24:	825a      	strh	r2, [r3, #18]
 8002c26:	2113      	movs	r1, #19
 8002c28:	6838      	ldr	r0, [r7, #0]
 8002c2a:	f7ff ff47 	bl	8002abc <ucg_font_get_word>
 8002c2e:	4603      	mov	r3, r0
 8002c30:	461a      	mov	r2, r3
 8002c32:	687b      	ldr	r3, [r7, #4]
 8002c34:	829a      	strh	r2, [r3, #20]
 8002c36:	bf00      	nop
 8002c38:	3708      	adds	r7, #8
 8002c3a:	46bd      	mov	sp, r7
 8002c3c:	bd80      	pop	{r7, pc}

08002c3e <ucg_font_decode_get_unsigned_bits>:
 8002c3e:	b480      	push	{r7}
 8002c40:	b085      	sub	sp, #20
 8002c42:	af00      	add	r7, sp, #0
 8002c44:	6078      	str	r0, [r7, #4]
 8002c46:	460b      	mov	r3, r1
 8002c48:	70fb      	strb	r3, [r7, #3]
 8002c4a:	687b      	ldr	r3, [r7, #4]
 8002c4c:	7b1b      	ldrb	r3, [r3, #12]
 8002c4e:	737b      	strb	r3, [r7, #13]
 8002c50:	687b      	ldr	r3, [r7, #4]
 8002c52:	681b      	ldr	r3, [r3, #0]
 8002c54:	781b      	ldrb	r3, [r3, #0]
 8002c56:	73fb      	strb	r3, [r7, #15]
 8002c58:	7bfa      	ldrb	r2, [r7, #15]
 8002c5a:	7b7b      	ldrb	r3, [r7, #13]
 8002c5c:	fa42 f303 	asr.w	r3, r2, r3
 8002c60:	73fb      	strb	r3, [r7, #15]
 8002c62:	7b7b      	ldrb	r3, [r7, #13]
 8002c64:	73bb      	strb	r3, [r7, #14]
 8002c66:	7bba      	ldrb	r2, [r7, #14]
 8002c68:	78fb      	ldrb	r3, [r7, #3]
 8002c6a:	4413      	add	r3, r2
 8002c6c:	73bb      	strb	r3, [r7, #14]
 8002c6e:	7bbb      	ldrb	r3, [r7, #14]
 8002c70:	2b07      	cmp	r3, #7
 8002c72:	d91a      	bls.n	8002caa <ucg_font_decode_get_unsigned_bits+0x6c>
 8002c74:	2308      	movs	r3, #8
 8002c76:	733b      	strb	r3, [r7, #12]
 8002c78:	7b3a      	ldrb	r2, [r7, #12]
 8002c7a:	7b7b      	ldrb	r3, [r7, #13]
 8002c7c:	1ad3      	subs	r3, r2, r3
 8002c7e:	733b      	strb	r3, [r7, #12]
 8002c80:	687b      	ldr	r3, [r7, #4]
 8002c82:	681b      	ldr	r3, [r3, #0]
 8002c84:	1c5a      	adds	r2, r3, #1
 8002c86:	687b      	ldr	r3, [r7, #4]
 8002c88:	601a      	str	r2, [r3, #0]
 8002c8a:	687b      	ldr	r3, [r7, #4]
 8002c8c:	681b      	ldr	r3, [r3, #0]
 8002c8e:	781b      	ldrb	r3, [r3, #0]
 8002c90:	461a      	mov	r2, r3
 8002c92:	7b3b      	ldrb	r3, [r7, #12]
 8002c94:	fa02 f303 	lsl.w	r3, r2, r3
 8002c98:	b25a      	sxtb	r2, r3
 8002c9a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002c9e:	4313      	orrs	r3, r2
 8002ca0:	b25b      	sxtb	r3, r3
 8002ca2:	73fb      	strb	r3, [r7, #15]
 8002ca4:	7bbb      	ldrb	r3, [r7, #14]
 8002ca6:	3b08      	subs	r3, #8
 8002ca8:	73bb      	strb	r3, [r7, #14]
 8002caa:	78fb      	ldrb	r3, [r7, #3]
 8002cac:	f04f 32ff 	mov.w	r2, #4294967295
 8002cb0:	fa02 f303 	lsl.w	r3, r2, r3
 8002cb4:	b2db      	uxtb	r3, r3
 8002cb6:	43db      	mvns	r3, r3
 8002cb8:	b2da      	uxtb	r2, r3
 8002cba:	7bfb      	ldrb	r3, [r7, #15]
 8002cbc:	4013      	ands	r3, r2
 8002cbe:	73fb      	strb	r3, [r7, #15]
 8002cc0:	687b      	ldr	r3, [r7, #4]
 8002cc2:	7bba      	ldrb	r2, [r7, #14]
 8002cc4:	731a      	strb	r2, [r3, #12]
 8002cc6:	7bfb      	ldrb	r3, [r7, #15]
 8002cc8:	4618      	mov	r0, r3
 8002cca:	3714      	adds	r7, #20
 8002ccc:	46bd      	mov	sp, r7
 8002cce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cd2:	4770      	bx	lr

08002cd4 <ucg_font_decode_get_signed_bits>:
 8002cd4:	b580      	push	{r7, lr}
 8002cd6:	b084      	sub	sp, #16
 8002cd8:	af00      	add	r7, sp, #0
 8002cda:	6078      	str	r0, [r7, #4]
 8002cdc:	460b      	mov	r3, r1
 8002cde:	70fb      	strb	r3, [r7, #3]
 8002ce0:	78fb      	ldrb	r3, [r7, #3]
 8002ce2:	4619      	mov	r1, r3
 8002ce4:	6878      	ldr	r0, [r7, #4]
 8002ce6:	f7ff ffaa 	bl	8002c3e <ucg_font_decode_get_unsigned_bits>
 8002cea:	4603      	mov	r3, r0
 8002cec:	73fb      	strb	r3, [r7, #15]
 8002cee:	2301      	movs	r3, #1
 8002cf0:	73bb      	strb	r3, [r7, #14]
 8002cf2:	78fb      	ldrb	r3, [r7, #3]
 8002cf4:	3b01      	subs	r3, #1
 8002cf6:	70fb      	strb	r3, [r7, #3]
 8002cf8:	f997 200e 	ldrsb.w	r2, [r7, #14]
 8002cfc:	78fb      	ldrb	r3, [r7, #3]
 8002cfe:	fa02 f303 	lsl.w	r3, r2, r3
 8002d02:	73bb      	strb	r3, [r7, #14]
 8002d04:	7bfa      	ldrb	r2, [r7, #15]
 8002d06:	7bbb      	ldrb	r3, [r7, #14]
 8002d08:	1ad3      	subs	r3, r2, r3
 8002d0a:	b2db      	uxtb	r3, r3
 8002d0c:	73fb      	strb	r3, [r7, #15]
 8002d0e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002d12:	4618      	mov	r0, r3
 8002d14:	3710      	adds	r7, #16
 8002d16:	46bd      	mov	sp, r7
 8002d18:	bd80      	pop	{r7, pc}

08002d1a <ucg_add_vector_y>:
 8002d1a:	b490      	push	{r4, r7}
 8002d1c:	b082      	sub	sp, #8
 8002d1e:	af00      	add	r7, sp, #0
 8002d20:	4604      	mov	r4, r0
 8002d22:	4608      	mov	r0, r1
 8002d24:	4611      	mov	r1, r2
 8002d26:	461a      	mov	r2, r3
 8002d28:	4623      	mov	r3, r4
 8002d2a:	80fb      	strh	r3, [r7, #6]
 8002d2c:	4603      	mov	r3, r0
 8002d2e:	717b      	strb	r3, [r7, #5]
 8002d30:	460b      	mov	r3, r1
 8002d32:	713b      	strb	r3, [r7, #4]
 8002d34:	4613      	mov	r3, r2
 8002d36:	70fb      	strb	r3, [r7, #3]
 8002d38:	78fb      	ldrb	r3, [r7, #3]
 8002d3a:	2b01      	cmp	r3, #1
 8002d3c:	d00b      	beq.n	8002d56 <ucg_add_vector_y+0x3c>
 8002d3e:	2b02      	cmp	r3, #2
 8002d40:	d011      	beq.n	8002d66 <ucg_add_vector_y+0x4c>
 8002d42:	2b00      	cmp	r3, #0
 8002d44:	d117      	bne.n	8002d76 <ucg_add_vector_y+0x5c>
 8002d46:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8002d4a:	b29a      	uxth	r2, r3
 8002d4c:	88fb      	ldrh	r3, [r7, #6]
 8002d4e:	4413      	add	r3, r2
 8002d50:	b29b      	uxth	r3, r3
 8002d52:	80fb      	strh	r3, [r7, #6]
 8002d54:	e017      	b.n	8002d86 <ucg_add_vector_y+0x6c>
 8002d56:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8002d5a:	b29a      	uxth	r2, r3
 8002d5c:	88fb      	ldrh	r3, [r7, #6]
 8002d5e:	4413      	add	r3, r2
 8002d60:	b29b      	uxth	r3, r3
 8002d62:	80fb      	strh	r3, [r7, #6]
 8002d64:	e00f      	b.n	8002d86 <ucg_add_vector_y+0x6c>
 8002d66:	88fa      	ldrh	r2, [r7, #6]
 8002d68:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8002d6c:	b29b      	uxth	r3, r3
 8002d6e:	1ad3      	subs	r3, r2, r3
 8002d70:	b29b      	uxth	r3, r3
 8002d72:	80fb      	strh	r3, [r7, #6]
 8002d74:	e007      	b.n	8002d86 <ucg_add_vector_y+0x6c>
 8002d76:	88fa      	ldrh	r2, [r7, #6]
 8002d78:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8002d7c:	b29b      	uxth	r3, r3
 8002d7e:	1ad3      	subs	r3, r2, r3
 8002d80:	b29b      	uxth	r3, r3
 8002d82:	80fb      	strh	r3, [r7, #6]
 8002d84:	bf00      	nop
 8002d86:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002d8a:	4618      	mov	r0, r3
 8002d8c:	3708      	adds	r7, #8
 8002d8e:	46bd      	mov	sp, r7
 8002d90:	bc90      	pop	{r4, r7}
 8002d92:	4770      	bx	lr

08002d94 <ucg_add_vector_x>:
 8002d94:	b490      	push	{r4, r7}
 8002d96:	b082      	sub	sp, #8
 8002d98:	af00      	add	r7, sp, #0
 8002d9a:	4604      	mov	r4, r0
 8002d9c:	4608      	mov	r0, r1
 8002d9e:	4611      	mov	r1, r2
 8002da0:	461a      	mov	r2, r3
 8002da2:	4623      	mov	r3, r4
 8002da4:	80fb      	strh	r3, [r7, #6]
 8002da6:	4603      	mov	r3, r0
 8002da8:	717b      	strb	r3, [r7, #5]
 8002daa:	460b      	mov	r3, r1
 8002dac:	713b      	strb	r3, [r7, #4]
 8002dae:	4613      	mov	r3, r2
 8002db0:	70fb      	strb	r3, [r7, #3]
 8002db2:	78fb      	ldrb	r3, [r7, #3]
 8002db4:	2b01      	cmp	r3, #1
 8002db6:	d00b      	beq.n	8002dd0 <ucg_add_vector_x+0x3c>
 8002db8:	2b02      	cmp	r3, #2
 8002dba:	d011      	beq.n	8002de0 <ucg_add_vector_x+0x4c>
 8002dbc:	2b00      	cmp	r3, #0
 8002dbe:	d117      	bne.n	8002df0 <ucg_add_vector_x+0x5c>
 8002dc0:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8002dc4:	b29a      	uxth	r2, r3
 8002dc6:	88fb      	ldrh	r3, [r7, #6]
 8002dc8:	4413      	add	r3, r2
 8002dca:	b29b      	uxth	r3, r3
 8002dcc:	80fb      	strh	r3, [r7, #6]
 8002dce:	e017      	b.n	8002e00 <ucg_add_vector_x+0x6c>
 8002dd0:	88fa      	ldrh	r2, [r7, #6]
 8002dd2:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8002dd6:	b29b      	uxth	r3, r3
 8002dd8:	1ad3      	subs	r3, r2, r3
 8002dda:	b29b      	uxth	r3, r3
 8002ddc:	80fb      	strh	r3, [r7, #6]
 8002dde:	e00f      	b.n	8002e00 <ucg_add_vector_x+0x6c>
 8002de0:	88fa      	ldrh	r2, [r7, #6]
 8002de2:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8002de6:	b29b      	uxth	r3, r3
 8002de8:	1ad3      	subs	r3, r2, r3
 8002dea:	b29b      	uxth	r3, r3
 8002dec:	80fb      	strh	r3, [r7, #6]
 8002dee:	e007      	b.n	8002e00 <ucg_add_vector_x+0x6c>
 8002df0:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8002df4:	b29a      	uxth	r2, r3
 8002df6:	88fb      	ldrh	r3, [r7, #6]
 8002df8:	4413      	add	r3, r2
 8002dfa:	b29b      	uxth	r3, r3
 8002dfc:	80fb      	strh	r3, [r7, #6]
 8002dfe:	bf00      	nop
 8002e00:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002e04:	4618      	mov	r0, r3
 8002e06:	3708      	adds	r7, #8
 8002e08:	46bd      	mov	sp, r7
 8002e0a:	bc90      	pop	{r4, r7}
 8002e0c:	4770      	bx	lr

08002e0e <ucg_font_decode_len>:
 8002e0e:	b590      	push	{r4, r7, lr}
 8002e10:	b089      	sub	sp, #36	; 0x24
 8002e12:	af02      	add	r7, sp, #8
 8002e14:	6078      	str	r0, [r7, #4]
 8002e16:	460b      	mov	r3, r1
 8002e18:	70fb      	strb	r3, [r7, #3]
 8002e1a:	4613      	mov	r3, r2
 8002e1c:	70bb      	strb	r3, [r7, #2]
 8002e1e:	687b      	ldr	r3, [r7, #4]
 8002e20:	3380      	adds	r3, #128	; 0x80
 8002e22:	613b      	str	r3, [r7, #16]
 8002e24:	78fb      	ldrb	r3, [r7, #3]
 8002e26:	75fb      	strb	r3, [r7, #23]
 8002e28:	693b      	ldr	r3, [r7, #16]
 8002e2a:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8002e2e:	757b      	strb	r3, [r7, #21]
 8002e30:	693b      	ldr	r3, [r7, #16]
 8002e32:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8002e36:	753b      	strb	r3, [r7, #20]
 8002e38:	693b      	ldr	r3, [r7, #16]
 8002e3a:	f993 300a 	ldrsb.w	r3, [r3, #10]
 8002e3e:	73fb      	strb	r3, [r7, #15]
 8002e40:	7bfa      	ldrb	r2, [r7, #15]
 8002e42:	7d7b      	ldrb	r3, [r7, #21]
 8002e44:	1ad3      	subs	r3, r2, r3
 8002e46:	73fb      	strb	r3, [r7, #15]
 8002e48:	7bfb      	ldrb	r3, [r7, #15]
 8002e4a:	75bb      	strb	r3, [r7, #22]
 8002e4c:	7dfa      	ldrb	r2, [r7, #23]
 8002e4e:	7bfb      	ldrb	r3, [r7, #15]
 8002e50:	429a      	cmp	r2, r3
 8002e52:	d201      	bcs.n	8002e58 <ucg_font_decode_len+0x4a>
 8002e54:	7dfb      	ldrb	r3, [r7, #23]
 8002e56:	75bb      	strb	r3, [r7, #22]
 8002e58:	693b      	ldr	r3, [r7, #16]
 8002e5a:	889b      	ldrh	r3, [r3, #4]
 8002e5c:	81bb      	strh	r3, [r7, #12]
 8002e5e:	693b      	ldr	r3, [r7, #16]
 8002e60:	88db      	ldrh	r3, [r3, #6]
 8002e62:	817b      	strh	r3, [r7, #10]
 8002e64:	f997 1015 	ldrsb.w	r1, [r7, #21]
 8002e68:	f997 2014 	ldrsb.w	r2, [r7, #20]
 8002e6c:	693b      	ldr	r3, [r7, #16]
 8002e6e:	7b9b      	ldrb	r3, [r3, #14]
 8002e70:	f9b7 000c 	ldrsh.w	r0, [r7, #12]
 8002e74:	f7ff ff8e 	bl	8002d94 <ucg_add_vector_x>
 8002e78:	4603      	mov	r3, r0
 8002e7a:	81bb      	strh	r3, [r7, #12]
 8002e7c:	f997 1015 	ldrsb.w	r1, [r7, #21]
 8002e80:	f997 2014 	ldrsb.w	r2, [r7, #20]
 8002e84:	693b      	ldr	r3, [r7, #16]
 8002e86:	7b9b      	ldrb	r3, [r3, #14]
 8002e88:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 8002e8c:	f7ff ff45 	bl	8002d1a <ucg_add_vector_y>
 8002e90:	4603      	mov	r3, r0
 8002e92:	817b      	strh	r3, [r7, #10]
 8002e94:	78bb      	ldrb	r3, [r7, #2]
 8002e96:	2b00      	cmp	r3, #0
 8002e98:	d011      	beq.n	8002ebe <ucg_font_decode_len+0xb0>
 8002e9a:	7dbb      	ldrb	r3, [r7, #22]
 8002e9c:	b21c      	sxth	r4, r3
 8002e9e:	693b      	ldr	r3, [r7, #16]
 8002ea0:	7b9b      	ldrb	r3, [r3, #14]
 8002ea2:	b21b      	sxth	r3, r3
 8002ea4:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 8002ea8:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 8002eac:	2200      	movs	r2, #0
 8002eae:	9201      	str	r2, [sp, #4]
 8002eb0:	9300      	str	r3, [sp, #0]
 8002eb2:	4623      	mov	r3, r4
 8002eb4:	4602      	mov	r2, r0
 8002eb6:	6878      	ldr	r0, [r7, #4]
 8002eb8:	f000 fbc0 	bl	800363c <ucg_Draw90Line>
 8002ebc:	e014      	b.n	8002ee8 <ucg_font_decode_len+0xda>
 8002ebe:	693b      	ldr	r3, [r7, #16]
 8002ec0:	7b5b      	ldrb	r3, [r3, #13]
 8002ec2:	2b00      	cmp	r3, #0
 8002ec4:	d110      	bne.n	8002ee8 <ucg_font_decode_len+0xda>
 8002ec6:	7dbb      	ldrb	r3, [r7, #22]
 8002ec8:	b21c      	sxth	r4, r3
 8002eca:	693b      	ldr	r3, [r7, #16]
 8002ecc:	7b9b      	ldrb	r3, [r3, #14]
 8002ece:	b21b      	sxth	r3, r3
 8002ed0:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 8002ed4:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 8002ed8:	2201      	movs	r2, #1
 8002eda:	9201      	str	r2, [sp, #4]
 8002edc:	9300      	str	r3, [sp, #0]
 8002ede:	4623      	mov	r3, r4
 8002ee0:	4602      	mov	r2, r0
 8002ee2:	6878      	ldr	r0, [r7, #4]
 8002ee4:	f000 fbaa 	bl	800363c <ucg_Draw90Line>
 8002ee8:	7dfa      	ldrb	r2, [r7, #23]
 8002eea:	7bfb      	ldrb	r3, [r7, #15]
 8002eec:	429a      	cmp	r2, r3
 8002eee:	d309      	bcc.n	8002f04 <ucg_font_decode_len+0xf6>
 8002ef0:	7dfa      	ldrb	r2, [r7, #23]
 8002ef2:	7bfb      	ldrb	r3, [r7, #15]
 8002ef4:	1ad3      	subs	r3, r2, r3
 8002ef6:	75fb      	strb	r3, [r7, #23]
 8002ef8:	2300      	movs	r3, #0
 8002efa:	757b      	strb	r3, [r7, #21]
 8002efc:	7d3b      	ldrb	r3, [r7, #20]
 8002efe:	3301      	adds	r3, #1
 8002f00:	753b      	strb	r3, [r7, #20]
 8002f02:	e799      	b.n	8002e38 <ucg_font_decode_len+0x2a>
 8002f04:	bf00      	nop
 8002f06:	7d7a      	ldrb	r2, [r7, #21]
 8002f08:	7dfb      	ldrb	r3, [r7, #23]
 8002f0a:	4413      	add	r3, r2
 8002f0c:	757b      	strb	r3, [r7, #21]
 8002f0e:	f997 2015 	ldrsb.w	r2, [r7, #21]
 8002f12:	693b      	ldr	r3, [r7, #16]
 8002f14:	721a      	strb	r2, [r3, #8]
 8002f16:	f997 2014 	ldrsb.w	r2, [r7, #20]
 8002f1a:	693b      	ldr	r3, [r7, #16]
 8002f1c:	725a      	strb	r2, [r3, #9]
 8002f1e:	bf00      	nop
 8002f20:	371c      	adds	r7, #28
 8002f22:	46bd      	mov	sp, r7
 8002f24:	bd90      	pop	{r4, r7, pc}

08002f26 <ucg_font_setup_decode>:
 8002f26:	b580      	push	{r7, lr}
 8002f28:	b084      	sub	sp, #16
 8002f2a:	af00      	add	r7, sp, #0
 8002f2c:	6078      	str	r0, [r7, #4]
 8002f2e:	6039      	str	r1, [r7, #0]
 8002f30:	687b      	ldr	r3, [r7, #4]
 8002f32:	3380      	adds	r3, #128	; 0x80
 8002f34:	60fb      	str	r3, [r7, #12]
 8002f36:	68fb      	ldr	r3, [r7, #12]
 8002f38:	683a      	ldr	r2, [r7, #0]
 8002f3a:	601a      	str	r2, [r3, #0]
 8002f3c:	68fb      	ldr	r3, [r7, #12]
 8002f3e:	2200      	movs	r2, #0
 8002f40:	731a      	strb	r2, [r3, #12]
 8002f42:	68fb      	ldr	r3, [r7, #12]
 8002f44:	681b      	ldr	r3, [r3, #0]
 8002f46:	1c5a      	adds	r2, r3, #1
 8002f48:	68fb      	ldr	r3, [r7, #12]
 8002f4a:	601a      	str	r2, [r3, #0]
 8002f4c:	68fb      	ldr	r3, [r7, #12]
 8002f4e:	681b      	ldr	r3, [r3, #0]
 8002f50:	1c5a      	adds	r2, r3, #1
 8002f52:	68fb      	ldr	r3, [r7, #12]
 8002f54:	601a      	str	r2, [r3, #0]
 8002f56:	687b      	ldr	r3, [r7, #4]
 8002f58:	f893 3094 	ldrb.w	r3, [r3, #148]	; 0x94
 8002f5c:	4619      	mov	r1, r3
 8002f5e:	68f8      	ldr	r0, [r7, #12]
 8002f60:	f7ff fe6d 	bl	8002c3e <ucg_font_decode_get_unsigned_bits>
 8002f64:	4603      	mov	r3, r0
 8002f66:	b25a      	sxtb	r2, r3
 8002f68:	68fb      	ldr	r3, [r7, #12]
 8002f6a:	729a      	strb	r2, [r3, #10]
 8002f6c:	687b      	ldr	r3, [r7, #4]
 8002f6e:	f893 3095 	ldrb.w	r3, [r3, #149]	; 0x95
 8002f72:	4619      	mov	r1, r3
 8002f74:	68f8      	ldr	r0, [r7, #12]
 8002f76:	f7ff fe62 	bl	8002c3e <ucg_font_decode_get_unsigned_bits>
 8002f7a:	4603      	mov	r3, r0
 8002f7c:	b25a      	sxtb	r2, r3
 8002f7e:	68fb      	ldr	r3, [r7, #12]
 8002f80:	72da      	strb	r2, [r3, #11]
 8002f82:	bf00      	nop
 8002f84:	3710      	adds	r7, #16
 8002f86:	46bd      	mov	sp, r7
 8002f88:	bd80      	pop	{r7, pc}

08002f8a <ucg_font_decode_glyph>:
 8002f8a:	b580      	push	{r7, lr}
 8002f8c:	b084      	sub	sp, #16
 8002f8e:	af00      	add	r7, sp, #0
 8002f90:	6078      	str	r0, [r7, #4]
 8002f92:	6039      	str	r1, [r7, #0]
 8002f94:	6839      	ldr	r1, [r7, #0]
 8002f96:	6878      	ldr	r0, [r7, #4]
 8002f98:	f7ff ffc5 	bl	8002f26 <ucg_font_setup_decode>
 8002f9c:	687b      	ldr	r3, [r7, #4]
 8002f9e:	f893 308b 	ldrb.w	r3, [r3, #139]	; 0x8b
 8002fa2:	73fb      	strb	r3, [r7, #15]
 8002fa4:	687b      	ldr	r3, [r7, #4]
 8002fa6:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8002faa:	687b      	ldr	r3, [r7, #4]
 8002fac:	f893 3096 	ldrb.w	r3, [r3, #150]	; 0x96
 8002fb0:	4619      	mov	r1, r3
 8002fb2:	4610      	mov	r0, r2
 8002fb4:	f7ff fe8e 	bl	8002cd4 <ucg_font_decode_get_signed_bits>
 8002fb8:	4603      	mov	r3, r0
 8002fba:	73bb      	strb	r3, [r7, #14]
 8002fbc:	687b      	ldr	r3, [r7, #4]
 8002fbe:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8002fc2:	687b      	ldr	r3, [r7, #4]
 8002fc4:	f893 3097 	ldrb.w	r3, [r3, #151]	; 0x97
 8002fc8:	4619      	mov	r1, r3
 8002fca:	4610      	mov	r0, r2
 8002fcc:	f7ff fe82 	bl	8002cd4 <ucg_font_decode_get_signed_bits>
 8002fd0:	4603      	mov	r3, r0
 8002fd2:	737b      	strb	r3, [r7, #13]
 8002fd4:	687b      	ldr	r3, [r7, #4]
 8002fd6:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8002fda:	687b      	ldr	r3, [r7, #4]
 8002fdc:	f893 3098 	ldrb.w	r3, [r3, #152]	; 0x98
 8002fe0:	4619      	mov	r1, r3
 8002fe2:	4610      	mov	r0, r2
 8002fe4:	f7ff fe76 	bl	8002cd4 <ucg_font_decode_get_signed_bits>
 8002fe8:	4603      	mov	r3, r0
 8002fea:	733b      	strb	r3, [r7, #12]
 8002fec:	687b      	ldr	r3, [r7, #4]
 8002fee:	f993 308a 	ldrsb.w	r3, [r3, #138]	; 0x8a
 8002ff2:	2b00      	cmp	r3, #0
 8002ff4:	dd69      	ble.n	80030ca <ucg_font_decode_glyph+0x140>
 8002ff6:	687b      	ldr	r3, [r7, #4]
 8002ff8:	f9b3 0084 	ldrsh.w	r0, [r3, #132]	; 0x84
 8002ffc:	7bfa      	ldrb	r2, [r7, #15]
 8002ffe:	7b7b      	ldrb	r3, [r7, #13]
 8003000:	4413      	add	r3, r2
 8003002:	b2db      	uxtb	r3, r3
 8003004:	425b      	negs	r3, r3
 8003006:	b2db      	uxtb	r3, r3
 8003008:	b25a      	sxtb	r2, r3
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	f893 308e 	ldrb.w	r3, [r3, #142]	; 0x8e
 8003010:	f997 100e 	ldrsb.w	r1, [r7, #14]
 8003014:	f7ff febe 	bl	8002d94 <ucg_add_vector_x>
 8003018:	4603      	mov	r3, r0
 800301a:	461a      	mov	r2, r3
 800301c:	687b      	ldr	r3, [r7, #4]
 800301e:	f8a3 2084 	strh.w	r2, [r3, #132]	; 0x84
 8003022:	687b      	ldr	r3, [r7, #4]
 8003024:	f9b3 0086 	ldrsh.w	r0, [r3, #134]	; 0x86
 8003028:	7bfa      	ldrb	r2, [r7, #15]
 800302a:	7b7b      	ldrb	r3, [r7, #13]
 800302c:	4413      	add	r3, r2
 800302e:	b2db      	uxtb	r3, r3
 8003030:	425b      	negs	r3, r3
 8003032:	b2db      	uxtb	r3, r3
 8003034:	b25a      	sxtb	r2, r3
 8003036:	687b      	ldr	r3, [r7, #4]
 8003038:	f893 308e 	ldrb.w	r3, [r3, #142]	; 0x8e
 800303c:	f997 100e 	ldrsb.w	r1, [r7, #14]
 8003040:	f7ff fe6b 	bl	8002d1a <ucg_add_vector_y>
 8003044:	4603      	mov	r3, r0
 8003046:	461a      	mov	r2, r3
 8003048:	687b      	ldr	r3, [r7, #4]
 800304a:	f8a3 2086 	strh.w	r2, [r3, #134]	; 0x86
 800304e:	687b      	ldr	r3, [r7, #4]
 8003050:	2200      	movs	r2, #0
 8003052:	f883 2088 	strb.w	r2, [r3, #136]	; 0x88
 8003056:	687b      	ldr	r3, [r7, #4]
 8003058:	2200      	movs	r2, #0
 800305a:	f883 2089 	strb.w	r2, [r3, #137]	; 0x89
 800305e:	687b      	ldr	r3, [r7, #4]
 8003060:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8003064:	687b      	ldr	r3, [r7, #4]
 8003066:	f893 3092 	ldrb.w	r3, [r3, #146]	; 0x92
 800306a:	4619      	mov	r1, r3
 800306c:	4610      	mov	r0, r2
 800306e:	f7ff fde6 	bl	8002c3e <ucg_font_decode_get_unsigned_bits>
 8003072:	4603      	mov	r3, r0
 8003074:	72fb      	strb	r3, [r7, #11]
 8003076:	687b      	ldr	r3, [r7, #4]
 8003078:	f103 0280 	add.w	r2, r3, #128	; 0x80
 800307c:	687b      	ldr	r3, [r7, #4]
 800307e:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8003082:	4619      	mov	r1, r3
 8003084:	4610      	mov	r0, r2
 8003086:	f7ff fdda 	bl	8002c3e <ucg_font_decode_get_unsigned_bits>
 800308a:	4603      	mov	r3, r0
 800308c:	72bb      	strb	r3, [r7, #10]
 800308e:	7afb      	ldrb	r3, [r7, #11]
 8003090:	2200      	movs	r2, #0
 8003092:	4619      	mov	r1, r3
 8003094:	6878      	ldr	r0, [r7, #4]
 8003096:	f7ff feba 	bl	8002e0e <ucg_font_decode_len>
 800309a:	7abb      	ldrb	r3, [r7, #10]
 800309c:	2201      	movs	r2, #1
 800309e:	4619      	mov	r1, r3
 80030a0:	6878      	ldr	r0, [r7, #4]
 80030a2:	f7ff feb4 	bl	8002e0e <ucg_font_decode_len>
 80030a6:	687b      	ldr	r3, [r7, #4]
 80030a8:	3380      	adds	r3, #128	; 0x80
 80030aa:	2101      	movs	r1, #1
 80030ac:	4618      	mov	r0, r3
 80030ae:	f7ff fdc6 	bl	8002c3e <ucg_font_decode_get_unsigned_bits>
 80030b2:	4603      	mov	r3, r0
 80030b4:	2b00      	cmp	r3, #0
 80030b6:	d1ea      	bne.n	800308e <ucg_font_decode_glyph+0x104>
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	f993 3089 	ldrsb.w	r3, [r3, #137]	; 0x89
 80030be:	f997 200f 	ldrsb.w	r2, [r7, #15]
 80030c2:	429a      	cmp	r2, r3
 80030c4:	dd00      	ble.n	80030c8 <ucg_font_decode_glyph+0x13e>
 80030c6:	e7ca      	b.n	800305e <ucg_font_decode_glyph+0xd4>
 80030c8:	bf00      	nop
 80030ca:	f997 300c 	ldrsb.w	r3, [r7, #12]
 80030ce:	4618      	mov	r0, r3
 80030d0:	3710      	adds	r7, #16
 80030d2:	46bd      	mov	sp, r7
 80030d4:	bd80      	pop	{r7, pc}

080030d6 <ucg_font_get_glyph_data>:
 80030d6:	b480      	push	{r7}
 80030d8:	b085      	sub	sp, #20
 80030da:	af00      	add	r7, sp, #0
 80030dc:	6078      	str	r0, [r7, #4]
 80030de:	460b      	mov	r3, r1
 80030e0:	70fb      	strb	r3, [r7, #3]
 80030e2:	687b      	ldr	r3, [r7, #4]
 80030e4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80030e6:	60fb      	str	r3, [r7, #12]
 80030e8:	68fb      	ldr	r3, [r7, #12]
 80030ea:	3315      	adds	r3, #21
 80030ec:	60fb      	str	r3, [r7, #12]
 80030ee:	78fb      	ldrb	r3, [r7, #3]
 80030f0:	2b60      	cmp	r3, #96	; 0x60
 80030f2:	d907      	bls.n	8003104 <ucg_font_get_glyph_data+0x2e>
 80030f4:	687b      	ldr	r3, [r7, #4]
 80030f6:	f8b3 30a4 	ldrh.w	r3, [r3, #164]	; 0xa4
 80030fa:	461a      	mov	r2, r3
 80030fc:	68fb      	ldr	r3, [r7, #12]
 80030fe:	4413      	add	r3, r2
 8003100:	60fb      	str	r3, [r7, #12]
 8003102:	e009      	b.n	8003118 <ucg_font_get_glyph_data+0x42>
 8003104:	78fb      	ldrb	r3, [r7, #3]
 8003106:	2b40      	cmp	r3, #64	; 0x40
 8003108:	d906      	bls.n	8003118 <ucg_font_get_glyph_data+0x42>
 800310a:	687b      	ldr	r3, [r7, #4]
 800310c:	f8b3 30a2 	ldrh.w	r3, [r3, #162]	; 0xa2
 8003110:	461a      	mov	r2, r3
 8003112:	68fb      	ldr	r3, [r7, #12]
 8003114:	4413      	add	r3, r2
 8003116:	60fb      	str	r3, [r7, #12]
 8003118:	68fb      	ldr	r3, [r7, #12]
 800311a:	3301      	adds	r3, #1
 800311c:	781b      	ldrb	r3, [r3, #0]
 800311e:	2b00      	cmp	r3, #0
 8003120:	d00e      	beq.n	8003140 <ucg_font_get_glyph_data+0x6a>
 8003122:	68fb      	ldr	r3, [r7, #12]
 8003124:	781b      	ldrb	r3, [r3, #0]
 8003126:	78fa      	ldrb	r2, [r7, #3]
 8003128:	429a      	cmp	r2, r3
 800312a:	d101      	bne.n	8003130 <ucg_font_get_glyph_data+0x5a>
 800312c:	68fb      	ldr	r3, [r7, #12]
 800312e:	e009      	b.n	8003144 <ucg_font_get_glyph_data+0x6e>
 8003130:	68fb      	ldr	r3, [r7, #12]
 8003132:	3301      	adds	r3, #1
 8003134:	781b      	ldrb	r3, [r3, #0]
 8003136:	461a      	mov	r2, r3
 8003138:	68fb      	ldr	r3, [r7, #12]
 800313a:	4413      	add	r3, r2
 800313c:	60fb      	str	r3, [r7, #12]
 800313e:	e7eb      	b.n	8003118 <ucg_font_get_glyph_data+0x42>
 8003140:	bf00      	nop
 8003142:	2300      	movs	r3, #0
 8003144:	4618      	mov	r0, r3
 8003146:	3714      	adds	r7, #20
 8003148:	46bd      	mov	sp, r7
 800314a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800314e:	4770      	bx	lr

08003150 <ucg_font_draw_glyph>:
 8003150:	b580      	push	{r7, lr}
 8003152:	b086      	sub	sp, #24
 8003154:	af00      	add	r7, sp, #0
 8003156:	60f8      	str	r0, [r7, #12]
 8003158:	4608      	mov	r0, r1
 800315a:	4611      	mov	r1, r2
 800315c:	461a      	mov	r2, r3
 800315e:	4603      	mov	r3, r0
 8003160:	817b      	strh	r3, [r7, #10]
 8003162:	460b      	mov	r3, r1
 8003164:	813b      	strh	r3, [r7, #8]
 8003166:	4613      	mov	r3, r2
 8003168:	71fb      	strb	r3, [r7, #7]
 800316a:	2300      	movs	r3, #0
 800316c:	82fb      	strh	r3, [r7, #22]
 800316e:	68fb      	ldr	r3, [r7, #12]
 8003170:	897a      	ldrh	r2, [r7, #10]
 8003172:	f8a3 2084 	strh.w	r2, [r3, #132]	; 0x84
 8003176:	68fb      	ldr	r3, [r7, #12]
 8003178:	893a      	ldrh	r2, [r7, #8]
 800317a:	f8a3 2086 	strh.w	r2, [r3, #134]	; 0x86
 800317e:	68fb      	ldr	r3, [r7, #12]
 8003180:	79fa      	ldrb	r2, [r7, #7]
 8003182:	f883 208e 	strb.w	r2, [r3, #142]	; 0x8e
 8003186:	f897 3020 	ldrb.w	r3, [r7, #32]
 800318a:	4619      	mov	r1, r3
 800318c:	68f8      	ldr	r0, [r7, #12]
 800318e:	f7ff ffa2 	bl	80030d6 <ucg_font_get_glyph_data>
 8003192:	6138      	str	r0, [r7, #16]
 8003194:	693b      	ldr	r3, [r7, #16]
 8003196:	2b00      	cmp	r3, #0
 8003198:	d005      	beq.n	80031a6 <ucg_font_draw_glyph+0x56>
 800319a:	6939      	ldr	r1, [r7, #16]
 800319c:	68f8      	ldr	r0, [r7, #12]
 800319e:	f7ff fef4 	bl	8002f8a <ucg_font_decode_glyph>
 80031a2:	4603      	mov	r3, r0
 80031a4:	82fb      	strh	r3, [r7, #22]
 80031a6:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 80031aa:	4618      	mov	r0, r3
 80031ac:	3718      	adds	r7, #24
 80031ae:	46bd      	mov	sp, r7
 80031b0:	bd80      	pop	{r7, pc}

080031b2 <ucg_SetFontMode>:
 80031b2:	b480      	push	{r7}
 80031b4:	b083      	sub	sp, #12
 80031b6:	af00      	add	r7, sp, #0
 80031b8:	6078      	str	r0, [r7, #4]
 80031ba:	460b      	mov	r3, r1
 80031bc:	70fb      	strb	r3, [r7, #3]
 80031be:	687b      	ldr	r3, [r7, #4]
 80031c0:	78fa      	ldrb	r2, [r7, #3]
 80031c2:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
 80031c6:	bf00      	nop
 80031c8:	370c      	adds	r7, #12
 80031ca:	46bd      	mov	sp, r7
 80031cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031d0:	4770      	bx	lr
	...

080031d4 <ucg_DrawGlyph>:
 80031d4:	b580      	push	{r7, lr}
 80031d6:	b086      	sub	sp, #24
 80031d8:	af02      	add	r7, sp, #8
 80031da:	60f8      	str	r0, [r7, #12]
 80031dc:	4608      	mov	r0, r1
 80031de:	4611      	mov	r1, r2
 80031e0:	461a      	mov	r2, r3
 80031e2:	4603      	mov	r3, r0
 80031e4:	817b      	strh	r3, [r7, #10]
 80031e6:	460b      	mov	r3, r1
 80031e8:	813b      	strh	r3, [r7, #8]
 80031ea:	4613      	mov	r3, r2
 80031ec:	71fb      	strb	r3, [r7, #7]
 80031ee:	79fb      	ldrb	r3, [r7, #7]
 80031f0:	2b03      	cmp	r3, #3
 80031f2:	d837      	bhi.n	8003264 <ucg_DrawGlyph+0x90>
 80031f4:	a201      	add	r2, pc, #4	; (adr r2, 80031fc <ucg_DrawGlyph+0x28>)
 80031f6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80031fa:	bf00      	nop
 80031fc:	0800320d 	.word	0x0800320d
 8003200:	08003223 	.word	0x08003223
 8003204:	08003239 	.word	0x08003239
 8003208:	0800324f 	.word	0x0800324f
 800320c:	68fb      	ldr	r3, [r7, #12]
 800320e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8003210:	68f8      	ldr	r0, [r7, #12]
 8003212:	4798      	blx	r3
 8003214:	4603      	mov	r3, r0
 8003216:	b29a      	uxth	r2, r3
 8003218:	893b      	ldrh	r3, [r7, #8]
 800321a:	4413      	add	r3, r2
 800321c:	b29b      	uxth	r3, r3
 800321e:	813b      	strh	r3, [r7, #8]
 8003220:	e020      	b.n	8003264 <ucg_DrawGlyph+0x90>
 8003222:	68fb      	ldr	r3, [r7, #12]
 8003224:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8003226:	68f8      	ldr	r0, [r7, #12]
 8003228:	4798      	blx	r3
 800322a:	4603      	mov	r3, r0
 800322c:	897a      	ldrh	r2, [r7, #10]
 800322e:	b29b      	uxth	r3, r3
 8003230:	1ad3      	subs	r3, r2, r3
 8003232:	b29b      	uxth	r3, r3
 8003234:	817b      	strh	r3, [r7, #10]
 8003236:	e015      	b.n	8003264 <ucg_DrawGlyph+0x90>
 8003238:	68fb      	ldr	r3, [r7, #12]
 800323a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800323c:	68f8      	ldr	r0, [r7, #12]
 800323e:	4798      	blx	r3
 8003240:	4603      	mov	r3, r0
 8003242:	893a      	ldrh	r2, [r7, #8]
 8003244:	b29b      	uxth	r3, r3
 8003246:	1ad3      	subs	r3, r2, r3
 8003248:	b29b      	uxth	r3, r3
 800324a:	813b      	strh	r3, [r7, #8]
 800324c:	e00a      	b.n	8003264 <ucg_DrawGlyph+0x90>
 800324e:	68fb      	ldr	r3, [r7, #12]
 8003250:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8003252:	68f8      	ldr	r0, [r7, #12]
 8003254:	4798      	blx	r3
 8003256:	4603      	mov	r3, r0
 8003258:	b29a      	uxth	r2, r3
 800325a:	897b      	ldrh	r3, [r7, #10]
 800325c:	4413      	add	r3, r2
 800325e:	b29b      	uxth	r3, r3
 8003260:	817b      	strh	r3, [r7, #10]
 8003262:	bf00      	nop
 8003264:	79f8      	ldrb	r0, [r7, #7]
 8003266:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800326a:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800326e:	7e3b      	ldrb	r3, [r7, #24]
 8003270:	9300      	str	r3, [sp, #0]
 8003272:	4603      	mov	r3, r0
 8003274:	68f8      	ldr	r0, [r7, #12]
 8003276:	f7ff ff6b 	bl	8003150 <ucg_font_draw_glyph>
 800327a:	4603      	mov	r3, r0
 800327c:	4618      	mov	r0, r3
 800327e:	3710      	adds	r7, #16
 8003280:	46bd      	mov	sp, r7
 8003282:	bd80      	pop	{r7, pc}

08003284 <task_drawString>:
 8003284:	b580      	push	{r7, lr}
 8003286:	b086      	sub	sp, #24
 8003288:	af02      	add	r7, sp, #8
 800328a:	6078      	str	r0, [r7, #4]
 800328c:	2300      	movs	r3, #0
 800328e:	81fb      	strh	r3, [r7, #14]
 8003290:	687b      	ldr	r3, [r7, #4]
 8003292:	60bb      	str	r3, [r7, #8]
 8003294:	4b45      	ldr	r3, [pc, #276]	; (80033ac <task_drawString+0x128>)
 8003296:	781b      	ldrb	r3, [r3, #0]
 8003298:	2b00      	cmp	r3, #0
 800329a:	d002      	beq.n	80032a2 <task_drawString+0x1e>
 800329c:	2b01      	cmp	r3, #1
 800329e:	d01e      	beq.n	80032de <task_drawString+0x5a>
 80032a0:	e07b      	b.n	800339a <task_drawString+0x116>
 80032a2:	4843      	ldr	r0, [pc, #268]	; (80033b0 <task_drawString+0x12c>)
 80032a4:	f7fd f807 	bl	80002b6 <bufNumItems>
 80032a8:	4603      	mov	r3, r0
 80032aa:	2b00      	cmp	r3, #0
 80032ac:	d007      	beq.n	80032be <task_drawString+0x3a>
 80032ae:	4941      	ldr	r1, [pc, #260]	; (80033b4 <task_drawString+0x130>)
 80032b0:	483f      	ldr	r0, [pc, #252]	; (80033b0 <task_drawString+0x12c>)
 80032b2:	f7fd f89b 	bl	80003ec <bufDeDat>
 80032b6:	4b3d      	ldr	r3, [pc, #244]	; (80033ac <task_drawString+0x128>)
 80032b8:	2201      	movs	r2, #1
 80032ba:	701a      	strb	r2, [r3, #0]
 80032bc:	e071      	b.n	80033a2 <task_drawString+0x11e>
 80032be:	4b3e      	ldr	r3, [pc, #248]	; (80033b8 <task_drawString+0x134>)
 80032c0:	781b      	ldrb	r3, [r3, #0]
 80032c2:	2bff      	cmp	r3, #255	; 0xff
 80032c4:	d007      	beq.n	80032d6 <task_drawString+0x52>
 80032c6:	4b3c      	ldr	r3, [pc, #240]	; (80033b8 <task_drawString+0x134>)
 80032c8:	781b      	ldrb	r3, [r3, #0]
 80032ca:	4618      	mov	r0, r3
 80032cc:	f7fe fcb0 	bl	8001c30 <TimerStop>
 80032d0:	4b39      	ldr	r3, [pc, #228]	; (80033b8 <task_drawString+0x134>)
 80032d2:	22ff      	movs	r2, #255	; 0xff
 80032d4:	701a      	strb	r2, [r3, #0]
 80032d6:	4b35      	ldr	r3, [pc, #212]	; (80033ac <task_drawString+0x128>)
 80032d8:	2200      	movs	r2, #0
 80032da:	701a      	strb	r2, [r3, #0]
 80032dc:	e061      	b.n	80033a2 <task_drawString+0x11e>
 80032de:	4b35      	ldr	r3, [pc, #212]	; (80033b4 <task_drawString+0x130>)
 80032e0:	689b      	ldr	r3, [r3, #8]
 80032e2:	781b      	ldrb	r3, [r3, #0]
 80032e4:	2b00      	cmp	r3, #0
 80032e6:	d054      	beq.n	8003392 <task_drawString+0x10e>
 80032e8:	4b32      	ldr	r3, [pc, #200]	; (80033b4 <task_drawString+0x130>)
 80032ea:	f9b3 1000 	ldrsh.w	r1, [r3]
 80032ee:	4b31      	ldr	r3, [pc, #196]	; (80033b4 <task_drawString+0x130>)
 80032f0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80032f4:	4b2f      	ldr	r3, [pc, #188]	; (80033b4 <task_drawString+0x130>)
 80032f6:	7918      	ldrb	r0, [r3, #4]
 80032f8:	4b2e      	ldr	r3, [pc, #184]	; (80033b4 <task_drawString+0x130>)
 80032fa:	689b      	ldr	r3, [r3, #8]
 80032fc:	781b      	ldrb	r3, [r3, #0]
 80032fe:	9300      	str	r3, [sp, #0]
 8003300:	4603      	mov	r3, r0
 8003302:	68b8      	ldr	r0, [r7, #8]
 8003304:	f7ff ff66 	bl	80031d4 <ucg_DrawGlyph>
 8003308:	4603      	mov	r3, r0
 800330a:	81fb      	strh	r3, [r7, #14]
 800330c:	4b29      	ldr	r3, [pc, #164]	; (80033b4 <task_drawString+0x130>)
 800330e:	791b      	ldrb	r3, [r3, #4]
 8003310:	2b03      	cmp	r3, #3
 8003312:	d837      	bhi.n	8003384 <task_drawString+0x100>
 8003314:	a201      	add	r2, pc, #4	; (adr r2, 800331c <task_drawString+0x98>)
 8003316:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800331a:	bf00      	nop
 800331c:	0800332d 	.word	0x0800332d
 8003320:	08003343 	.word	0x08003343
 8003324:	08003359 	.word	0x08003359
 8003328:	0800336f 	.word	0x0800336f
 800332c:	4b21      	ldr	r3, [pc, #132]	; (80033b4 <task_drawString+0x130>)
 800332e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003332:	b29a      	uxth	r2, r3
 8003334:	89fb      	ldrh	r3, [r7, #14]
 8003336:	4413      	add	r3, r2
 8003338:	b29b      	uxth	r3, r3
 800333a:	b21a      	sxth	r2, r3
 800333c:	4b1d      	ldr	r3, [pc, #116]	; (80033b4 <task_drawString+0x130>)
 800333e:	801a      	strh	r2, [r3, #0]
 8003340:	e021      	b.n	8003386 <task_drawString+0x102>
 8003342:	4b1c      	ldr	r3, [pc, #112]	; (80033b4 <task_drawString+0x130>)
 8003344:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8003348:	b29a      	uxth	r2, r3
 800334a:	89fb      	ldrh	r3, [r7, #14]
 800334c:	4413      	add	r3, r2
 800334e:	b29b      	uxth	r3, r3
 8003350:	b21a      	sxth	r2, r3
 8003352:	4b18      	ldr	r3, [pc, #96]	; (80033b4 <task_drawString+0x130>)
 8003354:	805a      	strh	r2, [r3, #2]
 8003356:	e016      	b.n	8003386 <task_drawString+0x102>
 8003358:	4b16      	ldr	r3, [pc, #88]	; (80033b4 <task_drawString+0x130>)
 800335a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800335e:	b29a      	uxth	r2, r3
 8003360:	89fb      	ldrh	r3, [r7, #14]
 8003362:	1ad3      	subs	r3, r2, r3
 8003364:	b29b      	uxth	r3, r3
 8003366:	b21a      	sxth	r2, r3
 8003368:	4b12      	ldr	r3, [pc, #72]	; (80033b4 <task_drawString+0x130>)
 800336a:	801a      	strh	r2, [r3, #0]
 800336c:	e00b      	b.n	8003386 <task_drawString+0x102>
 800336e:	4b11      	ldr	r3, [pc, #68]	; (80033b4 <task_drawString+0x130>)
 8003370:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8003374:	b29a      	uxth	r2, r3
 8003376:	89fb      	ldrh	r3, [r7, #14]
 8003378:	1ad3      	subs	r3, r2, r3
 800337a:	b29b      	uxth	r3, r3
 800337c:	b21a      	sxth	r2, r3
 800337e:	4b0d      	ldr	r3, [pc, #52]	; (80033b4 <task_drawString+0x130>)
 8003380:	805a      	strh	r2, [r3, #2]
 8003382:	e000      	b.n	8003386 <task_drawString+0x102>
 8003384:	bf00      	nop
 8003386:	4b0b      	ldr	r3, [pc, #44]	; (80033b4 <task_drawString+0x130>)
 8003388:	689b      	ldr	r3, [r3, #8]
 800338a:	3301      	adds	r3, #1
 800338c:	4a09      	ldr	r2, [pc, #36]	; (80033b4 <task_drawString+0x130>)
 800338e:	6093      	str	r3, [r2, #8]
 8003390:	e007      	b.n	80033a2 <task_drawString+0x11e>
 8003392:	4b06      	ldr	r3, [pc, #24]	; (80033ac <task_drawString+0x128>)
 8003394:	2200      	movs	r2, #0
 8003396:	701a      	strb	r2, [r3, #0]
 8003398:	e003      	b.n	80033a2 <task_drawString+0x11e>
 800339a:	4b04      	ldr	r3, [pc, #16]	; (80033ac <task_drawString+0x128>)
 800339c:	2200      	movs	r2, #0
 800339e:	701a      	strb	r2, [r3, #0]
 80033a0:	bf00      	nop
 80033a2:	bf00      	nop
 80033a4:	3710      	adds	r7, #16
 80033a6:	46bd      	mov	sp, r7
 80033a8:	bd80      	pop	{r7, pc}
 80033aa:	bf00      	nop
 80033ac:	2000134c 	.word	0x2000134c
 80033b0:	2000033c 	.word	0x2000033c
 80033b4:	20001498 	.word	0x20001498
 80033b8:	20000024 	.word	0x20000024

080033bc <ucg_DrawString>:
 80033bc:	b580      	push	{r7, lr}
 80033be:	b08a      	sub	sp, #40	; 0x28
 80033c0:	af02      	add	r7, sp, #8
 80033c2:	60f8      	str	r0, [r7, #12]
 80033c4:	4608      	mov	r0, r1
 80033c6:	4611      	mov	r1, r2
 80033c8:	461a      	mov	r2, r3
 80033ca:	4603      	mov	r3, r0
 80033cc:	817b      	strh	r3, [r7, #10]
 80033ce:	460b      	mov	r3, r1
 80033d0:	813b      	strh	r3, [r7, #8]
 80033d2:	4613      	mov	r3, r2
 80033d4:	71fb      	strb	r3, [r7, #7]
 80033d6:	2300      	movs	r3, #0
 80033d8:	83fb      	strh	r3, [r7, #30]
 80033da:	897b      	ldrh	r3, [r7, #10]
 80033dc:	823b      	strh	r3, [r7, #16]
 80033de:	893b      	ldrh	r3, [r7, #8]
 80033e0:	827b      	strh	r3, [r7, #18]
 80033e2:	79fb      	ldrb	r3, [r7, #7]
 80033e4:	753b      	strb	r3, [r7, #20]
 80033e6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80033e8:	61bb      	str	r3, [r7, #24]
 80033ea:	f107 0310 	add.w	r3, r7, #16
 80033ee:	4619      	mov	r1, r3
 80033f0:	480c      	ldr	r0, [pc, #48]	; (8003424 <ucg_DrawString+0x68>)
 80033f2:	f7fc ffab 	bl	800034c <bufEnDat>
 80033f6:	4b0c      	ldr	r3, [pc, #48]	; (8003428 <ucg_DrawString+0x6c>)
 80033f8:	781b      	ldrb	r3, [r3, #0]
 80033fa:	2bff      	cmp	r3, #255	; 0xff
 80033fc:	d10b      	bne.n	8003416 <ucg_DrawString+0x5a>
 80033fe:	68fb      	ldr	r3, [r7, #12]
 8003400:	9300      	str	r3, [sp, #0]
 8003402:	4b0a      	ldr	r3, [pc, #40]	; (800342c <ucg_DrawString+0x70>)
 8003404:	22ff      	movs	r2, #255	; 0xff
 8003406:	211e      	movs	r1, #30
 8003408:	4809      	ldr	r0, [pc, #36]	; (8003430 <ucg_DrawString+0x74>)
 800340a:	f7fe fbaf 	bl	8001b6c <TimerStart>
 800340e:	4603      	mov	r3, r0
 8003410:	461a      	mov	r2, r3
 8003412:	4b05      	ldr	r3, [pc, #20]	; (8003428 <ucg_DrawString+0x6c>)
 8003414:	701a      	strb	r2, [r3, #0]
 8003416:	f9b7 301e 	ldrsh.w	r3, [r7, #30]
 800341a:	4618      	mov	r0, r3
 800341c:	3720      	adds	r7, #32
 800341e:	46bd      	mov	sp, r7
 8003420:	bd80      	pop	{r7, pc}
 8003422:	bf00      	nop
 8003424:	2000033c 	.word	0x2000033c
 8003428:	20000024 	.word	0x20000024
 800342c:	08003285 	.word	0x08003285
 8003430:	08004de8 	.word	0x08004de8

08003434 <ucg_UpdateRefHeight>:
 8003434:	b480      	push	{r7}
 8003436:	b083      	sub	sp, #12
 8003438:	af00      	add	r7, sp, #0
 800343a:	6078      	str	r0, [r7, #4]
 800343c:	687b      	ldr	r3, [r7, #4]
 800343e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8003440:	2b00      	cmp	r3, #0
 8003442:	d05d      	beq.n	8003500 <ucg_UpdateRefHeight+0xcc>
 8003444:	687b      	ldr	r3, [r7, #4]
 8003446:	f993 209d 	ldrsb.w	r2, [r3, #157]	; 0x9d
 800344a:	687b      	ldr	r3, [r7, #4]
 800344c:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 8003450:	687b      	ldr	r3, [r7, #4]
 8003452:	f993 209e 	ldrsb.w	r2, [r3, #158]	; 0x9e
 8003456:	687b      	ldr	r3, [r7, #4]
 8003458:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 800345c:	687b      	ldr	r3, [r7, #4]
 800345e:	f893 30ab 	ldrb.w	r3, [r3, #171]	; 0xab
 8003462:	2b00      	cmp	r3, #0
 8003464:	d04d      	beq.n	8003502 <ucg_UpdateRefHeight+0xce>
 8003466:	687b      	ldr	r3, [r7, #4]
 8003468:	f893 30ab 	ldrb.w	r3, [r3, #171]	; 0xab
 800346c:	2b01      	cmp	r3, #1
 800346e:	d11c      	bne.n	80034aa <ucg_UpdateRefHeight+0x76>
 8003470:	687b      	ldr	r3, [r7, #4]
 8003472:	f993 20ac 	ldrsb.w	r2, [r3, #172]	; 0xac
 8003476:	687b      	ldr	r3, [r7, #4]
 8003478:	f993 309f 	ldrsb.w	r3, [r3, #159]	; 0x9f
 800347c:	429a      	cmp	r2, r3
 800347e:	da05      	bge.n	800348c <ucg_UpdateRefHeight+0x58>
 8003480:	687b      	ldr	r3, [r7, #4]
 8003482:	f993 209f 	ldrsb.w	r2, [r3, #159]	; 0x9f
 8003486:	687b      	ldr	r3, [r7, #4]
 8003488:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 800348c:	687b      	ldr	r3, [r7, #4]
 800348e:	f993 20ad 	ldrsb.w	r2, [r3, #173]	; 0xad
 8003492:	687b      	ldr	r3, [r7, #4]
 8003494:	f993 30a0 	ldrsb.w	r3, [r3, #160]	; 0xa0
 8003498:	429a      	cmp	r2, r3
 800349a:	dd32      	ble.n	8003502 <ucg_UpdateRefHeight+0xce>
 800349c:	687b      	ldr	r3, [r7, #4]
 800349e:	f993 20a0 	ldrsb.w	r2, [r3, #160]	; 0xa0
 80034a2:	687b      	ldr	r3, [r7, #4]
 80034a4:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 80034a8:	e02b      	b.n	8003502 <ucg_UpdateRefHeight+0xce>
 80034aa:	687b      	ldr	r3, [r7, #4]
 80034ac:	f993 30ac 	ldrsb.w	r3, [r3, #172]	; 0xac
 80034b0:	461a      	mov	r2, r3
 80034b2:	687b      	ldr	r3, [r7, #4]
 80034b4:	f993 309a 	ldrsb.w	r3, [r3, #154]	; 0x9a
 80034b8:	4619      	mov	r1, r3
 80034ba:	687b      	ldr	r3, [r7, #4]
 80034bc:	f993 309c 	ldrsb.w	r3, [r3, #156]	; 0x9c
 80034c0:	440b      	add	r3, r1
 80034c2:	429a      	cmp	r2, r3
 80034c4:	da0d      	bge.n	80034e2 <ucg_UpdateRefHeight+0xae>
 80034c6:	687b      	ldr	r3, [r7, #4]
 80034c8:	f993 309a 	ldrsb.w	r3, [r3, #154]	; 0x9a
 80034cc:	b2da      	uxtb	r2, r3
 80034ce:	687b      	ldr	r3, [r7, #4]
 80034d0:	f993 309c 	ldrsb.w	r3, [r3, #156]	; 0x9c
 80034d4:	b2db      	uxtb	r3, r3
 80034d6:	4413      	add	r3, r2
 80034d8:	b2db      	uxtb	r3, r3
 80034da:	b25a      	sxtb	r2, r3
 80034dc:	687b      	ldr	r3, [r7, #4]
 80034de:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 80034e2:	687b      	ldr	r3, [r7, #4]
 80034e4:	f993 20ad 	ldrsb.w	r2, [r3, #173]	; 0xad
 80034e8:	687b      	ldr	r3, [r7, #4]
 80034ea:	f993 309c 	ldrsb.w	r3, [r3, #156]	; 0x9c
 80034ee:	429a      	cmp	r2, r3
 80034f0:	dd07      	ble.n	8003502 <ucg_UpdateRefHeight+0xce>
 80034f2:	687b      	ldr	r3, [r7, #4]
 80034f4:	f993 209c 	ldrsb.w	r2, [r3, #156]	; 0x9c
 80034f8:	687b      	ldr	r3, [r7, #4]
 80034fa:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 80034fe:	e000      	b.n	8003502 <ucg_UpdateRefHeight+0xce>
 8003500:	bf00      	nop
 8003502:	370c      	adds	r7, #12
 8003504:	46bd      	mov	sp, r7
 8003506:	f85d 7b04 	ldr.w	r7, [sp], #4
 800350a:	4770      	bx	lr

0800350c <ucg_font_calc_vref_font>:
 800350c:	b480      	push	{r7}
 800350e:	b083      	sub	sp, #12
 8003510:	af00      	add	r7, sp, #0
 8003512:	6078      	str	r0, [r7, #4]
 8003514:	2300      	movs	r3, #0
 8003516:	4618      	mov	r0, r3
 8003518:	370c      	adds	r7, #12
 800351a:	46bd      	mov	sp, r7
 800351c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003520:	4770      	bx	lr
	...

08003524 <ucg_SetFontPosBaseline>:
 8003524:	b480      	push	{r7}
 8003526:	b083      	sub	sp, #12
 8003528:	af00      	add	r7, sp, #0
 800352a:	6078      	str	r0, [r7, #4]
 800352c:	687b      	ldr	r3, [r7, #4]
 800352e:	4a04      	ldr	r2, [pc, #16]	; (8003540 <ucg_SetFontPosBaseline+0x1c>)
 8003530:	67da      	str	r2, [r3, #124]	; 0x7c
 8003532:	bf00      	nop
 8003534:	370c      	adds	r7, #12
 8003536:	46bd      	mov	sp, r7
 8003538:	f85d 7b04 	ldr.w	r7, [sp], #4
 800353c:	4770      	bx	lr
 800353e:	bf00      	nop
 8003540:	0800350d 	.word	0x0800350d

08003544 <ucg_SetFont>:
 8003544:	b580      	push	{r7, lr}
 8003546:	b082      	sub	sp, #8
 8003548:	af00      	add	r7, sp, #0
 800354a:	6078      	str	r0, [r7, #4]
 800354c:	6039      	str	r1, [r7, #0]
 800354e:	687b      	ldr	r3, [r7, #4]
 8003550:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8003552:	683a      	ldr	r2, [r7, #0]
 8003554:	429a      	cmp	r2, r3
 8003556:	d012      	beq.n	800357e <ucg_SetFont+0x3a>
 8003558:	687b      	ldr	r3, [r7, #4]
 800355a:	683a      	ldr	r2, [r7, #0]
 800355c:	679a      	str	r2, [r3, #120]	; 0x78
 800355e:	687b      	ldr	r3, [r7, #4]
 8003560:	3390      	adds	r3, #144	; 0x90
 8003562:	6839      	ldr	r1, [r7, #0]
 8003564:	4618      	mov	r0, r3
 8003566:	f7ff fac9 	bl	8002afc <ucg_read_font_info>
 800356a:	6878      	ldr	r0, [r7, #4]
 800356c:	f7ff ff62 	bl	8003434 <ucg_UpdateRefHeight>
 8003570:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003574:	220c      	movs	r2, #12
 8003576:	4904      	ldr	r1, [pc, #16]	; (8003588 <ucg_SetFont+0x44>)
 8003578:	4804      	ldr	r0, [pc, #16]	; (800358c <ucg_SetFont+0x48>)
 800357a:	f7fc fe81 	bl	8000280 <bufInit>
 800357e:	bf00      	nop
 8003580:	3708      	adds	r7, #8
 8003582:	46bd      	mov	sp, r7
 8003584:	bd80      	pop	{r7, pc}
 8003586:	bf00      	nop
 8003588:	2000033c 	.word	0x2000033c
 800358c:	2000034c 	.word	0x2000034c

08003590 <ucg_init_struct>:
 8003590:	b480      	push	{r7}
 8003592:	b083      	sub	sp, #12
 8003594:	af00      	add	r7, sp, #0
 8003596:	6078      	str	r0, [r7, #4]
 8003598:	687a      	ldr	r2, [r7, #4]
 800359a:	7813      	ldrb	r3, [r2, #0]
 800359c:	f36f 0300 	bfc	r3, #0, #1
 80035a0:	7013      	strb	r3, [r2, #0]
 80035a2:	687b      	ldr	r3, [r7, #4]
 80035a4:	2200      	movs	r2, #0
 80035a6:	611a      	str	r2, [r3, #16]
 80035a8:	687b      	ldr	r3, [r7, #4]
 80035aa:	2201      	movs	r2, #1
 80035ac:	865a      	strh	r2, [r3, #50]	; 0x32
 80035ae:	687b      	ldr	r3, [r7, #4]
 80035b0:	2200      	movs	r2, #0
 80035b2:	679a      	str	r2, [r3, #120]	; 0x78
 80035b4:	687b      	ldr	r3, [r7, #4]
 80035b6:	2201      	movs	r2, #1
 80035b8:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
 80035bc:	687b      	ldr	r3, [r7, #4]
 80035be:	2200      	movs	r2, #0
 80035c0:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 80035c4:	687b      	ldr	r3, [r7, #4]
 80035c6:	2200      	movs	r2, #0
 80035c8:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 80035cc:	687b      	ldr	r3, [r7, #4]
 80035ce:	2200      	movs	r2, #0
 80035d0:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
 80035d4:	bf00      	nop
 80035d6:	370c      	adds	r7, #12
 80035d8:	46bd      	mov	sp, r7
 80035da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035de:	4770      	bx	lr

080035e0 <ucg_Init>:
 80035e0:	b580      	push	{r7, lr}
 80035e2:	b086      	sub	sp, #24
 80035e4:	af00      	add	r7, sp, #0
 80035e6:	60f8      	str	r0, [r7, #12]
 80035e8:	60b9      	str	r1, [r7, #8]
 80035ea:	607a      	str	r2, [r7, #4]
 80035ec:	603b      	str	r3, [r7, #0]
 80035ee:	68f8      	ldr	r0, [r7, #12]
 80035f0:	f7ff ffce 	bl	8003590 <ucg_init_struct>
 80035f4:	687b      	ldr	r3, [r7, #4]
 80035f6:	2b00      	cmp	r3, #0
 80035f8:	d103      	bne.n	8003602 <ucg_Init+0x22>
 80035fa:	68fb      	ldr	r3, [r7, #12]
 80035fc:	4a0e      	ldr	r2, [pc, #56]	; (8003638 <ucg_Init+0x58>)
 80035fe:	60da      	str	r2, [r3, #12]
 8003600:	e002      	b.n	8003608 <ucg_Init+0x28>
 8003602:	68fb      	ldr	r3, [r7, #12]
 8003604:	687a      	ldr	r2, [r7, #4]
 8003606:	60da      	str	r2, [r3, #12]
 8003608:	68fb      	ldr	r3, [r7, #12]
 800360a:	68ba      	ldr	r2, [r7, #8]
 800360c:	609a      	str	r2, [r3, #8]
 800360e:	68fb      	ldr	r3, [r7, #12]
 8003610:	683a      	ldr	r2, [r7, #0]
 8003612:	61da      	str	r2, [r3, #28]
 8003614:	68f8      	ldr	r0, [r7, #12]
 8003616:	f7ff ff85 	bl	8003524 <ucg_SetFontPosBaseline>
 800361a:	68f8      	ldr	r0, [r7, #12]
 800361c:	f7ff f996 	bl	800294c <ucg_PowerUp>
 8003620:	4603      	mov	r3, r0
 8003622:	82fb      	strh	r3, [r7, #22]
 8003624:	68f8      	ldr	r0, [r7, #12]
 8003626:	f7ff f9d6 	bl	80029d6 <ucg_GetDimension>
 800362a:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 800362e:	4618      	mov	r0, r3
 8003630:	3718      	adds	r7, #24
 8003632:	46bd      	mov	sp, r7
 8003634:	bd80      	pop	{r7, pc}
 8003636:	bf00      	nop
 8003638:	080025b1 	.word	0x080025b1

0800363c <ucg_Draw90Line>:
 800363c:	b580      	push	{r7, lr}
 800363e:	b084      	sub	sp, #16
 8003640:	af00      	add	r7, sp, #0
 8003642:	60f8      	str	r0, [r7, #12]
 8003644:	4608      	mov	r0, r1
 8003646:	4611      	mov	r1, r2
 8003648:	461a      	mov	r2, r3
 800364a:	4603      	mov	r3, r0
 800364c:	817b      	strh	r3, [r7, #10]
 800364e:	460b      	mov	r3, r1
 8003650:	813b      	strh	r3, [r7, #8]
 8003652:	4613      	mov	r3, r2
 8003654:	80fb      	strh	r3, [r7, #6]
 8003656:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 800365a:	68f9      	ldr	r1, [r7, #12]
 800365c:	4613      	mov	r3, r2
 800365e:	005b      	lsls	r3, r3, #1
 8003660:	4413      	add	r3, r2
 8003662:	440b      	add	r3, r1
 8003664:	333a      	adds	r3, #58	; 0x3a
 8003666:	781a      	ldrb	r2, [r3, #0]
 8003668:	68fb      	ldr	r3, [r7, #12]
 800366a:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800366e:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 8003672:	68f9      	ldr	r1, [r7, #12]
 8003674:	4613      	mov	r3, r2
 8003676:	005b      	lsls	r3, r3, #1
 8003678:	4413      	add	r3, r2
 800367a:	440b      	add	r3, r1
 800367c:	333b      	adds	r3, #59	; 0x3b
 800367e:	781a      	ldrb	r2, [r3, #0]
 8003680:	68fb      	ldr	r3, [r7, #12]
 8003682:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 8003686:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 800368a:	68f9      	ldr	r1, [r7, #12]
 800368c:	4613      	mov	r3, r2
 800368e:	005b      	lsls	r3, r3, #1
 8003690:	4413      	add	r3, r2
 8003692:	440b      	add	r3, r1
 8003694:	333c      	adds	r3, #60	; 0x3c
 8003696:	781a      	ldrb	r2, [r3, #0]
 8003698:	68fb      	ldr	r3, [r7, #12]
 800369a:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 800369e:	68fb      	ldr	r3, [r7, #12]
 80036a0:	897a      	ldrh	r2, [r7, #10]
 80036a2:	849a      	strh	r2, [r3, #36]	; 0x24
 80036a4:	68fb      	ldr	r3, [r7, #12]
 80036a6:	893a      	ldrh	r2, [r7, #8]
 80036a8:	84da      	strh	r2, [r3, #38]	; 0x26
 80036aa:	68fb      	ldr	r3, [r7, #12]
 80036ac:	88fa      	ldrh	r2, [r7, #6]
 80036ae:	859a      	strh	r2, [r3, #44]	; 0x2c
 80036b0:	68fb      	ldr	r3, [r7, #12]
 80036b2:	8b3a      	ldrh	r2, [r7, #24]
 80036b4:	85da      	strh	r2, [r3, #46]	; 0x2e
 80036b6:	68f8      	ldr	r0, [r7, #12]
 80036b8:	f7ff f99f 	bl	80029fa <ucg_DrawL90FXWithArg>
 80036bc:	bf00      	nop
 80036be:	3710      	adds	r7, #16
 80036c0:	46bd      	mov	sp, r7
 80036c2:	bd80      	pop	{r7, pc}

080036c4 <ucg_DrawHLine>:
 80036c4:	b580      	push	{r7, lr}
 80036c6:	b086      	sub	sp, #24
 80036c8:	af02      	add	r7, sp, #8
 80036ca:	60f8      	str	r0, [r7, #12]
 80036cc:	4608      	mov	r0, r1
 80036ce:	4611      	mov	r1, r2
 80036d0:	461a      	mov	r2, r3
 80036d2:	4603      	mov	r3, r0
 80036d4:	817b      	strh	r3, [r7, #10]
 80036d6:	460b      	mov	r3, r1
 80036d8:	813b      	strh	r3, [r7, #8]
 80036da:	4613      	mov	r3, r2
 80036dc:	80fb      	strh	r3, [r7, #6]
 80036de:	f9b7 0006 	ldrsh.w	r0, [r7, #6]
 80036e2:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 80036e6:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 80036ea:	2300      	movs	r3, #0
 80036ec:	9301      	str	r3, [sp, #4]
 80036ee:	2300      	movs	r3, #0
 80036f0:	9300      	str	r3, [sp, #0]
 80036f2:	4603      	mov	r3, r0
 80036f4:	68f8      	ldr	r0, [r7, #12]
 80036f6:	f7ff ffa1 	bl	800363c <ucg_Draw90Line>
 80036fa:	bf00      	nop
 80036fc:	3710      	adds	r7, #16
 80036fe:	46bd      	mov	sp, r7
 8003700:	bd80      	pop	{r7, pc}

08003702 <ucg_SetColor>:
 8003702:	b480      	push	{r7}
 8003704:	b083      	sub	sp, #12
 8003706:	af00      	add	r7, sp, #0
 8003708:	6078      	str	r0, [r7, #4]
 800370a:	4608      	mov	r0, r1
 800370c:	4611      	mov	r1, r2
 800370e:	461a      	mov	r2, r3
 8003710:	4603      	mov	r3, r0
 8003712:	70fb      	strb	r3, [r7, #3]
 8003714:	460b      	mov	r3, r1
 8003716:	70bb      	strb	r3, [r7, #2]
 8003718:	4613      	mov	r3, r2
 800371a:	707b      	strb	r3, [r7, #1]
 800371c:	78fa      	ldrb	r2, [r7, #3]
 800371e:	6879      	ldr	r1, [r7, #4]
 8003720:	4613      	mov	r3, r2
 8003722:	005b      	lsls	r3, r3, #1
 8003724:	4413      	add	r3, r2
 8003726:	440b      	add	r3, r1
 8003728:	333a      	adds	r3, #58	; 0x3a
 800372a:	78ba      	ldrb	r2, [r7, #2]
 800372c:	701a      	strb	r2, [r3, #0]
 800372e:	78fa      	ldrb	r2, [r7, #3]
 8003730:	6879      	ldr	r1, [r7, #4]
 8003732:	4613      	mov	r3, r2
 8003734:	005b      	lsls	r3, r3, #1
 8003736:	4413      	add	r3, r2
 8003738:	440b      	add	r3, r1
 800373a:	333b      	adds	r3, #59	; 0x3b
 800373c:	787a      	ldrb	r2, [r7, #1]
 800373e:	701a      	strb	r2, [r3, #0]
 8003740:	78fa      	ldrb	r2, [r7, #3]
 8003742:	6879      	ldr	r1, [r7, #4]
 8003744:	4613      	mov	r3, r2
 8003746:	005b      	lsls	r3, r3, #1
 8003748:	4413      	add	r3, r2
 800374a:	440b      	add	r3, r1
 800374c:	333c      	adds	r3, #60	; 0x3c
 800374e:	7c3a      	ldrb	r2, [r7, #16]
 8003750:	701a      	strb	r2, [r3, #0]
 8003752:	bf00      	nop
 8003754:	370c      	adds	r7, #12
 8003756:	46bd      	mov	sp, r7
 8003758:	f85d 7b04 	ldr.w	r7, [sp], #4
 800375c:	4770      	bx	lr

0800375e <ucg_UndoRotate>:
 800375e:	b580      	push	{r7, lr}
 8003760:	b082      	sub	sp, #8
 8003762:	af00      	add	r7, sp, #0
 8003764:	6078      	str	r0, [r7, #4]
 8003766:	687b      	ldr	r3, [r7, #4]
 8003768:	691b      	ldr	r3, [r3, #16]
 800376a:	2b00      	cmp	r3, #0
 800376c:	d006      	beq.n	800377c <ucg_UndoRotate+0x1e>
 800376e:	687b      	ldr	r3, [r7, #4]
 8003770:	691a      	ldr	r2, [r3, #16]
 8003772:	687b      	ldr	r3, [r7, #4]
 8003774:	609a      	str	r2, [r3, #8]
 8003776:	687b      	ldr	r3, [r7, #4]
 8003778:	2200      	movs	r2, #0
 800377a:	611a      	str	r2, [r3, #16]
 800377c:	6878      	ldr	r0, [r7, #4]
 800377e:	f7ff f92a 	bl	80029d6 <ucg_GetDimension>
 8003782:	6878      	ldr	r0, [r7, #4]
 8003784:	f7ff f90f 	bl	80029a6 <ucg_SetMaxClipRange>
 8003788:	bf00      	nop
 800378a:	3708      	adds	r7, #8
 800378c:	46bd      	mov	sp, r7
 800378e:	bd80      	pop	{r7, pc}

08003790 <ucg_rotate_180_xy>:
 8003790:	b480      	push	{r7}
 8003792:	b085      	sub	sp, #20
 8003794:	af00      	add	r7, sp, #0
 8003796:	6078      	str	r0, [r7, #4]
 8003798:	6039      	str	r1, [r7, #0]
 800379a:	687b      	ldr	r3, [r7, #4]
 800379c:	8adb      	ldrh	r3, [r3, #22]
 800379e:	81fb      	strh	r3, [r7, #14]
 80037a0:	89fa      	ldrh	r2, [r7, #14]
 80037a2:	683b      	ldr	r3, [r7, #0]
 80037a4:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80037a8:	b29b      	uxth	r3, r3
 80037aa:	1ad3      	subs	r3, r2, r3
 80037ac:	b29b      	uxth	r3, r3
 80037ae:	81fb      	strh	r3, [r7, #14]
 80037b0:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80037b4:	b29b      	uxth	r3, r3
 80037b6:	3b01      	subs	r3, #1
 80037b8:	b29b      	uxth	r3, r3
 80037ba:	81fb      	strh	r3, [r7, #14]
 80037bc:	683b      	ldr	r3, [r7, #0]
 80037be:	89fa      	ldrh	r2, [r7, #14]
 80037c0:	805a      	strh	r2, [r3, #2]
 80037c2:	687b      	ldr	r3, [r7, #4]
 80037c4:	8a9b      	ldrh	r3, [r3, #20]
 80037c6:	81bb      	strh	r3, [r7, #12]
 80037c8:	89ba      	ldrh	r2, [r7, #12]
 80037ca:	683b      	ldr	r3, [r7, #0]
 80037cc:	f9b3 3000 	ldrsh.w	r3, [r3]
 80037d0:	b29b      	uxth	r3, r3
 80037d2:	1ad3      	subs	r3, r2, r3
 80037d4:	b29b      	uxth	r3, r3
 80037d6:	81bb      	strh	r3, [r7, #12]
 80037d8:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80037dc:	b29b      	uxth	r3, r3
 80037de:	3b01      	subs	r3, #1
 80037e0:	b29b      	uxth	r3, r3
 80037e2:	81bb      	strh	r3, [r7, #12]
 80037e4:	683b      	ldr	r3, [r7, #0]
 80037e6:	89ba      	ldrh	r2, [r7, #12]
 80037e8:	801a      	strh	r2, [r3, #0]
 80037ea:	bf00      	nop
 80037ec:	3714      	adds	r7, #20
 80037ee:	46bd      	mov	sp, r7
 80037f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037f4:	4770      	bx	lr
	...

080037f8 <ucg_dev_rotate180>:
 80037f8:	b580      	push	{r7, lr}
 80037fa:	b084      	sub	sp, #16
 80037fc:	af00      	add	r7, sp, #0
 80037fe:	60f8      	str	r0, [r7, #12]
 8003800:	460b      	mov	r3, r1
 8003802:	607a      	str	r2, [r7, #4]
 8003804:	817b      	strh	r3, [r7, #10]
 8003806:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800380a:	3b0c      	subs	r3, #12
 800380c:	2b0b      	cmp	r3, #11
 800380e:	d866      	bhi.n	80038de <ucg_dev_rotate180+0xe6>
 8003810:	a201      	add	r2, pc, #4	; (adr r2, 8003818 <ucg_dev_rotate180+0x20>)
 8003812:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003816:	bf00      	nop
 8003818:	08003867 	.word	0x08003867
 800381c:	080038df 	.word	0x080038df
 8003820:	080038df 	.word	0x080038df
 8003824:	08003849 	.word	0x08003849
 8003828:	080038df 	.word	0x080038df
 800382c:	080038df 	.word	0x080038df
 8003830:	080038df 	.word	0x080038df
 8003834:	080038df 	.word	0x080038df
 8003838:	080038af 	.word	0x080038af
 800383c:	080038af 	.word	0x080038af
 8003840:	080038df 	.word	0x080038df
 8003844:	080038af 	.word	0x080038af
 8003848:	68fb      	ldr	r3, [r7, #12]
 800384a:	691b      	ldr	r3, [r3, #16]
 800384c:	68fa      	ldr	r2, [r7, #12]
 800384e:	3214      	adds	r2, #20
 8003850:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8003854:	68f8      	ldr	r0, [r7, #12]
 8003856:	4798      	blx	r3
 8003858:	687a      	ldr	r2, [r7, #4]
 800385a:	68fb      	ldr	r3, [r7, #12]
 800385c:	3314      	adds	r3, #20
 800385e:	6818      	ldr	r0, [r3, #0]
 8003860:	6010      	str	r0, [r2, #0]
 8003862:	2301      	movs	r3, #1
 8003864:	e043      	b.n	80038ee <ucg_dev_rotate180+0xf6>
 8003866:	687b      	ldr	r3, [r7, #4]
 8003868:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800386c:	b29a      	uxth	r2, r3
 800386e:	687b      	ldr	r3, [r7, #4]
 8003870:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8003874:	b29b      	uxth	r3, r3
 8003876:	4413      	add	r3, r2
 8003878:	b29b      	uxth	r3, r3
 800387a:	3b01      	subs	r3, #1
 800387c:	b29b      	uxth	r3, r3
 800387e:	b21a      	sxth	r2, r3
 8003880:	687b      	ldr	r3, [r7, #4]
 8003882:	805a      	strh	r2, [r3, #2]
 8003884:	687b      	ldr	r3, [r7, #4]
 8003886:	f9b3 3000 	ldrsh.w	r3, [r3]
 800388a:	b29a      	uxth	r2, r3
 800388c:	687b      	ldr	r3, [r7, #4]
 800388e:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8003892:	b29b      	uxth	r3, r3
 8003894:	4413      	add	r3, r2
 8003896:	b29b      	uxth	r3, r3
 8003898:	3b01      	subs	r3, #1
 800389a:	b29b      	uxth	r3, r3
 800389c:	b21a      	sxth	r2, r3
 800389e:	687b      	ldr	r3, [r7, #4]
 80038a0:	801a      	strh	r2, [r3, #0]
 80038a2:	687b      	ldr	r3, [r7, #4]
 80038a4:	4619      	mov	r1, r3
 80038a6:	68f8      	ldr	r0, [r7, #12]
 80038a8:	f7ff ff72 	bl	8003790 <ucg_rotate_180_xy>
 80038ac:	e017      	b.n	80038de <ucg_dev_rotate180+0xe6>
 80038ae:	68fb      	ldr	r3, [r7, #12]
 80038b0:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 80038b4:	b29b      	uxth	r3, r3
 80038b6:	3302      	adds	r3, #2
 80038b8:	b29b      	uxth	r3, r3
 80038ba:	b21a      	sxth	r2, r3
 80038bc:	68fb      	ldr	r3, [r7, #12]
 80038be:	85da      	strh	r2, [r3, #46]	; 0x2e
 80038c0:	68fb      	ldr	r3, [r7, #12]
 80038c2:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 80038c6:	f003 0303 	and.w	r3, r3, #3
 80038ca:	b21a      	sxth	r2, r3
 80038cc:	68fb      	ldr	r3, [r7, #12]
 80038ce:	85da      	strh	r2, [r3, #46]	; 0x2e
 80038d0:	68fb      	ldr	r3, [r7, #12]
 80038d2:	3324      	adds	r3, #36	; 0x24
 80038d4:	4619      	mov	r1, r3
 80038d6:	68f8      	ldr	r0, [r7, #12]
 80038d8:	f7ff ff5a 	bl	8003790 <ucg_rotate_180_xy>
 80038dc:	bf00      	nop
 80038de:	68fb      	ldr	r3, [r7, #12]
 80038e0:	691b      	ldr	r3, [r3, #16]
 80038e2:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 80038e6:	687a      	ldr	r2, [r7, #4]
 80038e8:	68f8      	ldr	r0, [r7, #12]
 80038ea:	4798      	blx	r3
 80038ec:	4603      	mov	r3, r0
 80038ee:	4618      	mov	r0, r3
 80038f0:	3710      	adds	r7, #16
 80038f2:	46bd      	mov	sp, r7
 80038f4:	bd80      	pop	{r7, pc}
 80038f6:	bf00      	nop

080038f8 <ucg_SetRotate180>:
 80038f8:	b580      	push	{r7, lr}
 80038fa:	b082      	sub	sp, #8
 80038fc:	af00      	add	r7, sp, #0
 80038fe:	6078      	str	r0, [r7, #4]
 8003900:	6878      	ldr	r0, [r7, #4]
 8003902:	f7ff ff2c 	bl	800375e <ucg_UndoRotate>
 8003906:	687b      	ldr	r3, [r7, #4]
 8003908:	689a      	ldr	r2, [r3, #8]
 800390a:	687b      	ldr	r3, [r7, #4]
 800390c:	611a      	str	r2, [r3, #16]
 800390e:	687b      	ldr	r3, [r7, #4]
 8003910:	4a05      	ldr	r2, [pc, #20]	; (8003928 <ucg_SetRotate180+0x30>)
 8003912:	609a      	str	r2, [r3, #8]
 8003914:	6878      	ldr	r0, [r7, #4]
 8003916:	f7ff f85e 	bl	80029d6 <ucg_GetDimension>
 800391a:	6878      	ldr	r0, [r7, #4]
 800391c:	f7ff f843 	bl	80029a6 <ucg_SetMaxClipRange>
 8003920:	bf00      	nop
 8003922:	3708      	adds	r7, #8
 8003924:	46bd      	mov	sp, r7
 8003926:	bd80      	pop	{r7, pc}
 8003928:	080037f9 	.word	0x080037f9

0800392c <USART_ReceiveData>:
 800392c:	b480      	push	{r7}
 800392e:	b083      	sub	sp, #12
 8003930:	af00      	add	r7, sp, #0
 8003932:	6078      	str	r0, [r7, #4]
 8003934:	687b      	ldr	r3, [r7, #4]
 8003936:	889b      	ldrh	r3, [r3, #4]
 8003938:	b29b      	uxth	r3, r3
 800393a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800393e:	b29b      	uxth	r3, r3
 8003940:	4618      	mov	r0, r3
 8003942:	370c      	adds	r7, #12
 8003944:	46bd      	mov	sp, r7
 8003946:	f85d 7b04 	ldr.w	r7, [sp], #4
 800394a:	4770      	bx	lr

0800394c <USART_GetITStatus>:
 800394c:	b480      	push	{r7}
 800394e:	b087      	sub	sp, #28
 8003950:	af00      	add	r7, sp, #0
 8003952:	6078      	str	r0, [r7, #4]
 8003954:	460b      	mov	r3, r1
 8003956:	807b      	strh	r3, [r7, #2]
 8003958:	2300      	movs	r3, #0
 800395a:	60fb      	str	r3, [r7, #12]
 800395c:	2300      	movs	r3, #0
 800395e:	617b      	str	r3, [r7, #20]
 8003960:	2300      	movs	r3, #0
 8003962:	60bb      	str	r3, [r7, #8]
 8003964:	2300      	movs	r3, #0
 8003966:	74fb      	strb	r3, [r7, #19]
 8003968:	887b      	ldrh	r3, [r7, #2]
 800396a:	b2db      	uxtb	r3, r3
 800396c:	095b      	lsrs	r3, r3, #5
 800396e:	b2db      	uxtb	r3, r3
 8003970:	60bb      	str	r3, [r7, #8]
 8003972:	887b      	ldrh	r3, [r7, #2]
 8003974:	f003 031f 	and.w	r3, r3, #31
 8003978:	617b      	str	r3, [r7, #20]
 800397a:	2201      	movs	r2, #1
 800397c:	697b      	ldr	r3, [r7, #20]
 800397e:	fa02 f303 	lsl.w	r3, r2, r3
 8003982:	617b      	str	r3, [r7, #20]
 8003984:	68bb      	ldr	r3, [r7, #8]
 8003986:	2b01      	cmp	r3, #1
 8003988:	d107      	bne.n	800399a <USART_GetITStatus+0x4e>
 800398a:	687b      	ldr	r3, [r7, #4]
 800398c:	899b      	ldrh	r3, [r3, #12]
 800398e:	b29b      	uxth	r3, r3
 8003990:	461a      	mov	r2, r3
 8003992:	697b      	ldr	r3, [r7, #20]
 8003994:	4013      	ands	r3, r2
 8003996:	617b      	str	r3, [r7, #20]
 8003998:	e011      	b.n	80039be <USART_GetITStatus+0x72>
 800399a:	68bb      	ldr	r3, [r7, #8]
 800399c:	2b02      	cmp	r3, #2
 800399e:	d107      	bne.n	80039b0 <USART_GetITStatus+0x64>
 80039a0:	687b      	ldr	r3, [r7, #4]
 80039a2:	8a1b      	ldrh	r3, [r3, #16]
 80039a4:	b29b      	uxth	r3, r3
 80039a6:	461a      	mov	r2, r3
 80039a8:	697b      	ldr	r3, [r7, #20]
 80039aa:	4013      	ands	r3, r2
 80039ac:	617b      	str	r3, [r7, #20]
 80039ae:	e006      	b.n	80039be <USART_GetITStatus+0x72>
 80039b0:	687b      	ldr	r3, [r7, #4]
 80039b2:	8a9b      	ldrh	r3, [r3, #20]
 80039b4:	b29b      	uxth	r3, r3
 80039b6:	461a      	mov	r2, r3
 80039b8:	697b      	ldr	r3, [r7, #20]
 80039ba:	4013      	ands	r3, r2
 80039bc:	617b      	str	r3, [r7, #20]
 80039be:	887b      	ldrh	r3, [r7, #2]
 80039c0:	0a1b      	lsrs	r3, r3, #8
 80039c2:	b29b      	uxth	r3, r3
 80039c4:	60fb      	str	r3, [r7, #12]
 80039c6:	2201      	movs	r2, #1
 80039c8:	68fb      	ldr	r3, [r7, #12]
 80039ca:	fa02 f303 	lsl.w	r3, r2, r3
 80039ce:	60fb      	str	r3, [r7, #12]
 80039d0:	687b      	ldr	r3, [r7, #4]
 80039d2:	881b      	ldrh	r3, [r3, #0]
 80039d4:	b29b      	uxth	r3, r3
 80039d6:	461a      	mov	r2, r3
 80039d8:	68fb      	ldr	r3, [r7, #12]
 80039da:	4013      	ands	r3, r2
 80039dc:	60fb      	str	r3, [r7, #12]
 80039de:	697b      	ldr	r3, [r7, #20]
 80039e0:	2b00      	cmp	r3, #0
 80039e2:	d005      	beq.n	80039f0 <USART_GetITStatus+0xa4>
 80039e4:	68fb      	ldr	r3, [r7, #12]
 80039e6:	2b00      	cmp	r3, #0
 80039e8:	d002      	beq.n	80039f0 <USART_GetITStatus+0xa4>
 80039ea:	2301      	movs	r3, #1
 80039ec:	74fb      	strb	r3, [r7, #19]
 80039ee:	e001      	b.n	80039f4 <USART_GetITStatus+0xa8>
 80039f0:	2300      	movs	r3, #0
 80039f2:	74fb      	strb	r3, [r7, #19]
 80039f4:	7cfb      	ldrb	r3, [r7, #19]
 80039f6:	4618      	mov	r0, r3
 80039f8:	371c      	adds	r7, #28
 80039fa:	46bd      	mov	sp, r7
 80039fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a00:	4770      	bx	lr

08003a02 <USART_ClearITPendingBit>:
 8003a02:	b480      	push	{r7}
 8003a04:	b085      	sub	sp, #20
 8003a06:	af00      	add	r7, sp, #0
 8003a08:	6078      	str	r0, [r7, #4]
 8003a0a:	460b      	mov	r3, r1
 8003a0c:	807b      	strh	r3, [r7, #2]
 8003a0e:	2300      	movs	r3, #0
 8003a10:	81fb      	strh	r3, [r7, #14]
 8003a12:	2300      	movs	r3, #0
 8003a14:	81bb      	strh	r3, [r7, #12]
 8003a16:	887b      	ldrh	r3, [r7, #2]
 8003a18:	0a1b      	lsrs	r3, r3, #8
 8003a1a:	81fb      	strh	r3, [r7, #14]
 8003a1c:	89fb      	ldrh	r3, [r7, #14]
 8003a1e:	2201      	movs	r2, #1
 8003a20:	fa02 f303 	lsl.w	r3, r2, r3
 8003a24:	81bb      	strh	r3, [r7, #12]
 8003a26:	89bb      	ldrh	r3, [r7, #12]
 8003a28:	43db      	mvns	r3, r3
 8003a2a:	b29a      	uxth	r2, r3
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	801a      	strh	r2, [r3, #0]
 8003a30:	bf00      	nop
 8003a32:	3714      	adds	r7, #20
 8003a34:	46bd      	mov	sp, r7
 8003a36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a3a:	4770      	bx	lr

08003a3c <ucg_clip_is_x_visible>:
 8003a3c:	b480      	push	{r7}
 8003a3e:	b085      	sub	sp, #20
 8003a40:	af00      	add	r7, sp, #0
 8003a42:	6078      	str	r0, [r7, #4]
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8003a48:	81fb      	strh	r3, [r7, #14]
 8003a4a:	89fa      	ldrh	r2, [r7, #14]
 8003a4c:	687b      	ldr	r3, [r7, #4]
 8003a4e:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 8003a52:	b29b      	uxth	r3, r3
 8003a54:	1ad3      	subs	r3, r2, r3
 8003a56:	b29b      	uxth	r3, r3
 8003a58:	81fb      	strh	r3, [r7, #14]
 8003a5a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003a5e:	2b00      	cmp	r3, #0
 8003a60:	da01      	bge.n	8003a66 <ucg_clip_is_x_visible+0x2a>
 8003a62:	2300      	movs	r3, #0
 8003a64:	e009      	b.n	8003a7a <ucg_clip_is_x_visible+0x3e>
 8003a66:	687b      	ldr	r3, [r7, #4]
 8003a68:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	; 0x74
 8003a6c:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8003a70:	429a      	cmp	r2, r3
 8003a72:	db01      	blt.n	8003a78 <ucg_clip_is_x_visible+0x3c>
 8003a74:	2300      	movs	r3, #0
 8003a76:	e000      	b.n	8003a7a <ucg_clip_is_x_visible+0x3e>
 8003a78:	2301      	movs	r3, #1
 8003a7a:	4618      	mov	r0, r3
 8003a7c:	3714      	adds	r7, #20
 8003a7e:	46bd      	mov	sp, r7
 8003a80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a84:	4770      	bx	lr

08003a86 <ucg_clip_is_y_visible>:
 8003a86:	b480      	push	{r7}
 8003a88:	b085      	sub	sp, #20
 8003a8a:	af00      	add	r7, sp, #0
 8003a8c:	6078      	str	r0, [r7, #4]
 8003a8e:	687b      	ldr	r3, [r7, #4]
 8003a90:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003a92:	81fb      	strh	r3, [r7, #14]
 8003a94:	89fa      	ldrh	r2, [r7, #14]
 8003a96:	687b      	ldr	r3, [r7, #4]
 8003a98:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	; 0x72
 8003a9c:	b29b      	uxth	r3, r3
 8003a9e:	1ad3      	subs	r3, r2, r3
 8003aa0:	b29b      	uxth	r3, r3
 8003aa2:	81fb      	strh	r3, [r7, #14]
 8003aa4:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003aa8:	2b00      	cmp	r3, #0
 8003aaa:	da01      	bge.n	8003ab0 <ucg_clip_is_y_visible+0x2a>
 8003aac:	2300      	movs	r3, #0
 8003aae:	e009      	b.n	8003ac4 <ucg_clip_is_y_visible+0x3e>
 8003ab0:	687b      	ldr	r3, [r7, #4]
 8003ab2:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	; 0x76
 8003ab6:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8003aba:	429a      	cmp	r2, r3
 8003abc:	db01      	blt.n	8003ac2 <ucg_clip_is_y_visible+0x3c>
 8003abe:	2300      	movs	r3, #0
 8003ac0:	e000      	b.n	8003ac4 <ucg_clip_is_y_visible+0x3e>
 8003ac2:	2301      	movs	r3, #1
 8003ac4:	4618      	mov	r0, r3
 8003ac6:	3714      	adds	r7, #20
 8003ac8:	46bd      	mov	sp, r7
 8003aca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ace:	4770      	bx	lr

08003ad0 <ucg_clip_intersection>:
 8003ad0:	b480      	push	{r7}
 8003ad2:	b087      	sub	sp, #28
 8003ad4:	af00      	add	r7, sp, #0
 8003ad6:	60f8      	str	r0, [r7, #12]
 8003ad8:	60b9      	str	r1, [r7, #8]
 8003ada:	4611      	mov	r1, r2
 8003adc:	461a      	mov	r2, r3
 8003ade:	460b      	mov	r3, r1
 8003ae0:	80fb      	strh	r3, [r7, #6]
 8003ae2:	4613      	mov	r3, r2
 8003ae4:	80bb      	strh	r3, [r7, #4]
 8003ae6:	68fb      	ldr	r3, [r7, #12]
 8003ae8:	881b      	ldrh	r3, [r3, #0]
 8003aea:	82fb      	strh	r3, [r7, #22]
 8003aec:	68bb      	ldr	r3, [r7, #8]
 8003aee:	881b      	ldrh	r3, [r3, #0]
 8003af0:	82bb      	strh	r3, [r7, #20]
 8003af2:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 8003af6:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8003afa:	429a      	cmp	r2, r3
 8003afc:	db01      	blt.n	8003b02 <ucg_clip_intersection+0x32>
 8003afe:	2300      	movs	r3, #0
 8003b00:	e01a      	b.n	8003b38 <ucg_clip_intersection+0x68>
 8003b02:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 8003b06:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003b0a:	429a      	cmp	r2, r3
 8003b0c:	dc01      	bgt.n	8003b12 <ucg_clip_intersection+0x42>
 8003b0e:	2300      	movs	r3, #0
 8003b10:	e012      	b.n	8003b38 <ucg_clip_intersection+0x68>
 8003b12:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 8003b16:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003b1a:	429a      	cmp	r2, r3
 8003b1c:	da02      	bge.n	8003b24 <ucg_clip_intersection+0x54>
 8003b1e:	68fb      	ldr	r3, [r7, #12]
 8003b20:	88fa      	ldrh	r2, [r7, #6]
 8003b22:	801a      	strh	r2, [r3, #0]
 8003b24:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 8003b28:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8003b2c:	429a      	cmp	r2, r3
 8003b2e:	dd02      	ble.n	8003b36 <ucg_clip_intersection+0x66>
 8003b30:	68bb      	ldr	r3, [r7, #8]
 8003b32:	88ba      	ldrh	r2, [r7, #4]
 8003b34:	801a      	strh	r2, [r3, #0]
 8003b36:	2301      	movs	r3, #1
 8003b38:	4618      	mov	r0, r3
 8003b3a:	371c      	adds	r7, #28
 8003b3c:	46bd      	mov	sp, r7
 8003b3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b42:	4770      	bx	lr

08003b44 <ucg_clip_is_pixel_visible>:
 8003b44:	b580      	push	{r7, lr}
 8003b46:	b082      	sub	sp, #8
 8003b48:	af00      	add	r7, sp, #0
 8003b4a:	6078      	str	r0, [r7, #4]
 8003b4c:	6878      	ldr	r0, [r7, #4]
 8003b4e:	f7ff ff75 	bl	8003a3c <ucg_clip_is_x_visible>
 8003b52:	4603      	mov	r3, r0
 8003b54:	2b00      	cmp	r3, #0
 8003b56:	d101      	bne.n	8003b5c <ucg_clip_is_pixel_visible+0x18>
 8003b58:	2300      	movs	r3, #0
 8003b5a:	e008      	b.n	8003b6e <ucg_clip_is_pixel_visible+0x2a>
 8003b5c:	6878      	ldr	r0, [r7, #4]
 8003b5e:	f7ff ff92 	bl	8003a86 <ucg_clip_is_y_visible>
 8003b62:	4603      	mov	r3, r0
 8003b64:	2b00      	cmp	r3, #0
 8003b66:	d101      	bne.n	8003b6c <ucg_clip_is_pixel_visible+0x28>
 8003b68:	2300      	movs	r3, #0
 8003b6a:	e000      	b.n	8003b6e <ucg_clip_is_pixel_visible+0x2a>
 8003b6c:	2301      	movs	r3, #1
 8003b6e:	4618      	mov	r0, r3
 8003b70:	3708      	adds	r7, #8
 8003b72:	46bd      	mov	sp, r7
 8003b74:	bd80      	pop	{r7, pc}
	...

08003b78 <ucg_clip_l90fx>:
 8003b78:	b590      	push	{r4, r7, lr}
 8003b7a:	b085      	sub	sp, #20
 8003b7c:	af00      	add	r7, sp, #0
 8003b7e:	6078      	str	r0, [r7, #4]
 8003b80:	687b      	ldr	r3, [r7, #4]
 8003b82:	2200      	movs	r2, #0
 8003b84:	861a      	strh	r2, [r3, #48]	; 0x30
 8003b86:	687b      	ldr	r3, [r7, #4]
 8003b88:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 8003b8c:	2b03      	cmp	r3, #3
 8003b8e:	f200 816d 	bhi.w	8003e6c <ucg_clip_l90fx+0x2f4>
 8003b92:	a201      	add	r2, pc, #4	; (adr r2, 8003b98 <ucg_clip_l90fx+0x20>)
 8003b94:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003b98:	08003ba9 	.word	0x08003ba9
 8003b9c:	08003c4f 	.word	0x08003c4f
 8003ba0:	08003cf5 	.word	0x08003cf5
 8003ba4:	08003db1 	.word	0x08003db1
 8003ba8:	6878      	ldr	r0, [r7, #4]
 8003baa:	f7ff ff6c 	bl	8003a86 <ucg_clip_is_y_visible>
 8003bae:	4603      	mov	r3, r0
 8003bb0:	2b00      	cmp	r3, #0
 8003bb2:	d101      	bne.n	8003bb8 <ucg_clip_l90fx+0x40>
 8003bb4:	2300      	movs	r3, #0
 8003bb6:	e15a      	b.n	8003e6e <ucg_clip_l90fx+0x2f6>
 8003bb8:	687b      	ldr	r3, [r7, #4]
 8003bba:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8003bbe:	81fb      	strh	r3, [r7, #14]
 8003bc0:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003bc4:	81bb      	strh	r3, [r7, #12]
 8003bc6:	687b      	ldr	r3, [r7, #4]
 8003bc8:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8003bcc:	b29a      	uxth	r2, r3
 8003bce:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003bd2:	b29b      	uxth	r3, r3
 8003bd4:	4413      	add	r3, r2
 8003bd6:	b29b      	uxth	r3, r3
 8003bd8:	b21b      	sxth	r3, r3
 8003bda:	81bb      	strh	r3, [r7, #12]
 8003bdc:	687b      	ldr	r3, [r7, #4]
 8003bde:	f9b3 4070 	ldrsh.w	r4, [r3, #112]	; 0x70
 8003be2:	687b      	ldr	r3, [r7, #4]
 8003be4:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 8003be8:	b29a      	uxth	r2, r3
 8003bea:	687b      	ldr	r3, [r7, #4]
 8003bec:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	; 0x74
 8003bf0:	b29b      	uxth	r3, r3
 8003bf2:	4413      	add	r3, r2
 8003bf4:	b29b      	uxth	r3, r3
 8003bf6:	b21b      	sxth	r3, r3
 8003bf8:	f107 010c 	add.w	r1, r7, #12
 8003bfc:	f107 000e 	add.w	r0, r7, #14
 8003c00:	4622      	mov	r2, r4
 8003c02:	f7ff ff65 	bl	8003ad0 <ucg_clip_intersection>
 8003c06:	4603      	mov	r3, r0
 8003c08:	2b00      	cmp	r3, #0
 8003c0a:	d101      	bne.n	8003c10 <ucg_clip_l90fx+0x98>
 8003c0c:	2300      	movs	r3, #0
 8003c0e:	e12e      	b.n	8003e6e <ucg_clip_l90fx+0x2f6>
 8003c10:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003c14:	b29a      	uxth	r2, r3
 8003c16:	687b      	ldr	r3, [r7, #4]
 8003c18:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8003c1c:	b29b      	uxth	r3, r3
 8003c1e:	1ad3      	subs	r3, r2, r3
 8003c20:	b29b      	uxth	r3, r3
 8003c22:	b21a      	sxth	r2, r3
 8003c24:	687b      	ldr	r3, [r7, #4]
 8003c26:	861a      	strh	r2, [r3, #48]	; 0x30
 8003c28:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8003c2c:	687b      	ldr	r3, [r7, #4]
 8003c2e:	849a      	strh	r2, [r3, #36]	; 0x24
 8003c30:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003c34:	b29a      	uxth	r2, r3
 8003c36:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003c3a:	b29b      	uxth	r3, r3
 8003c3c:	1ad3      	subs	r3, r2, r3
 8003c3e:	b29b      	uxth	r3, r3
 8003c40:	b21b      	sxth	r3, r3
 8003c42:	81bb      	strh	r3, [r7, #12]
 8003c44:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8003c48:	687b      	ldr	r3, [r7, #4]
 8003c4a:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003c4c:	e10e      	b.n	8003e6c <ucg_clip_l90fx+0x2f4>
 8003c4e:	6878      	ldr	r0, [r7, #4]
 8003c50:	f7ff fef4 	bl	8003a3c <ucg_clip_is_x_visible>
 8003c54:	4603      	mov	r3, r0
 8003c56:	2b00      	cmp	r3, #0
 8003c58:	d101      	bne.n	8003c5e <ucg_clip_l90fx+0xe6>
 8003c5a:	2300      	movs	r3, #0
 8003c5c:	e107      	b.n	8003e6e <ucg_clip_l90fx+0x2f6>
 8003c5e:	687b      	ldr	r3, [r7, #4]
 8003c60:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8003c64:	81fb      	strh	r3, [r7, #14]
 8003c66:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003c6a:	81bb      	strh	r3, [r7, #12]
 8003c6c:	687b      	ldr	r3, [r7, #4]
 8003c6e:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8003c72:	b29a      	uxth	r2, r3
 8003c74:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003c78:	b29b      	uxth	r3, r3
 8003c7a:	4413      	add	r3, r2
 8003c7c:	b29b      	uxth	r3, r3
 8003c7e:	b21b      	sxth	r3, r3
 8003c80:	81bb      	strh	r3, [r7, #12]
 8003c82:	687b      	ldr	r3, [r7, #4]
 8003c84:	f9b3 4072 	ldrsh.w	r4, [r3, #114]	; 0x72
 8003c88:	687b      	ldr	r3, [r7, #4]
 8003c8a:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	; 0x72
 8003c8e:	b29a      	uxth	r2, r3
 8003c90:	687b      	ldr	r3, [r7, #4]
 8003c92:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	; 0x76
 8003c96:	b29b      	uxth	r3, r3
 8003c98:	4413      	add	r3, r2
 8003c9a:	b29b      	uxth	r3, r3
 8003c9c:	b21b      	sxth	r3, r3
 8003c9e:	f107 010c 	add.w	r1, r7, #12
 8003ca2:	f107 000e 	add.w	r0, r7, #14
 8003ca6:	4622      	mov	r2, r4
 8003ca8:	f7ff ff12 	bl	8003ad0 <ucg_clip_intersection>
 8003cac:	4603      	mov	r3, r0
 8003cae:	2b00      	cmp	r3, #0
 8003cb0:	d101      	bne.n	8003cb6 <ucg_clip_l90fx+0x13e>
 8003cb2:	2300      	movs	r3, #0
 8003cb4:	e0db      	b.n	8003e6e <ucg_clip_l90fx+0x2f6>
 8003cb6:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003cba:	b29a      	uxth	r2, r3
 8003cbc:	687b      	ldr	r3, [r7, #4]
 8003cbe:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8003cc2:	b29b      	uxth	r3, r3
 8003cc4:	1ad3      	subs	r3, r2, r3
 8003cc6:	b29b      	uxth	r3, r3
 8003cc8:	b21a      	sxth	r2, r3
 8003cca:	687b      	ldr	r3, [r7, #4]
 8003ccc:	861a      	strh	r2, [r3, #48]	; 0x30
 8003cce:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8003cd2:	687b      	ldr	r3, [r7, #4]
 8003cd4:	84da      	strh	r2, [r3, #38]	; 0x26
 8003cd6:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003cda:	b29a      	uxth	r2, r3
 8003cdc:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003ce0:	b29b      	uxth	r3, r3
 8003ce2:	1ad3      	subs	r3, r2, r3
 8003ce4:	b29b      	uxth	r3, r3
 8003ce6:	b21b      	sxth	r3, r3
 8003ce8:	81bb      	strh	r3, [r7, #12]
 8003cea:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8003cee:	687b      	ldr	r3, [r7, #4]
 8003cf0:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003cf2:	e0bb      	b.n	8003e6c <ucg_clip_l90fx+0x2f4>
 8003cf4:	6878      	ldr	r0, [r7, #4]
 8003cf6:	f7ff fec6 	bl	8003a86 <ucg_clip_is_y_visible>
 8003cfa:	4603      	mov	r3, r0
 8003cfc:	2b00      	cmp	r3, #0
 8003cfe:	d101      	bne.n	8003d04 <ucg_clip_l90fx+0x18c>
 8003d00:	2300      	movs	r3, #0
 8003d02:	e0b4      	b.n	8003e6e <ucg_clip_l90fx+0x2f6>
 8003d04:	687b      	ldr	r3, [r7, #4]
 8003d06:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8003d0a:	81bb      	strh	r3, [r7, #12]
 8003d0c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003d10:	b29b      	uxth	r3, r3
 8003d12:	3301      	adds	r3, #1
 8003d14:	b29b      	uxth	r3, r3
 8003d16:	b21b      	sxth	r3, r3
 8003d18:	81bb      	strh	r3, [r7, #12]
 8003d1a:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003d1e:	81fb      	strh	r3, [r7, #14]
 8003d20:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003d24:	b29a      	uxth	r2, r3
 8003d26:	687b      	ldr	r3, [r7, #4]
 8003d28:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8003d2c:	b29b      	uxth	r3, r3
 8003d2e:	1ad3      	subs	r3, r2, r3
 8003d30:	b29b      	uxth	r3, r3
 8003d32:	b21b      	sxth	r3, r3
 8003d34:	81fb      	strh	r3, [r7, #14]
 8003d36:	687b      	ldr	r3, [r7, #4]
 8003d38:	f9b3 4070 	ldrsh.w	r4, [r3, #112]	; 0x70
 8003d3c:	687b      	ldr	r3, [r7, #4]
 8003d3e:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 8003d42:	b29a      	uxth	r2, r3
 8003d44:	687b      	ldr	r3, [r7, #4]
 8003d46:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	; 0x74
 8003d4a:	b29b      	uxth	r3, r3
 8003d4c:	4413      	add	r3, r2
 8003d4e:	b29b      	uxth	r3, r3
 8003d50:	b21b      	sxth	r3, r3
 8003d52:	f107 010c 	add.w	r1, r7, #12
 8003d56:	f107 000e 	add.w	r0, r7, #14
 8003d5a:	4622      	mov	r2, r4
 8003d5c:	f7ff feb8 	bl	8003ad0 <ucg_clip_intersection>
 8003d60:	4603      	mov	r3, r0
 8003d62:	2b00      	cmp	r3, #0
 8003d64:	d101      	bne.n	8003d6a <ucg_clip_l90fx+0x1f2>
 8003d66:	2300      	movs	r3, #0
 8003d68:	e081      	b.n	8003e6e <ucg_clip_l90fx+0x2f6>
 8003d6a:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003d6e:	b29a      	uxth	r2, r3
 8003d70:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003d74:	b29b      	uxth	r3, r3
 8003d76:	1ad3      	subs	r3, r2, r3
 8003d78:	b29b      	uxth	r3, r3
 8003d7a:	b21a      	sxth	r2, r3
 8003d7c:	687b      	ldr	r3, [r7, #4]
 8003d7e:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003d80:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003d84:	b29b      	uxth	r3, r3
 8003d86:	3b01      	subs	r3, #1
 8003d88:	b29b      	uxth	r3, r3
 8003d8a:	b21b      	sxth	r3, r3
 8003d8c:	81bb      	strh	r3, [r7, #12]
 8003d8e:	687b      	ldr	r3, [r7, #4]
 8003d90:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8003d94:	b29a      	uxth	r2, r3
 8003d96:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003d9a:	b29b      	uxth	r3, r3
 8003d9c:	1ad3      	subs	r3, r2, r3
 8003d9e:	b29b      	uxth	r3, r3
 8003da0:	b21a      	sxth	r2, r3
 8003da2:	687b      	ldr	r3, [r7, #4]
 8003da4:	861a      	strh	r2, [r3, #48]	; 0x30
 8003da6:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8003daa:	687b      	ldr	r3, [r7, #4]
 8003dac:	849a      	strh	r2, [r3, #36]	; 0x24
 8003dae:	e05d      	b.n	8003e6c <ucg_clip_l90fx+0x2f4>
 8003db0:	6878      	ldr	r0, [r7, #4]
 8003db2:	f7ff fe43 	bl	8003a3c <ucg_clip_is_x_visible>
 8003db6:	4603      	mov	r3, r0
 8003db8:	2b00      	cmp	r3, #0
 8003dba:	d101      	bne.n	8003dc0 <ucg_clip_l90fx+0x248>
 8003dbc:	2300      	movs	r3, #0
 8003dbe:	e056      	b.n	8003e6e <ucg_clip_l90fx+0x2f6>
 8003dc0:	687b      	ldr	r3, [r7, #4]
 8003dc2:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8003dc6:	81bb      	strh	r3, [r7, #12]
 8003dc8:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003dcc:	b29b      	uxth	r3, r3
 8003dce:	3301      	adds	r3, #1
 8003dd0:	b29b      	uxth	r3, r3
 8003dd2:	b21b      	sxth	r3, r3
 8003dd4:	81bb      	strh	r3, [r7, #12]
 8003dd6:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003dda:	81fb      	strh	r3, [r7, #14]
 8003ddc:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003de0:	b29a      	uxth	r2, r3
 8003de2:	687b      	ldr	r3, [r7, #4]
 8003de4:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8003de8:	b29b      	uxth	r3, r3
 8003dea:	1ad3      	subs	r3, r2, r3
 8003dec:	b29b      	uxth	r3, r3
 8003dee:	b21b      	sxth	r3, r3
 8003df0:	81fb      	strh	r3, [r7, #14]
 8003df2:	687b      	ldr	r3, [r7, #4]
 8003df4:	f9b3 4072 	ldrsh.w	r4, [r3, #114]	; 0x72
 8003df8:	687b      	ldr	r3, [r7, #4]
 8003dfa:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	; 0x72
 8003dfe:	b29a      	uxth	r2, r3
 8003e00:	687b      	ldr	r3, [r7, #4]
 8003e02:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	; 0x76
 8003e06:	b29b      	uxth	r3, r3
 8003e08:	4413      	add	r3, r2
 8003e0a:	b29b      	uxth	r3, r3
 8003e0c:	b21b      	sxth	r3, r3
 8003e0e:	f107 010c 	add.w	r1, r7, #12
 8003e12:	f107 000e 	add.w	r0, r7, #14
 8003e16:	4622      	mov	r2, r4
 8003e18:	f7ff fe5a 	bl	8003ad0 <ucg_clip_intersection>
 8003e1c:	4603      	mov	r3, r0
 8003e1e:	2b00      	cmp	r3, #0
 8003e20:	d101      	bne.n	8003e26 <ucg_clip_l90fx+0x2ae>
 8003e22:	2300      	movs	r3, #0
 8003e24:	e023      	b.n	8003e6e <ucg_clip_l90fx+0x2f6>
 8003e26:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003e2a:	b29a      	uxth	r2, r3
 8003e2c:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003e30:	b29b      	uxth	r3, r3
 8003e32:	1ad3      	subs	r3, r2, r3
 8003e34:	b29b      	uxth	r3, r3
 8003e36:	b21a      	sxth	r2, r3
 8003e38:	687b      	ldr	r3, [r7, #4]
 8003e3a:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003e3c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003e40:	b29b      	uxth	r3, r3
 8003e42:	3b01      	subs	r3, #1
 8003e44:	b29b      	uxth	r3, r3
 8003e46:	b21b      	sxth	r3, r3
 8003e48:	81bb      	strh	r3, [r7, #12]
 8003e4a:	687b      	ldr	r3, [r7, #4]
 8003e4c:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8003e50:	b29a      	uxth	r2, r3
 8003e52:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003e56:	b29b      	uxth	r3, r3
 8003e58:	1ad3      	subs	r3, r2, r3
 8003e5a:	b29b      	uxth	r3, r3
 8003e5c:	b21a      	sxth	r2, r3
 8003e5e:	687b      	ldr	r3, [r7, #4]
 8003e60:	861a      	strh	r2, [r3, #48]	; 0x30
 8003e62:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8003e66:	687b      	ldr	r3, [r7, #4]
 8003e68:	84da      	strh	r2, [r3, #38]	; 0x26
 8003e6a:	bf00      	nop
 8003e6c:	2301      	movs	r3, #1
 8003e6e:	4618      	mov	r0, r3
 8003e70:	3714      	adds	r7, #20
 8003e72:	46bd      	mov	sp, r7
 8003e74:	bd90      	pop	{r4, r7, pc}
 8003e76:	bf00      	nop

08003e78 <ucg_clip_l90se>:
 8003e78:	b580      	push	{r7, lr}
 8003e7a:	b084      	sub	sp, #16
 8003e7c:	af00      	add	r7, sp, #0
 8003e7e:	6078      	str	r0, [r7, #4]
 8003e80:	6878      	ldr	r0, [r7, #4]
 8003e82:	f7ff fe79 	bl	8003b78 <ucg_clip_l90fx>
 8003e86:	4603      	mov	r3, r0
 8003e88:	2b00      	cmp	r3, #0
 8003e8a:	d101      	bne.n	8003e90 <ucg_clip_l90se+0x18>
 8003e8c:	2300      	movs	r3, #0
 8003e8e:	e019      	b.n	8003ec4 <ucg_clip_l90se+0x4c>
 8003e90:	2300      	movs	r3, #0
 8003e92:	73fb      	strb	r3, [r7, #15]
 8003e94:	e012      	b.n	8003ebc <ucg_clip_l90se+0x44>
 8003e96:	687b      	ldr	r3, [r7, #4]
 8003e98:	f103 0146 	add.w	r1, r3, #70	; 0x46
 8003e9c:	7bfa      	ldrb	r2, [r7, #15]
 8003e9e:	4613      	mov	r3, r2
 8003ea0:	00db      	lsls	r3, r3, #3
 8003ea2:	1a9b      	subs	r3, r3, r2
 8003ea4:	005b      	lsls	r3, r3, #1
 8003ea6:	18ca      	adds	r2, r1, r3
 8003ea8:	687b      	ldr	r3, [r7, #4]
 8003eaa:	f9b3 3030 	ldrsh.w	r3, [r3, #48]	; 0x30
 8003eae:	4619      	mov	r1, r3
 8003eb0:	4610      	mov	r0, r2
 8003eb2:	f7fe faf6 	bl	80024a2 <ucg_ccs_seek>
 8003eb6:	7bfb      	ldrb	r3, [r7, #15]
 8003eb8:	3301      	adds	r3, #1
 8003eba:	73fb      	strb	r3, [r7, #15]
 8003ebc:	7bfb      	ldrb	r3, [r7, #15]
 8003ebe:	2b02      	cmp	r3, #2
 8003ec0:	d9e9      	bls.n	8003e96 <ucg_clip_l90se+0x1e>
 8003ec2:	2301      	movs	r3, #1
 8003ec4:	4618      	mov	r0, r3
 8003ec6:	3710      	adds	r7, #16
 8003ec8:	46bd      	mov	sp, r7
 8003eca:	bd80      	pop	{r7, pc}

08003ecc <ucg_com_PowerDown>:
 8003ecc:	b590      	push	{r4, r7, lr}
 8003ece:	b083      	sub	sp, #12
 8003ed0:	af00      	add	r7, sp, #0
 8003ed2:	6078      	str	r0, [r7, #4]
 8003ed4:	687b      	ldr	r3, [r7, #4]
 8003ed6:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8003eda:	f003 0308 	and.w	r3, r3, #8
 8003ede:	2b00      	cmp	r3, #0
 8003ee0:	d006      	beq.n	8003ef0 <ucg_com_PowerDown+0x24>
 8003ee2:	687b      	ldr	r3, [r7, #4]
 8003ee4:	69dc      	ldr	r4, [r3, #28]
 8003ee6:	2300      	movs	r3, #0
 8003ee8:	2200      	movs	r2, #0
 8003eea:	210b      	movs	r1, #11
 8003eec:	6878      	ldr	r0, [r7, #4]
 8003eee:	47a0      	blx	r4
 8003ef0:	687b      	ldr	r3, [r7, #4]
 8003ef2:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8003ef6:	f023 0308 	bic.w	r3, r3, #8
 8003efa:	b2da      	uxtb	r2, r3
 8003efc:	687b      	ldr	r3, [r7, #4]
 8003efe:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8003f02:	bf00      	nop
 8003f04:	370c      	adds	r7, #12
 8003f06:	46bd      	mov	sp, r7
 8003f08:	bd90      	pop	{r4, r7, pc}

08003f0a <ucg_com_PowerUp>:
 8003f0a:	b590      	push	{r4, r7, lr}
 8003f0c:	b085      	sub	sp, #20
 8003f0e:	af00      	add	r7, sp, #0
 8003f10:	6078      	str	r0, [r7, #4]
 8003f12:	460b      	mov	r3, r1
 8003f14:	807b      	strh	r3, [r7, #2]
 8003f16:	4613      	mov	r3, r2
 8003f18:	803b      	strh	r3, [r7, #0]
 8003f1a:	887b      	ldrh	r3, [r7, #2]
 8003f1c:	813b      	strh	r3, [r7, #8]
 8003f1e:	883b      	ldrh	r3, [r7, #0]
 8003f20:	817b      	strh	r3, [r7, #10]
 8003f22:	6878      	ldr	r0, [r7, #4]
 8003f24:	f7ff ffd2 	bl	8003ecc <ucg_com_PowerDown>
 8003f28:	687b      	ldr	r3, [r7, #4]
 8003f2a:	2200      	movs	r2, #0
 8003f2c:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8003f30:	687b      	ldr	r3, [r7, #4]
 8003f32:	69dc      	ldr	r4, [r3, #28]
 8003f34:	f107 0308 	add.w	r3, r7, #8
 8003f38:	2200      	movs	r2, #0
 8003f3a:	210a      	movs	r1, #10
 8003f3c:	6878      	ldr	r0, [r7, #4]
 8003f3e:	47a0      	blx	r4
 8003f40:	4603      	mov	r3, r0
 8003f42:	81fb      	strh	r3, [r7, #14]
 8003f44:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003f48:	2b00      	cmp	r3, #0
 8003f4a:	d008      	beq.n	8003f5e <ucg_com_PowerUp+0x54>
 8003f4c:	687b      	ldr	r3, [r7, #4]
 8003f4e:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8003f52:	f043 0308 	orr.w	r3, r3, #8
 8003f56:	b2da      	uxtb	r2, r3
 8003f58:	687b      	ldr	r3, [r7, #4]
 8003f5a:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8003f5e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003f62:	4618      	mov	r0, r3
 8003f64:	3714      	adds	r7, #20
 8003f66:	46bd      	mov	sp, r7
 8003f68:	bd90      	pop	{r4, r7, pc}

08003f6a <ucg_com_SetLineStatus>:
 8003f6a:	b590      	push	{r4, r7, lr}
 8003f6c:	b083      	sub	sp, #12
 8003f6e:	af00      	add	r7, sp, #0
 8003f70:	6078      	str	r0, [r7, #4]
 8003f72:	4608      	mov	r0, r1
 8003f74:	4611      	mov	r1, r2
 8003f76:	461a      	mov	r2, r3
 8003f78:	4603      	mov	r3, r0
 8003f7a:	70fb      	strb	r3, [r7, #3]
 8003f7c:	460b      	mov	r3, r1
 8003f7e:	70bb      	strb	r3, [r7, #2]
 8003f80:	4613      	mov	r3, r2
 8003f82:	707b      	strb	r3, [r7, #1]
 8003f84:	78fb      	ldrb	r3, [r7, #3]
 8003f86:	2b00      	cmp	r3, #0
 8003f88:	d131      	bne.n	8003fee <ucg_com_SetLineStatus+0x84>
 8003f8a:	687b      	ldr	r3, [r7, #4]
 8003f8c:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8003f90:	78bb      	ldrb	r3, [r7, #2]
 8003f92:	4013      	ands	r3, r2
 8003f94:	b2db      	uxtb	r3, r3
 8003f96:	2b00      	cmp	r3, #0
 8003f98:	d008      	beq.n	8003fac <ucg_com_SetLineStatus+0x42>
 8003f9a:	687b      	ldr	r3, [r7, #4]
 8003f9c:	f893 20af 	ldrb.w	r2, [r3, #175]	; 0xaf
 8003fa0:	78bb      	ldrb	r3, [r7, #2]
 8003fa2:	4013      	ands	r3, r2
 8003fa4:	b2db      	uxtb	r3, r3
 8003fa6:	78ba      	ldrb	r2, [r7, #2]
 8003fa8:	429a      	cmp	r2, r3
 8003faa:	d14b      	bne.n	8004044 <ucg_com_SetLineStatus+0xda>
 8003fac:	687b      	ldr	r3, [r7, #4]
 8003fae:	69dc      	ldr	r4, [r3, #28]
 8003fb0:	787b      	ldrb	r3, [r7, #1]
 8003fb2:	b219      	sxth	r1, r3
 8003fb4:	78fb      	ldrb	r3, [r7, #3]
 8003fb6:	b29a      	uxth	r2, r3
 8003fb8:	2300      	movs	r3, #0
 8003fba:	6878      	ldr	r0, [r7, #4]
 8003fbc:	47a0      	blx	r4
 8003fbe:	687b      	ldr	r3, [r7, #4]
 8003fc0:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8003fc4:	b25a      	sxtb	r2, r3
 8003fc6:	f997 3002 	ldrsb.w	r3, [r7, #2]
 8003fca:	43db      	mvns	r3, r3
 8003fcc:	b25b      	sxtb	r3, r3
 8003fce:	4013      	ands	r3, r2
 8003fd0:	b25b      	sxtb	r3, r3
 8003fd2:	b2da      	uxtb	r2, r3
 8003fd4:	687b      	ldr	r3, [r7, #4]
 8003fd6:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8003fda:	687b      	ldr	r3, [r7, #4]
 8003fdc:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8003fe0:	78bb      	ldrb	r3, [r7, #2]
 8003fe2:	4313      	orrs	r3, r2
 8003fe4:	b2da      	uxtb	r2, r3
 8003fe6:	687b      	ldr	r3, [r7, #4]
 8003fe8:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8003fec:	e02a      	b.n	8004044 <ucg_com_SetLineStatus+0xda>
 8003fee:	687b      	ldr	r3, [r7, #4]
 8003ff0:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8003ff4:	78bb      	ldrb	r3, [r7, #2]
 8003ff6:	4013      	ands	r3, r2
 8003ff8:	b2db      	uxtb	r3, r3
 8003ffa:	2b00      	cmp	r3, #0
 8003ffc:	d007      	beq.n	800400e <ucg_com_SetLineStatus+0xa4>
 8003ffe:	687b      	ldr	r3, [r7, #4]
 8004000:	f893 20af 	ldrb.w	r2, [r3, #175]	; 0xaf
 8004004:	78bb      	ldrb	r3, [r7, #2]
 8004006:	4013      	ands	r3, r2
 8004008:	b2db      	uxtb	r3, r3
 800400a:	2b00      	cmp	r3, #0
 800400c:	d11a      	bne.n	8004044 <ucg_com_SetLineStatus+0xda>
 800400e:	687b      	ldr	r3, [r7, #4]
 8004010:	69dc      	ldr	r4, [r3, #28]
 8004012:	787b      	ldrb	r3, [r7, #1]
 8004014:	b219      	sxth	r1, r3
 8004016:	78fb      	ldrb	r3, [r7, #3]
 8004018:	b29a      	uxth	r2, r3
 800401a:	2300      	movs	r3, #0
 800401c:	6878      	ldr	r0, [r7, #4]
 800401e:	47a0      	blx	r4
 8004020:	687b      	ldr	r3, [r7, #4]
 8004022:	f893 20af 	ldrb.w	r2, [r3, #175]	; 0xaf
 8004026:	78bb      	ldrb	r3, [r7, #2]
 8004028:	4313      	orrs	r3, r2
 800402a:	b2da      	uxtb	r2, r3
 800402c:	687b      	ldr	r3, [r7, #4]
 800402e:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8004032:	687b      	ldr	r3, [r7, #4]
 8004034:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8004038:	78bb      	ldrb	r3, [r7, #2]
 800403a:	4313      	orrs	r3, r2
 800403c:	b2da      	uxtb	r2, r3
 800403e:	687b      	ldr	r3, [r7, #4]
 8004040:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8004044:	bf00      	nop
 8004046:	370c      	adds	r7, #12
 8004048:	46bd      	mov	sp, r7
 800404a:	bd90      	pop	{r4, r7, pc}

0800404c <ucg_com_SetResetLineStatus>:
 800404c:	b580      	push	{r7, lr}
 800404e:	b082      	sub	sp, #8
 8004050:	af00      	add	r7, sp, #0
 8004052:	6078      	str	r0, [r7, #4]
 8004054:	460b      	mov	r3, r1
 8004056:	70fb      	strb	r3, [r7, #3]
 8004058:	78f9      	ldrb	r1, [r7, #3]
 800405a:	230d      	movs	r3, #13
 800405c:	2204      	movs	r2, #4
 800405e:	6878      	ldr	r0, [r7, #4]
 8004060:	f7ff ff83 	bl	8003f6a <ucg_com_SetLineStatus>
 8004064:	bf00      	nop
 8004066:	3708      	adds	r7, #8
 8004068:	46bd      	mov	sp, r7
 800406a:	bd80      	pop	{r7, pc}

0800406c <ucg_com_SetCSLineStatus>:
 800406c:	b580      	push	{r7, lr}
 800406e:	b082      	sub	sp, #8
 8004070:	af00      	add	r7, sp, #0
 8004072:	6078      	str	r0, [r7, #4]
 8004074:	460b      	mov	r3, r1
 8004076:	70fb      	strb	r3, [r7, #3]
 8004078:	78f9      	ldrb	r1, [r7, #3]
 800407a:	230e      	movs	r3, #14
 800407c:	2202      	movs	r2, #2
 800407e:	6878      	ldr	r0, [r7, #4]
 8004080:	f7ff ff73 	bl	8003f6a <ucg_com_SetLineStatus>
 8004084:	bf00      	nop
 8004086:	3708      	adds	r7, #8
 8004088:	46bd      	mov	sp, r7
 800408a:	bd80      	pop	{r7, pc}

0800408c <ucg_com_SetCDLineStatus>:
 800408c:	b580      	push	{r7, lr}
 800408e:	b082      	sub	sp, #8
 8004090:	af00      	add	r7, sp, #0
 8004092:	6078      	str	r0, [r7, #4]
 8004094:	460b      	mov	r3, r1
 8004096:	70fb      	strb	r3, [r7, #3]
 8004098:	78f9      	ldrb	r1, [r7, #3]
 800409a:	230f      	movs	r3, #15
 800409c:	2201      	movs	r2, #1
 800409e:	6878      	ldr	r0, [r7, #4]
 80040a0:	f7ff ff63 	bl	8003f6a <ucg_com_SetLineStatus>
 80040a4:	bf00      	nop
 80040a6:	3708      	adds	r7, #8
 80040a8:	46bd      	mov	sp, r7
 80040aa:	bd80      	pop	{r7, pc}

080040ac <ucg_com_DelayMicroseconds>:
 80040ac:	b590      	push	{r4, r7, lr}
 80040ae:	b083      	sub	sp, #12
 80040b0:	af00      	add	r7, sp, #0
 80040b2:	6078      	str	r0, [r7, #4]
 80040b4:	460b      	mov	r3, r1
 80040b6:	807b      	strh	r3, [r7, #2]
 80040b8:	687b      	ldr	r3, [r7, #4]
 80040ba:	69dc      	ldr	r4, [r3, #28]
 80040bc:	887a      	ldrh	r2, [r7, #2]
 80040be:	2300      	movs	r3, #0
 80040c0:	210c      	movs	r1, #12
 80040c2:	6878      	ldr	r0, [r7, #4]
 80040c4:	47a0      	blx	r4
 80040c6:	bf00      	nop
 80040c8:	370c      	adds	r7, #12
 80040ca:	46bd      	mov	sp, r7
 80040cc:	bd90      	pop	{r4, r7, pc}

080040ce <ucg_com_DelayMilliseconds>:
 80040ce:	b580      	push	{r7, lr}
 80040d0:	b082      	sub	sp, #8
 80040d2:	af00      	add	r7, sp, #0
 80040d4:	6078      	str	r0, [r7, #4]
 80040d6:	460b      	mov	r3, r1
 80040d8:	807b      	strh	r3, [r7, #2]
 80040da:	e007      	b.n	80040ec <ucg_com_DelayMilliseconds+0x1e>
 80040dc:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80040e0:	6878      	ldr	r0, [r7, #4]
 80040e2:	f7ff ffe3 	bl	80040ac <ucg_com_DelayMicroseconds>
 80040e6:	887b      	ldrh	r3, [r7, #2]
 80040e8:	3b01      	subs	r3, #1
 80040ea:	807b      	strh	r3, [r7, #2]
 80040ec:	887b      	ldrh	r3, [r7, #2]
 80040ee:	2b00      	cmp	r3, #0
 80040f0:	d1f4      	bne.n	80040dc <ucg_com_DelayMilliseconds+0xe>
 80040f2:	bf00      	nop
 80040f4:	3708      	adds	r7, #8
 80040f6:	46bd      	mov	sp, r7
 80040f8:	bd80      	pop	{r7, pc}

080040fa <ucg_com_SendByte>:
 80040fa:	b590      	push	{r4, r7, lr}
 80040fc:	b083      	sub	sp, #12
 80040fe:	af00      	add	r7, sp, #0
 8004100:	6078      	str	r0, [r7, #4]
 8004102:	460b      	mov	r3, r1
 8004104:	70fb      	strb	r3, [r7, #3]
 8004106:	687b      	ldr	r3, [r7, #4]
 8004108:	69dc      	ldr	r4, [r3, #28]
 800410a:	78fb      	ldrb	r3, [r7, #3]
 800410c:	b29a      	uxth	r2, r3
 800410e:	2300      	movs	r3, #0
 8004110:	2110      	movs	r1, #16
 8004112:	6878      	ldr	r0, [r7, #4]
 8004114:	47a0      	blx	r4
 8004116:	bf00      	nop
 8004118:	370c      	adds	r7, #12
 800411a:	46bd      	mov	sp, r7
 800411c:	bd90      	pop	{r4, r7, pc}

0800411e <ucg_com_SendStringP>:
 800411e:	b590      	push	{r4, r7, lr}
 8004120:	b087      	sub	sp, #28
 8004122:	af00      	add	r7, sp, #0
 8004124:	60f8      	str	r0, [r7, #12]
 8004126:	460b      	mov	r3, r1
 8004128:	607a      	str	r2, [r7, #4]
 800412a:	817b      	strh	r3, [r7, #10]
 800412c:	e010      	b.n	8004150 <ucg_com_SendStringP+0x32>
 800412e:	687b      	ldr	r3, [r7, #4]
 8004130:	781b      	ldrb	r3, [r3, #0]
 8004132:	75fb      	strb	r3, [r7, #23]
 8004134:	68fb      	ldr	r3, [r7, #12]
 8004136:	69dc      	ldr	r4, [r3, #28]
 8004138:	7dfb      	ldrb	r3, [r7, #23]
 800413a:	b29a      	uxth	r2, r3
 800413c:	2300      	movs	r3, #0
 800413e:	2110      	movs	r1, #16
 8004140:	68f8      	ldr	r0, [r7, #12]
 8004142:	47a0      	blx	r4
 8004144:	687b      	ldr	r3, [r7, #4]
 8004146:	3301      	adds	r3, #1
 8004148:	607b      	str	r3, [r7, #4]
 800414a:	897b      	ldrh	r3, [r7, #10]
 800414c:	3b01      	subs	r3, #1
 800414e:	817b      	strh	r3, [r7, #10]
 8004150:	897b      	ldrh	r3, [r7, #10]
 8004152:	2b00      	cmp	r3, #0
 8004154:	d1eb      	bne.n	800412e <ucg_com_SendStringP+0x10>
 8004156:	bf00      	nop
 8004158:	371c      	adds	r7, #28
 800415a:	46bd      	mov	sp, r7
 800415c:	bd90      	pop	{r4, r7, pc}

0800415e <ucg_com_SendCmdArg>:
 800415e:	b580      	push	{r7, lr}
 8004160:	b084      	sub	sp, #16
 8004162:	af00      	add	r7, sp, #0
 8004164:	60f8      	str	r0, [r7, #12]
 8004166:	60b9      	str	r1, [r7, #8]
 8004168:	4611      	mov	r1, r2
 800416a:	461a      	mov	r2, r3
 800416c:	460b      	mov	r3, r1
 800416e:	71fb      	strb	r3, [r7, #7]
 8004170:	4613      	mov	r3, r2
 8004172:	71bb      	strb	r3, [r7, #6]
 8004174:	68fb      	ldr	r3, [r7, #12]
 8004176:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 800417a:	085b      	lsrs	r3, r3, #1
 800417c:	b2db      	uxtb	r3, r3
 800417e:	f003 0301 	and.w	r3, r3, #1
 8004182:	b2db      	uxtb	r3, r3
 8004184:	4619      	mov	r1, r3
 8004186:	68f8      	ldr	r0, [r7, #12]
 8004188:	f7ff ff80 	bl	800408c <ucg_com_SetCDLineStatus>
 800418c:	79fb      	ldrb	r3, [r7, #7]
 800418e:	b29b      	uxth	r3, r3
 8004190:	68ba      	ldr	r2, [r7, #8]
 8004192:	4619      	mov	r1, r3
 8004194:	68f8      	ldr	r0, [r7, #12]
 8004196:	f7ff ffc2 	bl	800411e <ucg_com_SendStringP>
 800419a:	79bb      	ldrb	r3, [r7, #6]
 800419c:	2b00      	cmp	r3, #0
 800419e:	d014      	beq.n	80041ca <ucg_com_SendCmdArg+0x6c>
 80041a0:	79fb      	ldrb	r3, [r7, #7]
 80041a2:	68ba      	ldr	r2, [r7, #8]
 80041a4:	4413      	add	r3, r2
 80041a6:	60bb      	str	r3, [r7, #8]
 80041a8:	68fb      	ldr	r3, [r7, #12]
 80041aa:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 80041ae:	f003 0301 	and.w	r3, r3, #1
 80041b2:	b2db      	uxtb	r3, r3
 80041b4:	4619      	mov	r1, r3
 80041b6:	68f8      	ldr	r0, [r7, #12]
 80041b8:	f7ff ff68 	bl	800408c <ucg_com_SetCDLineStatus>
 80041bc:	79bb      	ldrb	r3, [r7, #6]
 80041be:	b29b      	uxth	r3, r3
 80041c0:	68ba      	ldr	r2, [r7, #8]
 80041c2:	4619      	mov	r1, r3
 80041c4:	68f8      	ldr	r0, [r7, #12]
 80041c6:	f7ff ffaa 	bl	800411e <ucg_com_SendStringP>
 80041ca:	bf00      	nop
 80041cc:	3710      	adds	r7, #16
 80041ce:	46bd      	mov	sp, r7
 80041d0:	bd80      	pop	{r7, pc}
	...

080041d4 <ucg_com_SendCmdSeq>:
 80041d4:	b580      	push	{r7, lr}
 80041d6:	b084      	sub	sp, #16
 80041d8:	af00      	add	r7, sp, #0
 80041da:	6078      	str	r0, [r7, #4]
 80041dc:	6039      	str	r1, [r7, #0]
 80041de:	683b      	ldr	r3, [r7, #0]
 80041e0:	781b      	ldrb	r3, [r3, #0]
 80041e2:	73fb      	strb	r3, [r7, #15]
 80041e4:	7bfb      	ldrb	r3, [r7, #15]
 80041e6:	091b      	lsrs	r3, r3, #4
 80041e8:	73bb      	strb	r3, [r7, #14]
 80041ea:	7bfb      	ldrb	r3, [r7, #15]
 80041ec:	f003 030f 	and.w	r3, r3, #15
 80041f0:	737b      	strb	r3, [r7, #13]
 80041f2:	7bbb      	ldrb	r3, [r7, #14]
 80041f4:	2b0f      	cmp	r3, #15
 80041f6:	f200 8124 	bhi.w	8004442 <ucg_com_SendCmdSeq+0x26e>
 80041fa:	a201      	add	r2, pc, #4	; (adr r2, 8004200 <ucg_com_SendCmdSeq+0x2c>)
 80041fc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004200:	08004443 	.word	0x08004443
 8004204:	08004241 	.word	0x08004241
 8004208:	08004241 	.word	0x08004241
 800420c:	08004241 	.word	0x08004241
 8004210:	08004443 	.word	0x08004443
 8004214:	08004443 	.word	0x08004443
 8004218:	08004261 	.word	0x08004261
 800421c:	08004293 	.word	0x08004293
 8004220:	080042d7 	.word	0x080042d7
 8004224:	08004303 	.word	0x08004303
 8004228:	0800432f 	.word	0x0800432f
 800422c:	0800438f 	.word	0x0800438f
 8004230:	08004443 	.word	0x08004443
 8004234:	08004443 	.word	0x08004443
 8004238:	08004443 	.word	0x08004443
 800423c:	080043ef 	.word	0x080043ef
 8004240:	683b      	ldr	r3, [r7, #0]
 8004242:	1c59      	adds	r1, r3, #1
 8004244:	7b7b      	ldrb	r3, [r7, #13]
 8004246:	7bba      	ldrb	r2, [r7, #14]
 8004248:	6878      	ldr	r0, [r7, #4]
 800424a:	f7ff ff88 	bl	800415e <ucg_com_SendCmdArg>
 800424e:	7bbb      	ldrb	r3, [r7, #14]
 8004250:	1c5a      	adds	r2, r3, #1
 8004252:	7b7b      	ldrb	r3, [r7, #13]
 8004254:	4413      	add	r3, r2
 8004256:	461a      	mov	r2, r3
 8004258:	683b      	ldr	r3, [r7, #0]
 800425a:	4413      	add	r3, r2
 800425c:	603b      	str	r3, [r7, #0]
 800425e:	e0ef      	b.n	8004440 <ucg_com_SendCmdSeq+0x26c>
 8004260:	687b      	ldr	r3, [r7, #4]
 8004262:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8004266:	f003 0301 	and.w	r3, r3, #1
 800426a:	b2db      	uxtb	r3, r3
 800426c:	4619      	mov	r1, r3
 800426e:	6878      	ldr	r0, [r7, #4]
 8004270:	f7ff ff0c 	bl	800408c <ucg_com_SetCDLineStatus>
 8004274:	7b7b      	ldrb	r3, [r7, #13]
 8004276:	b299      	uxth	r1, r3
 8004278:	683b      	ldr	r3, [r7, #0]
 800427a:	3301      	adds	r3, #1
 800427c:	461a      	mov	r2, r3
 800427e:	6878      	ldr	r0, [r7, #4]
 8004280:	f7ff ff4d 	bl	800411e <ucg_com_SendStringP>
 8004284:	7b7b      	ldrb	r3, [r7, #13]
 8004286:	3301      	adds	r3, #1
 8004288:	461a      	mov	r2, r3
 800428a:	683b      	ldr	r3, [r7, #0]
 800428c:	4413      	add	r3, r2
 800428e:	603b      	str	r3, [r7, #0]
 8004290:	e0d6      	b.n	8004440 <ucg_com_SendCmdSeq+0x26c>
 8004292:	687b      	ldr	r3, [r7, #4]
 8004294:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8004298:	085b      	lsrs	r3, r3, #1
 800429a:	b2db      	uxtb	r3, r3
 800429c:	f003 0301 	and.w	r3, r3, #1
 80042a0:	2b00      	cmp	r3, #0
 80042a2:	bf0c      	ite	eq
 80042a4:	2301      	moveq	r3, #1
 80042a6:	2300      	movne	r3, #0
 80042a8:	b2db      	uxtb	r3, r3
 80042aa:	4619      	mov	r1, r3
 80042ac:	6878      	ldr	r0, [r7, #4]
 80042ae:	f7ff feed 	bl	800408c <ucg_com_SetCDLineStatus>
 80042b2:	7b7b      	ldrb	r3, [r7, #13]
 80042b4:	2b00      	cmp	r3, #0
 80042b6:	d007      	beq.n	80042c8 <ucg_com_SendCmdSeq+0xf4>
 80042b8:	7b7b      	ldrb	r3, [r7, #13]
 80042ba:	b299      	uxth	r1, r3
 80042bc:	683b      	ldr	r3, [r7, #0]
 80042be:	3301      	adds	r3, #1
 80042c0:	461a      	mov	r2, r3
 80042c2:	6878      	ldr	r0, [r7, #4]
 80042c4:	f7ff ff2b 	bl	800411e <ucg_com_SendStringP>
 80042c8:	7b7b      	ldrb	r3, [r7, #13]
 80042ca:	3301      	adds	r3, #1
 80042cc:	461a      	mov	r2, r3
 80042ce:	683b      	ldr	r3, [r7, #0]
 80042d0:	4413      	add	r3, r2
 80042d2:	603b      	str	r3, [r7, #0]
 80042d4:	e0b4      	b.n	8004440 <ucg_com_SendCmdSeq+0x26c>
 80042d6:	683b      	ldr	r3, [r7, #0]
 80042d8:	3301      	adds	r3, #1
 80042da:	603b      	str	r3, [r7, #0]
 80042dc:	683b      	ldr	r3, [r7, #0]
 80042de:	781b      	ldrb	r3, [r3, #0]
 80042e0:	73fb      	strb	r3, [r7, #15]
 80042e2:	7b7b      	ldrb	r3, [r7, #13]
 80042e4:	b29b      	uxth	r3, r3
 80042e6:	021b      	lsls	r3, r3, #8
 80042e8:	b29a      	uxth	r2, r3
 80042ea:	7bfb      	ldrb	r3, [r7, #15]
 80042ec:	b29b      	uxth	r3, r3
 80042ee:	4413      	add	r3, r2
 80042f0:	b29b      	uxth	r3, r3
 80042f2:	4619      	mov	r1, r3
 80042f4:	6878      	ldr	r0, [r7, #4]
 80042f6:	f7ff feea 	bl	80040ce <ucg_com_DelayMilliseconds>
 80042fa:	683b      	ldr	r3, [r7, #0]
 80042fc:	3301      	adds	r3, #1
 80042fe:	603b      	str	r3, [r7, #0]
 8004300:	e09e      	b.n	8004440 <ucg_com_SendCmdSeq+0x26c>
 8004302:	683b      	ldr	r3, [r7, #0]
 8004304:	3301      	adds	r3, #1
 8004306:	603b      	str	r3, [r7, #0]
 8004308:	683b      	ldr	r3, [r7, #0]
 800430a:	781b      	ldrb	r3, [r3, #0]
 800430c:	73fb      	strb	r3, [r7, #15]
 800430e:	7b7b      	ldrb	r3, [r7, #13]
 8004310:	b29b      	uxth	r3, r3
 8004312:	021b      	lsls	r3, r3, #8
 8004314:	b29a      	uxth	r2, r3
 8004316:	7bfb      	ldrb	r3, [r7, #15]
 8004318:	b29b      	uxth	r3, r3
 800431a:	4413      	add	r3, r2
 800431c:	b29b      	uxth	r3, r3
 800431e:	4619      	mov	r1, r3
 8004320:	6878      	ldr	r0, [r7, #4]
 8004322:	f7ff fec3 	bl	80040ac <ucg_com_DelayMicroseconds>
 8004326:	683b      	ldr	r3, [r7, #0]
 8004328:	3301      	adds	r3, #1
 800432a:	603b      	str	r3, [r7, #0]
 800432c:	e088      	b.n	8004440 <ucg_com_SendCmdSeq+0x26c>
 800432e:	683b      	ldr	r3, [r7, #0]
 8004330:	3301      	adds	r3, #1
 8004332:	603b      	str	r3, [r7, #0]
 8004334:	683b      	ldr	r3, [r7, #0]
 8004336:	781b      	ldrb	r3, [r3, #0]
 8004338:	73fb      	strb	r3, [r7, #15]
 800433a:	683b      	ldr	r3, [r7, #0]
 800433c:	3301      	adds	r3, #1
 800433e:	603b      	str	r3, [r7, #0]
 8004340:	683b      	ldr	r3, [r7, #0]
 8004342:	781b      	ldrb	r3, [r3, #0]
 8004344:	733b      	strb	r3, [r7, #12]
 8004346:	683b      	ldr	r3, [r7, #0]
 8004348:	3301      	adds	r3, #1
 800434a:	603b      	str	r3, [r7, #0]
 800434c:	687b      	ldr	r3, [r7, #4]
 800434e:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8004352:	f003 0301 	and.w	r3, r3, #1
 8004356:	b2db      	uxtb	r3, r3
 8004358:	4619      	mov	r1, r3
 800435a:	6878      	ldr	r0, [r7, #4]
 800435c:	f7ff fe96 	bl	800408c <ucg_com_SetCDLineStatus>
 8004360:	687b      	ldr	r3, [r7, #4]
 8004362:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8004366:	461a      	mov	r2, r3
 8004368:	687b      	ldr	r3, [r7, #4]
 800436a:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
 800436e:	441a      	add	r2, r3
 8004370:	7b7b      	ldrb	r3, [r7, #13]
 8004372:	fa42 f303 	asr.w	r3, r2, r3
 8004376:	b2da      	uxtb	r2, r3
 8004378:	7bfb      	ldrb	r3, [r7, #15]
 800437a:	4013      	ands	r3, r2
 800437c:	b2da      	uxtb	r2, r3
 800437e:	7b3b      	ldrb	r3, [r7, #12]
 8004380:	4313      	orrs	r3, r2
 8004382:	b2db      	uxtb	r3, r3
 8004384:	4619      	mov	r1, r3
 8004386:	6878      	ldr	r0, [r7, #4]
 8004388:	f7ff feb7 	bl	80040fa <ucg_com_SendByte>
 800438c:	e058      	b.n	8004440 <ucg_com_SendCmdSeq+0x26c>
 800438e:	683b      	ldr	r3, [r7, #0]
 8004390:	3301      	adds	r3, #1
 8004392:	603b      	str	r3, [r7, #0]
 8004394:	683b      	ldr	r3, [r7, #0]
 8004396:	781b      	ldrb	r3, [r3, #0]
 8004398:	73fb      	strb	r3, [r7, #15]
 800439a:	683b      	ldr	r3, [r7, #0]
 800439c:	3301      	adds	r3, #1
 800439e:	603b      	str	r3, [r7, #0]
 80043a0:	683b      	ldr	r3, [r7, #0]
 80043a2:	781b      	ldrb	r3, [r3, #0]
 80043a4:	733b      	strb	r3, [r7, #12]
 80043a6:	683b      	ldr	r3, [r7, #0]
 80043a8:	3301      	adds	r3, #1
 80043aa:	603b      	str	r3, [r7, #0]
 80043ac:	687b      	ldr	r3, [r7, #4]
 80043ae:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 80043b2:	f003 0301 	and.w	r3, r3, #1
 80043b6:	b2db      	uxtb	r3, r3
 80043b8:	4619      	mov	r1, r3
 80043ba:	6878      	ldr	r0, [r7, #4]
 80043bc:	f7ff fe66 	bl	800408c <ucg_com_SetCDLineStatus>
 80043c0:	687b      	ldr	r3, [r7, #4]
 80043c2:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 80043c6:	461a      	mov	r2, r3
 80043c8:	687b      	ldr	r3, [r7, #4]
 80043ca:	f9b3 3022 	ldrsh.w	r3, [r3, #34]	; 0x22
 80043ce:	441a      	add	r2, r3
 80043d0:	7b7b      	ldrb	r3, [r7, #13]
 80043d2:	fa42 f303 	asr.w	r3, r2, r3
 80043d6:	b2da      	uxtb	r2, r3
 80043d8:	7bfb      	ldrb	r3, [r7, #15]
 80043da:	4013      	ands	r3, r2
 80043dc:	b2da      	uxtb	r2, r3
 80043de:	7b3b      	ldrb	r3, [r7, #12]
 80043e0:	4313      	orrs	r3, r2
 80043e2:	b2db      	uxtb	r3, r3
 80043e4:	4619      	mov	r1, r3
 80043e6:	6878      	ldr	r0, [r7, #4]
 80043e8:	f7ff fe87 	bl	80040fa <ucg_com_SendByte>
 80043ec:	e028      	b.n	8004440 <ucg_com_SendCmdSeq+0x26c>
 80043ee:	7b7b      	ldrb	r3, [r7, #13]
 80043f0:	089b      	lsrs	r3, r3, #2
 80043f2:	73bb      	strb	r3, [r7, #14]
 80043f4:	7b7b      	ldrb	r3, [r7, #13]
 80043f6:	f003 0303 	and.w	r3, r3, #3
 80043fa:	737b      	strb	r3, [r7, #13]
 80043fc:	7bbb      	ldrb	r3, [r7, #14]
 80043fe:	2b01      	cmp	r3, #1
 8004400:	d00c      	beq.n	800441c <ucg_com_SendCmdSeq+0x248>
 8004402:	2b03      	cmp	r3, #3
 8004404:	d013      	beq.n	800442e <ucg_com_SendCmdSeq+0x25a>
 8004406:	2b00      	cmp	r3, #0
 8004408:	d116      	bne.n	8004438 <ucg_com_SendCmdSeq+0x264>
 800440a:	7b7b      	ldrb	r3, [r7, #13]
 800440c:	f003 0301 	and.w	r3, r3, #1
 8004410:	b2db      	uxtb	r3, r3
 8004412:	4619      	mov	r1, r3
 8004414:	6878      	ldr	r0, [r7, #4]
 8004416:	f7ff fe19 	bl	800404c <ucg_com_SetResetLineStatus>
 800441a:	e00d      	b.n	8004438 <ucg_com_SendCmdSeq+0x264>
 800441c:	7b7b      	ldrb	r3, [r7, #13]
 800441e:	f003 0301 	and.w	r3, r3, #1
 8004422:	b2db      	uxtb	r3, r3
 8004424:	4619      	mov	r1, r3
 8004426:	6878      	ldr	r0, [r7, #4]
 8004428:	f7ff fe20 	bl	800406c <ucg_com_SetCSLineStatus>
 800442c:	e004      	b.n	8004438 <ucg_com_SendCmdSeq+0x264>
 800442e:	687b      	ldr	r3, [r7, #4]
 8004430:	7b7a      	ldrb	r2, [r7, #13]
 8004432:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
 8004436:	bf00      	nop
 8004438:	683b      	ldr	r3, [r7, #0]
 800443a:	3301      	adds	r3, #1
 800443c:	603b      	str	r3, [r7, #0]
 800443e:	bf00      	nop
 8004440:	e6cd      	b.n	80041de <ucg_com_SendCmdSeq+0xa>
 8004442:	bf00      	nop
 8004444:	3710      	adds	r7, #16
 8004446:	46bd      	mov	sp, r7
 8004448:	bd80      	pop	{r7, pc}
 800444a:	bf00      	nop

0800444c <siprintf>:
 800444c:	b40e      	push	{r1, r2, r3}
 800444e:	b500      	push	{lr}
 8004450:	b09c      	sub	sp, #112	; 0x70
 8004452:	ab1d      	add	r3, sp, #116	; 0x74
 8004454:	9002      	str	r0, [sp, #8]
 8004456:	9006      	str	r0, [sp, #24]
 8004458:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800445c:	4809      	ldr	r0, [pc, #36]	; (8004484 <siprintf+0x38>)
 800445e:	9107      	str	r1, [sp, #28]
 8004460:	9104      	str	r1, [sp, #16]
 8004462:	4909      	ldr	r1, [pc, #36]	; (8004488 <siprintf+0x3c>)
 8004464:	f853 2b04 	ldr.w	r2, [r3], #4
 8004468:	9105      	str	r1, [sp, #20]
 800446a:	6800      	ldr	r0, [r0, #0]
 800446c:	9301      	str	r3, [sp, #4]
 800446e:	a902      	add	r1, sp, #8
 8004470:	f000 f992 	bl	8004798 <_svfiprintf_r>
 8004474:	9b02      	ldr	r3, [sp, #8]
 8004476:	2200      	movs	r2, #0
 8004478:	701a      	strb	r2, [r3, #0]
 800447a:	b01c      	add	sp, #112	; 0x70
 800447c:	f85d eb04 	ldr.w	lr, [sp], #4
 8004480:	b003      	add	sp, #12
 8004482:	4770      	bx	lr
 8004484:	20000074 	.word	0x20000074
 8004488:	ffff0208 	.word	0xffff0208

0800448c <memset>:
 800448c:	4402      	add	r2, r0
 800448e:	4603      	mov	r3, r0
 8004490:	4293      	cmp	r3, r2
 8004492:	d100      	bne.n	8004496 <memset+0xa>
 8004494:	4770      	bx	lr
 8004496:	f803 1b01 	strb.w	r1, [r3], #1
 800449a:	e7f9      	b.n	8004490 <memset+0x4>

0800449c <__errno>:
 800449c:	4b01      	ldr	r3, [pc, #4]	; (80044a4 <__errno+0x8>)
 800449e:	6818      	ldr	r0, [r3, #0]
 80044a0:	4770      	bx	lr
 80044a2:	bf00      	nop
 80044a4:	20000074 	.word	0x20000074

080044a8 <__libc_init_array>:
 80044a8:	b570      	push	{r4, r5, r6, lr}
 80044aa:	4d0d      	ldr	r5, [pc, #52]	; (80044e0 <__libc_init_array+0x38>)
 80044ac:	4c0d      	ldr	r4, [pc, #52]	; (80044e4 <__libc_init_array+0x3c>)
 80044ae:	1b64      	subs	r4, r4, r5
 80044b0:	10a4      	asrs	r4, r4, #2
 80044b2:	2600      	movs	r6, #0
 80044b4:	42a6      	cmp	r6, r4
 80044b6:	d109      	bne.n	80044cc <__libc_init_array+0x24>
 80044b8:	4d0b      	ldr	r5, [pc, #44]	; (80044e8 <__libc_init_array+0x40>)
 80044ba:	4c0c      	ldr	r4, [pc, #48]	; (80044ec <__libc_init_array+0x44>)
 80044bc:	f000 fc6a 	bl	8004d94 <_init>
 80044c0:	1b64      	subs	r4, r4, r5
 80044c2:	10a4      	asrs	r4, r4, #2
 80044c4:	2600      	movs	r6, #0
 80044c6:	42a6      	cmp	r6, r4
 80044c8:	d105      	bne.n	80044d6 <__libc_init_array+0x2e>
 80044ca:	bd70      	pop	{r4, r5, r6, pc}
 80044cc:	f855 3b04 	ldr.w	r3, [r5], #4
 80044d0:	4798      	blx	r3
 80044d2:	3601      	adds	r6, #1
 80044d4:	e7ee      	b.n	80044b4 <__libc_init_array+0xc>
 80044d6:	f855 3b04 	ldr.w	r3, [r5], #4
 80044da:	4798      	blx	r3
 80044dc:	3601      	adds	r6, #1
 80044de:	e7f2      	b.n	80044c6 <__libc_init_array+0x1e>
 80044e0:	080056b4 	.word	0x080056b4
 80044e4:	080056b4 	.word	0x080056b4
 80044e8:	080056b4 	.word	0x080056b4
 80044ec:	080056b8 	.word	0x080056b8

080044f0 <__retarget_lock_acquire_recursive>:
 80044f0:	4770      	bx	lr

080044f2 <__retarget_lock_release_recursive>:
 80044f2:	4770      	bx	lr

080044f4 <_free_r>:
 80044f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80044f6:	2900      	cmp	r1, #0
 80044f8:	d044      	beq.n	8004584 <_free_r+0x90>
 80044fa:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80044fe:	9001      	str	r0, [sp, #4]
 8004500:	2b00      	cmp	r3, #0
 8004502:	f1a1 0404 	sub.w	r4, r1, #4
 8004506:	bfb8      	it	lt
 8004508:	18e4      	addlt	r4, r4, r3
 800450a:	f000 f8df 	bl	80046cc <__malloc_lock>
 800450e:	4a1e      	ldr	r2, [pc, #120]	; (8004588 <_free_r+0x94>)
 8004510:	9801      	ldr	r0, [sp, #4]
 8004512:	6813      	ldr	r3, [r2, #0]
 8004514:	b933      	cbnz	r3, 8004524 <_free_r+0x30>
 8004516:	6063      	str	r3, [r4, #4]
 8004518:	6014      	str	r4, [r2, #0]
 800451a:	b003      	add	sp, #12
 800451c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8004520:	f000 b8da 	b.w	80046d8 <__malloc_unlock>
 8004524:	42a3      	cmp	r3, r4
 8004526:	d908      	bls.n	800453a <_free_r+0x46>
 8004528:	6825      	ldr	r5, [r4, #0]
 800452a:	1961      	adds	r1, r4, r5
 800452c:	428b      	cmp	r3, r1
 800452e:	bf01      	itttt	eq
 8004530:	6819      	ldreq	r1, [r3, #0]
 8004532:	685b      	ldreq	r3, [r3, #4]
 8004534:	1949      	addeq	r1, r1, r5
 8004536:	6021      	streq	r1, [r4, #0]
 8004538:	e7ed      	b.n	8004516 <_free_r+0x22>
 800453a:	461a      	mov	r2, r3
 800453c:	685b      	ldr	r3, [r3, #4]
 800453e:	b10b      	cbz	r3, 8004544 <_free_r+0x50>
 8004540:	42a3      	cmp	r3, r4
 8004542:	d9fa      	bls.n	800453a <_free_r+0x46>
 8004544:	6811      	ldr	r1, [r2, #0]
 8004546:	1855      	adds	r5, r2, r1
 8004548:	42a5      	cmp	r5, r4
 800454a:	d10b      	bne.n	8004564 <_free_r+0x70>
 800454c:	6824      	ldr	r4, [r4, #0]
 800454e:	4421      	add	r1, r4
 8004550:	1854      	adds	r4, r2, r1
 8004552:	42a3      	cmp	r3, r4
 8004554:	6011      	str	r1, [r2, #0]
 8004556:	d1e0      	bne.n	800451a <_free_r+0x26>
 8004558:	681c      	ldr	r4, [r3, #0]
 800455a:	685b      	ldr	r3, [r3, #4]
 800455c:	6053      	str	r3, [r2, #4]
 800455e:	440c      	add	r4, r1
 8004560:	6014      	str	r4, [r2, #0]
 8004562:	e7da      	b.n	800451a <_free_r+0x26>
 8004564:	d902      	bls.n	800456c <_free_r+0x78>
 8004566:	230c      	movs	r3, #12
 8004568:	6003      	str	r3, [r0, #0]
 800456a:	e7d6      	b.n	800451a <_free_r+0x26>
 800456c:	6825      	ldr	r5, [r4, #0]
 800456e:	1961      	adds	r1, r4, r5
 8004570:	428b      	cmp	r3, r1
 8004572:	bf04      	itt	eq
 8004574:	6819      	ldreq	r1, [r3, #0]
 8004576:	685b      	ldreq	r3, [r3, #4]
 8004578:	6063      	str	r3, [r4, #4]
 800457a:	bf04      	itt	eq
 800457c:	1949      	addeq	r1, r1, r5
 800457e:	6021      	streq	r1, [r4, #0]
 8004580:	6054      	str	r4, [r2, #4]
 8004582:	e7ca      	b.n	800451a <_free_r+0x26>
 8004584:	b003      	add	sp, #12
 8004586:	bd30      	pop	{r4, r5, pc}
 8004588:	20001490 	.word	0x20001490

0800458c <sbrk_aligned>:
 800458c:	b570      	push	{r4, r5, r6, lr}
 800458e:	4e0e      	ldr	r6, [pc, #56]	; (80045c8 <sbrk_aligned+0x3c>)
 8004590:	460c      	mov	r4, r1
 8004592:	6831      	ldr	r1, [r6, #0]
 8004594:	4605      	mov	r5, r0
 8004596:	b911      	cbnz	r1, 800459e <sbrk_aligned+0x12>
 8004598:	f000 fba6 	bl	8004ce8 <_sbrk_r>
 800459c:	6030      	str	r0, [r6, #0]
 800459e:	4621      	mov	r1, r4
 80045a0:	4628      	mov	r0, r5
 80045a2:	f000 fba1 	bl	8004ce8 <_sbrk_r>
 80045a6:	1c43      	adds	r3, r0, #1
 80045a8:	d00a      	beq.n	80045c0 <sbrk_aligned+0x34>
 80045aa:	1cc4      	adds	r4, r0, #3
 80045ac:	f024 0403 	bic.w	r4, r4, #3
 80045b0:	42a0      	cmp	r0, r4
 80045b2:	d007      	beq.n	80045c4 <sbrk_aligned+0x38>
 80045b4:	1a21      	subs	r1, r4, r0
 80045b6:	4628      	mov	r0, r5
 80045b8:	f000 fb96 	bl	8004ce8 <_sbrk_r>
 80045bc:	3001      	adds	r0, #1
 80045be:	d101      	bne.n	80045c4 <sbrk_aligned+0x38>
 80045c0:	f04f 34ff 	mov.w	r4, #4294967295
 80045c4:	4620      	mov	r0, r4
 80045c6:	bd70      	pop	{r4, r5, r6, pc}
 80045c8:	20001494 	.word	0x20001494

080045cc <_malloc_r>:
 80045cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80045d0:	1ccd      	adds	r5, r1, #3
 80045d2:	f025 0503 	bic.w	r5, r5, #3
 80045d6:	3508      	adds	r5, #8
 80045d8:	2d0c      	cmp	r5, #12
 80045da:	bf38      	it	cc
 80045dc:	250c      	movcc	r5, #12
 80045de:	2d00      	cmp	r5, #0
 80045e0:	4607      	mov	r7, r0
 80045e2:	db01      	blt.n	80045e8 <_malloc_r+0x1c>
 80045e4:	42a9      	cmp	r1, r5
 80045e6:	d905      	bls.n	80045f4 <_malloc_r+0x28>
 80045e8:	230c      	movs	r3, #12
 80045ea:	603b      	str	r3, [r7, #0]
 80045ec:	2600      	movs	r6, #0
 80045ee:	4630      	mov	r0, r6
 80045f0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80045f4:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80046c8 <_malloc_r+0xfc>
 80045f8:	f000 f868 	bl	80046cc <__malloc_lock>
 80045fc:	f8d8 3000 	ldr.w	r3, [r8]
 8004600:	461c      	mov	r4, r3
 8004602:	bb5c      	cbnz	r4, 800465c <_malloc_r+0x90>
 8004604:	4629      	mov	r1, r5
 8004606:	4638      	mov	r0, r7
 8004608:	f7ff ffc0 	bl	800458c <sbrk_aligned>
 800460c:	1c43      	adds	r3, r0, #1
 800460e:	4604      	mov	r4, r0
 8004610:	d155      	bne.n	80046be <_malloc_r+0xf2>
 8004612:	f8d8 4000 	ldr.w	r4, [r8]
 8004616:	4626      	mov	r6, r4
 8004618:	2e00      	cmp	r6, #0
 800461a:	d145      	bne.n	80046a8 <_malloc_r+0xdc>
 800461c:	2c00      	cmp	r4, #0
 800461e:	d048      	beq.n	80046b2 <_malloc_r+0xe6>
 8004620:	6823      	ldr	r3, [r4, #0]
 8004622:	4631      	mov	r1, r6
 8004624:	4638      	mov	r0, r7
 8004626:	eb04 0903 	add.w	r9, r4, r3
 800462a:	f000 fb5d 	bl	8004ce8 <_sbrk_r>
 800462e:	4581      	cmp	r9, r0
 8004630:	d13f      	bne.n	80046b2 <_malloc_r+0xe6>
 8004632:	6821      	ldr	r1, [r4, #0]
 8004634:	1a6d      	subs	r5, r5, r1
 8004636:	4629      	mov	r1, r5
 8004638:	4638      	mov	r0, r7
 800463a:	f7ff ffa7 	bl	800458c <sbrk_aligned>
 800463e:	3001      	adds	r0, #1
 8004640:	d037      	beq.n	80046b2 <_malloc_r+0xe6>
 8004642:	6823      	ldr	r3, [r4, #0]
 8004644:	442b      	add	r3, r5
 8004646:	6023      	str	r3, [r4, #0]
 8004648:	f8d8 3000 	ldr.w	r3, [r8]
 800464c:	2b00      	cmp	r3, #0
 800464e:	d038      	beq.n	80046c2 <_malloc_r+0xf6>
 8004650:	685a      	ldr	r2, [r3, #4]
 8004652:	42a2      	cmp	r2, r4
 8004654:	d12b      	bne.n	80046ae <_malloc_r+0xe2>
 8004656:	2200      	movs	r2, #0
 8004658:	605a      	str	r2, [r3, #4]
 800465a:	e00f      	b.n	800467c <_malloc_r+0xb0>
 800465c:	6822      	ldr	r2, [r4, #0]
 800465e:	1b52      	subs	r2, r2, r5
 8004660:	d41f      	bmi.n	80046a2 <_malloc_r+0xd6>
 8004662:	2a0b      	cmp	r2, #11
 8004664:	d917      	bls.n	8004696 <_malloc_r+0xca>
 8004666:	1961      	adds	r1, r4, r5
 8004668:	42a3      	cmp	r3, r4
 800466a:	6025      	str	r5, [r4, #0]
 800466c:	bf18      	it	ne
 800466e:	6059      	strne	r1, [r3, #4]
 8004670:	6863      	ldr	r3, [r4, #4]
 8004672:	bf08      	it	eq
 8004674:	f8c8 1000 	streq.w	r1, [r8]
 8004678:	5162      	str	r2, [r4, r5]
 800467a:	604b      	str	r3, [r1, #4]
 800467c:	4638      	mov	r0, r7
 800467e:	f104 060b 	add.w	r6, r4, #11
 8004682:	f000 f829 	bl	80046d8 <__malloc_unlock>
 8004686:	f026 0607 	bic.w	r6, r6, #7
 800468a:	1d23      	adds	r3, r4, #4
 800468c:	1af2      	subs	r2, r6, r3
 800468e:	d0ae      	beq.n	80045ee <_malloc_r+0x22>
 8004690:	1b9b      	subs	r3, r3, r6
 8004692:	50a3      	str	r3, [r4, r2]
 8004694:	e7ab      	b.n	80045ee <_malloc_r+0x22>
 8004696:	42a3      	cmp	r3, r4
 8004698:	6862      	ldr	r2, [r4, #4]
 800469a:	d1dd      	bne.n	8004658 <_malloc_r+0x8c>
 800469c:	f8c8 2000 	str.w	r2, [r8]
 80046a0:	e7ec      	b.n	800467c <_malloc_r+0xb0>
 80046a2:	4623      	mov	r3, r4
 80046a4:	6864      	ldr	r4, [r4, #4]
 80046a6:	e7ac      	b.n	8004602 <_malloc_r+0x36>
 80046a8:	4634      	mov	r4, r6
 80046aa:	6876      	ldr	r6, [r6, #4]
 80046ac:	e7b4      	b.n	8004618 <_malloc_r+0x4c>
 80046ae:	4613      	mov	r3, r2
 80046b0:	e7cc      	b.n	800464c <_malloc_r+0x80>
 80046b2:	230c      	movs	r3, #12
 80046b4:	603b      	str	r3, [r7, #0]
 80046b6:	4638      	mov	r0, r7
 80046b8:	f000 f80e 	bl	80046d8 <__malloc_unlock>
 80046bc:	e797      	b.n	80045ee <_malloc_r+0x22>
 80046be:	6025      	str	r5, [r4, #0]
 80046c0:	e7dc      	b.n	800467c <_malloc_r+0xb0>
 80046c2:	605b      	str	r3, [r3, #4]
 80046c4:	deff      	udf	#255	; 0xff
 80046c6:	bf00      	nop
 80046c8:	20001490 	.word	0x20001490

080046cc <__malloc_lock>:
 80046cc:	4801      	ldr	r0, [pc, #4]	; (80046d4 <__malloc_lock+0x8>)
 80046ce:	f7ff bf0f 	b.w	80044f0 <__retarget_lock_acquire_recursive>
 80046d2:	bf00      	nop
 80046d4:	2000148c 	.word	0x2000148c

080046d8 <__malloc_unlock>:
 80046d8:	4801      	ldr	r0, [pc, #4]	; (80046e0 <__malloc_unlock+0x8>)
 80046da:	f7ff bf0a 	b.w	80044f2 <__retarget_lock_release_recursive>
 80046de:	bf00      	nop
 80046e0:	2000148c 	.word	0x2000148c

080046e4 <__ssputs_r>:
 80046e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80046e8:	688e      	ldr	r6, [r1, #8]
 80046ea:	461f      	mov	r7, r3
 80046ec:	42be      	cmp	r6, r7
 80046ee:	680b      	ldr	r3, [r1, #0]
 80046f0:	4682      	mov	sl, r0
 80046f2:	460c      	mov	r4, r1
 80046f4:	4690      	mov	r8, r2
 80046f6:	d82c      	bhi.n	8004752 <__ssputs_r+0x6e>
 80046f8:	898a      	ldrh	r2, [r1, #12]
 80046fa:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80046fe:	d026      	beq.n	800474e <__ssputs_r+0x6a>
 8004700:	6965      	ldr	r5, [r4, #20]
 8004702:	6909      	ldr	r1, [r1, #16]
 8004704:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004708:	eba3 0901 	sub.w	r9, r3, r1
 800470c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8004710:	1c7b      	adds	r3, r7, #1
 8004712:	444b      	add	r3, r9
 8004714:	106d      	asrs	r5, r5, #1
 8004716:	429d      	cmp	r5, r3
 8004718:	bf38      	it	cc
 800471a:	461d      	movcc	r5, r3
 800471c:	0553      	lsls	r3, r2, #21
 800471e:	d527      	bpl.n	8004770 <__ssputs_r+0x8c>
 8004720:	4629      	mov	r1, r5
 8004722:	f7ff ff53 	bl	80045cc <_malloc_r>
 8004726:	4606      	mov	r6, r0
 8004728:	b360      	cbz	r0, 8004784 <__ssputs_r+0xa0>
 800472a:	6921      	ldr	r1, [r4, #16]
 800472c:	464a      	mov	r2, r9
 800472e:	f000 faeb 	bl	8004d08 <memcpy>
 8004732:	89a3      	ldrh	r3, [r4, #12]
 8004734:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8004738:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800473c:	81a3      	strh	r3, [r4, #12]
 800473e:	6126      	str	r6, [r4, #16]
 8004740:	6165      	str	r5, [r4, #20]
 8004742:	444e      	add	r6, r9
 8004744:	eba5 0509 	sub.w	r5, r5, r9
 8004748:	6026      	str	r6, [r4, #0]
 800474a:	60a5      	str	r5, [r4, #8]
 800474c:	463e      	mov	r6, r7
 800474e:	42be      	cmp	r6, r7
 8004750:	d900      	bls.n	8004754 <__ssputs_r+0x70>
 8004752:	463e      	mov	r6, r7
 8004754:	6820      	ldr	r0, [r4, #0]
 8004756:	4632      	mov	r2, r6
 8004758:	4641      	mov	r1, r8
 800475a:	f000 faab 	bl	8004cb4 <memmove>
 800475e:	68a3      	ldr	r3, [r4, #8]
 8004760:	1b9b      	subs	r3, r3, r6
 8004762:	60a3      	str	r3, [r4, #8]
 8004764:	6823      	ldr	r3, [r4, #0]
 8004766:	4433      	add	r3, r6
 8004768:	6023      	str	r3, [r4, #0]
 800476a:	2000      	movs	r0, #0
 800476c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004770:	462a      	mov	r2, r5
 8004772:	f000 fad7 	bl	8004d24 <_realloc_r>
 8004776:	4606      	mov	r6, r0
 8004778:	2800      	cmp	r0, #0
 800477a:	d1e0      	bne.n	800473e <__ssputs_r+0x5a>
 800477c:	6921      	ldr	r1, [r4, #16]
 800477e:	4650      	mov	r0, sl
 8004780:	f7ff feb8 	bl	80044f4 <_free_r>
 8004784:	230c      	movs	r3, #12
 8004786:	f8ca 3000 	str.w	r3, [sl]
 800478a:	89a3      	ldrh	r3, [r4, #12]
 800478c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004790:	81a3      	strh	r3, [r4, #12]
 8004792:	f04f 30ff 	mov.w	r0, #4294967295
 8004796:	e7e9      	b.n	800476c <__ssputs_r+0x88>

08004798 <_svfiprintf_r>:
 8004798:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800479c:	4698      	mov	r8, r3
 800479e:	898b      	ldrh	r3, [r1, #12]
 80047a0:	061b      	lsls	r3, r3, #24
 80047a2:	b09d      	sub	sp, #116	; 0x74
 80047a4:	4607      	mov	r7, r0
 80047a6:	460d      	mov	r5, r1
 80047a8:	4614      	mov	r4, r2
 80047aa:	d50e      	bpl.n	80047ca <_svfiprintf_r+0x32>
 80047ac:	690b      	ldr	r3, [r1, #16]
 80047ae:	b963      	cbnz	r3, 80047ca <_svfiprintf_r+0x32>
 80047b0:	2140      	movs	r1, #64	; 0x40
 80047b2:	f7ff ff0b 	bl	80045cc <_malloc_r>
 80047b6:	6028      	str	r0, [r5, #0]
 80047b8:	6128      	str	r0, [r5, #16]
 80047ba:	b920      	cbnz	r0, 80047c6 <_svfiprintf_r+0x2e>
 80047bc:	230c      	movs	r3, #12
 80047be:	603b      	str	r3, [r7, #0]
 80047c0:	f04f 30ff 	mov.w	r0, #4294967295
 80047c4:	e0d0      	b.n	8004968 <_svfiprintf_r+0x1d0>
 80047c6:	2340      	movs	r3, #64	; 0x40
 80047c8:	616b      	str	r3, [r5, #20]
 80047ca:	2300      	movs	r3, #0
 80047cc:	9309      	str	r3, [sp, #36]	; 0x24
 80047ce:	2320      	movs	r3, #32
 80047d0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80047d4:	f8cd 800c 	str.w	r8, [sp, #12]
 80047d8:	2330      	movs	r3, #48	; 0x30
 80047da:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8004980 <_svfiprintf_r+0x1e8>
 80047de:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80047e2:	f04f 0901 	mov.w	r9, #1
 80047e6:	4623      	mov	r3, r4
 80047e8:	469a      	mov	sl, r3
 80047ea:	f813 2b01 	ldrb.w	r2, [r3], #1
 80047ee:	b10a      	cbz	r2, 80047f4 <_svfiprintf_r+0x5c>
 80047f0:	2a25      	cmp	r2, #37	; 0x25
 80047f2:	d1f9      	bne.n	80047e8 <_svfiprintf_r+0x50>
 80047f4:	ebba 0b04 	subs.w	fp, sl, r4
 80047f8:	d00b      	beq.n	8004812 <_svfiprintf_r+0x7a>
 80047fa:	465b      	mov	r3, fp
 80047fc:	4622      	mov	r2, r4
 80047fe:	4629      	mov	r1, r5
 8004800:	4638      	mov	r0, r7
 8004802:	f7ff ff6f 	bl	80046e4 <__ssputs_r>
 8004806:	3001      	adds	r0, #1
 8004808:	f000 80a9 	beq.w	800495e <_svfiprintf_r+0x1c6>
 800480c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800480e:	445a      	add	r2, fp
 8004810:	9209      	str	r2, [sp, #36]	; 0x24
 8004812:	f89a 3000 	ldrb.w	r3, [sl]
 8004816:	2b00      	cmp	r3, #0
 8004818:	f000 80a1 	beq.w	800495e <_svfiprintf_r+0x1c6>
 800481c:	2300      	movs	r3, #0
 800481e:	f04f 32ff 	mov.w	r2, #4294967295
 8004822:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004826:	f10a 0a01 	add.w	sl, sl, #1
 800482a:	9304      	str	r3, [sp, #16]
 800482c:	9307      	str	r3, [sp, #28]
 800482e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8004832:	931a      	str	r3, [sp, #104]	; 0x68
 8004834:	4654      	mov	r4, sl
 8004836:	2205      	movs	r2, #5
 8004838:	f814 1b01 	ldrb.w	r1, [r4], #1
 800483c:	4850      	ldr	r0, [pc, #320]	; (8004980 <_svfiprintf_r+0x1e8>)
 800483e:	f7fb fccf 	bl	80001e0 <memchr>
 8004842:	9a04      	ldr	r2, [sp, #16]
 8004844:	b9d8      	cbnz	r0, 800487e <_svfiprintf_r+0xe6>
 8004846:	06d0      	lsls	r0, r2, #27
 8004848:	bf44      	itt	mi
 800484a:	2320      	movmi	r3, #32
 800484c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004850:	0711      	lsls	r1, r2, #28
 8004852:	bf44      	itt	mi
 8004854:	232b      	movmi	r3, #43	; 0x2b
 8004856:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800485a:	f89a 3000 	ldrb.w	r3, [sl]
 800485e:	2b2a      	cmp	r3, #42	; 0x2a
 8004860:	d015      	beq.n	800488e <_svfiprintf_r+0xf6>
 8004862:	9a07      	ldr	r2, [sp, #28]
 8004864:	4654      	mov	r4, sl
 8004866:	2000      	movs	r0, #0
 8004868:	f04f 0c0a 	mov.w	ip, #10
 800486c:	4621      	mov	r1, r4
 800486e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004872:	3b30      	subs	r3, #48	; 0x30
 8004874:	2b09      	cmp	r3, #9
 8004876:	d94d      	bls.n	8004914 <_svfiprintf_r+0x17c>
 8004878:	b1b0      	cbz	r0, 80048a8 <_svfiprintf_r+0x110>
 800487a:	9207      	str	r2, [sp, #28]
 800487c:	e014      	b.n	80048a8 <_svfiprintf_r+0x110>
 800487e:	eba0 0308 	sub.w	r3, r0, r8
 8004882:	fa09 f303 	lsl.w	r3, r9, r3
 8004886:	4313      	orrs	r3, r2
 8004888:	9304      	str	r3, [sp, #16]
 800488a:	46a2      	mov	sl, r4
 800488c:	e7d2      	b.n	8004834 <_svfiprintf_r+0x9c>
 800488e:	9b03      	ldr	r3, [sp, #12]
 8004890:	1d19      	adds	r1, r3, #4
 8004892:	681b      	ldr	r3, [r3, #0]
 8004894:	9103      	str	r1, [sp, #12]
 8004896:	2b00      	cmp	r3, #0
 8004898:	bfbb      	ittet	lt
 800489a:	425b      	neglt	r3, r3
 800489c:	f042 0202 	orrlt.w	r2, r2, #2
 80048a0:	9307      	strge	r3, [sp, #28]
 80048a2:	9307      	strlt	r3, [sp, #28]
 80048a4:	bfb8      	it	lt
 80048a6:	9204      	strlt	r2, [sp, #16]
 80048a8:	7823      	ldrb	r3, [r4, #0]
 80048aa:	2b2e      	cmp	r3, #46	; 0x2e
 80048ac:	d10c      	bne.n	80048c8 <_svfiprintf_r+0x130>
 80048ae:	7863      	ldrb	r3, [r4, #1]
 80048b0:	2b2a      	cmp	r3, #42	; 0x2a
 80048b2:	d134      	bne.n	800491e <_svfiprintf_r+0x186>
 80048b4:	9b03      	ldr	r3, [sp, #12]
 80048b6:	1d1a      	adds	r2, r3, #4
 80048b8:	681b      	ldr	r3, [r3, #0]
 80048ba:	9203      	str	r2, [sp, #12]
 80048bc:	2b00      	cmp	r3, #0
 80048be:	bfb8      	it	lt
 80048c0:	f04f 33ff 	movlt.w	r3, #4294967295
 80048c4:	3402      	adds	r4, #2
 80048c6:	9305      	str	r3, [sp, #20]
 80048c8:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 8004990 <_svfiprintf_r+0x1f8>
 80048cc:	7821      	ldrb	r1, [r4, #0]
 80048ce:	2203      	movs	r2, #3
 80048d0:	4650      	mov	r0, sl
 80048d2:	f7fb fc85 	bl	80001e0 <memchr>
 80048d6:	b138      	cbz	r0, 80048e8 <_svfiprintf_r+0x150>
 80048d8:	9b04      	ldr	r3, [sp, #16]
 80048da:	eba0 000a 	sub.w	r0, r0, sl
 80048de:	2240      	movs	r2, #64	; 0x40
 80048e0:	4082      	lsls	r2, r0
 80048e2:	4313      	orrs	r3, r2
 80048e4:	3401      	adds	r4, #1
 80048e6:	9304      	str	r3, [sp, #16]
 80048e8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80048ec:	4825      	ldr	r0, [pc, #148]	; (8004984 <_svfiprintf_r+0x1ec>)
 80048ee:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80048f2:	2206      	movs	r2, #6
 80048f4:	f7fb fc74 	bl	80001e0 <memchr>
 80048f8:	2800      	cmp	r0, #0
 80048fa:	d038      	beq.n	800496e <_svfiprintf_r+0x1d6>
 80048fc:	4b22      	ldr	r3, [pc, #136]	; (8004988 <_svfiprintf_r+0x1f0>)
 80048fe:	bb1b      	cbnz	r3, 8004948 <_svfiprintf_r+0x1b0>
 8004900:	9b03      	ldr	r3, [sp, #12]
 8004902:	3307      	adds	r3, #7
 8004904:	f023 0307 	bic.w	r3, r3, #7
 8004908:	3308      	adds	r3, #8
 800490a:	9303      	str	r3, [sp, #12]
 800490c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800490e:	4433      	add	r3, r6
 8004910:	9309      	str	r3, [sp, #36]	; 0x24
 8004912:	e768      	b.n	80047e6 <_svfiprintf_r+0x4e>
 8004914:	fb0c 3202 	mla	r2, ip, r2, r3
 8004918:	460c      	mov	r4, r1
 800491a:	2001      	movs	r0, #1
 800491c:	e7a6      	b.n	800486c <_svfiprintf_r+0xd4>
 800491e:	2300      	movs	r3, #0
 8004920:	3401      	adds	r4, #1
 8004922:	9305      	str	r3, [sp, #20]
 8004924:	4619      	mov	r1, r3
 8004926:	f04f 0c0a 	mov.w	ip, #10
 800492a:	4620      	mov	r0, r4
 800492c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004930:	3a30      	subs	r2, #48	; 0x30
 8004932:	2a09      	cmp	r2, #9
 8004934:	d903      	bls.n	800493e <_svfiprintf_r+0x1a6>
 8004936:	2b00      	cmp	r3, #0
 8004938:	d0c6      	beq.n	80048c8 <_svfiprintf_r+0x130>
 800493a:	9105      	str	r1, [sp, #20]
 800493c:	e7c4      	b.n	80048c8 <_svfiprintf_r+0x130>
 800493e:	fb0c 2101 	mla	r1, ip, r1, r2
 8004942:	4604      	mov	r4, r0
 8004944:	2301      	movs	r3, #1
 8004946:	e7f0      	b.n	800492a <_svfiprintf_r+0x192>
 8004948:	ab03      	add	r3, sp, #12
 800494a:	9300      	str	r3, [sp, #0]
 800494c:	462a      	mov	r2, r5
 800494e:	4b0f      	ldr	r3, [pc, #60]	; (800498c <_svfiprintf_r+0x1f4>)
 8004950:	a904      	add	r1, sp, #16
 8004952:	4638      	mov	r0, r7
 8004954:	f3af 8000 	nop.w
 8004958:	1c42      	adds	r2, r0, #1
 800495a:	4606      	mov	r6, r0
 800495c:	d1d6      	bne.n	800490c <_svfiprintf_r+0x174>
 800495e:	89ab      	ldrh	r3, [r5, #12]
 8004960:	065b      	lsls	r3, r3, #25
 8004962:	f53f af2d 	bmi.w	80047c0 <_svfiprintf_r+0x28>
 8004966:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004968:	b01d      	add	sp, #116	; 0x74
 800496a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800496e:	ab03      	add	r3, sp, #12
 8004970:	9300      	str	r3, [sp, #0]
 8004972:	462a      	mov	r2, r5
 8004974:	4b05      	ldr	r3, [pc, #20]	; (800498c <_svfiprintf_r+0x1f4>)
 8004976:	a904      	add	r1, sp, #16
 8004978:	4638      	mov	r0, r7
 800497a:	f000 f879 	bl	8004a70 <_printf_i>
 800497e:	e7eb      	b.n	8004958 <_svfiprintf_r+0x1c0>
 8004980:	08005680 	.word	0x08005680
 8004984:	0800568a 	.word	0x0800568a
 8004988:	00000000 	.word	0x00000000
 800498c:	080046e5 	.word	0x080046e5
 8004990:	08005686 	.word	0x08005686

08004994 <_printf_common>:
 8004994:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004998:	4616      	mov	r6, r2
 800499a:	4699      	mov	r9, r3
 800499c:	688a      	ldr	r2, [r1, #8]
 800499e:	690b      	ldr	r3, [r1, #16]
 80049a0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80049a4:	4293      	cmp	r3, r2
 80049a6:	bfb8      	it	lt
 80049a8:	4613      	movlt	r3, r2
 80049aa:	6033      	str	r3, [r6, #0]
 80049ac:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80049b0:	4607      	mov	r7, r0
 80049b2:	460c      	mov	r4, r1
 80049b4:	b10a      	cbz	r2, 80049ba <_printf_common+0x26>
 80049b6:	3301      	adds	r3, #1
 80049b8:	6033      	str	r3, [r6, #0]
 80049ba:	6823      	ldr	r3, [r4, #0]
 80049bc:	0699      	lsls	r1, r3, #26
 80049be:	bf42      	ittt	mi
 80049c0:	6833      	ldrmi	r3, [r6, #0]
 80049c2:	3302      	addmi	r3, #2
 80049c4:	6033      	strmi	r3, [r6, #0]
 80049c6:	6825      	ldr	r5, [r4, #0]
 80049c8:	f015 0506 	ands.w	r5, r5, #6
 80049cc:	d106      	bne.n	80049dc <_printf_common+0x48>
 80049ce:	f104 0a19 	add.w	sl, r4, #25
 80049d2:	68e3      	ldr	r3, [r4, #12]
 80049d4:	6832      	ldr	r2, [r6, #0]
 80049d6:	1a9b      	subs	r3, r3, r2
 80049d8:	42ab      	cmp	r3, r5
 80049da:	dc26      	bgt.n	8004a2a <_printf_common+0x96>
 80049dc:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80049e0:	1e13      	subs	r3, r2, #0
 80049e2:	6822      	ldr	r2, [r4, #0]
 80049e4:	bf18      	it	ne
 80049e6:	2301      	movne	r3, #1
 80049e8:	0692      	lsls	r2, r2, #26
 80049ea:	d42b      	bmi.n	8004a44 <_printf_common+0xb0>
 80049ec:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80049f0:	4649      	mov	r1, r9
 80049f2:	4638      	mov	r0, r7
 80049f4:	47c0      	blx	r8
 80049f6:	3001      	adds	r0, #1
 80049f8:	d01e      	beq.n	8004a38 <_printf_common+0xa4>
 80049fa:	6823      	ldr	r3, [r4, #0]
 80049fc:	6922      	ldr	r2, [r4, #16]
 80049fe:	f003 0306 	and.w	r3, r3, #6
 8004a02:	2b04      	cmp	r3, #4
 8004a04:	bf02      	ittt	eq
 8004a06:	68e5      	ldreq	r5, [r4, #12]
 8004a08:	6833      	ldreq	r3, [r6, #0]
 8004a0a:	1aed      	subeq	r5, r5, r3
 8004a0c:	68a3      	ldr	r3, [r4, #8]
 8004a0e:	bf0c      	ite	eq
 8004a10:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004a14:	2500      	movne	r5, #0
 8004a16:	4293      	cmp	r3, r2
 8004a18:	bfc4      	itt	gt
 8004a1a:	1a9b      	subgt	r3, r3, r2
 8004a1c:	18ed      	addgt	r5, r5, r3
 8004a1e:	2600      	movs	r6, #0
 8004a20:	341a      	adds	r4, #26
 8004a22:	42b5      	cmp	r5, r6
 8004a24:	d11a      	bne.n	8004a5c <_printf_common+0xc8>
 8004a26:	2000      	movs	r0, #0
 8004a28:	e008      	b.n	8004a3c <_printf_common+0xa8>
 8004a2a:	2301      	movs	r3, #1
 8004a2c:	4652      	mov	r2, sl
 8004a2e:	4649      	mov	r1, r9
 8004a30:	4638      	mov	r0, r7
 8004a32:	47c0      	blx	r8
 8004a34:	3001      	adds	r0, #1
 8004a36:	d103      	bne.n	8004a40 <_printf_common+0xac>
 8004a38:	f04f 30ff 	mov.w	r0, #4294967295
 8004a3c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004a40:	3501      	adds	r5, #1
 8004a42:	e7c6      	b.n	80049d2 <_printf_common+0x3e>
 8004a44:	18e1      	adds	r1, r4, r3
 8004a46:	1c5a      	adds	r2, r3, #1
 8004a48:	2030      	movs	r0, #48	; 0x30
 8004a4a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8004a4e:	4422      	add	r2, r4
 8004a50:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8004a54:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8004a58:	3302      	adds	r3, #2
 8004a5a:	e7c7      	b.n	80049ec <_printf_common+0x58>
 8004a5c:	2301      	movs	r3, #1
 8004a5e:	4622      	mov	r2, r4
 8004a60:	4649      	mov	r1, r9
 8004a62:	4638      	mov	r0, r7
 8004a64:	47c0      	blx	r8
 8004a66:	3001      	adds	r0, #1
 8004a68:	d0e6      	beq.n	8004a38 <_printf_common+0xa4>
 8004a6a:	3601      	adds	r6, #1
 8004a6c:	e7d9      	b.n	8004a22 <_printf_common+0x8e>
	...

08004a70 <_printf_i>:
 8004a70:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004a74:	7e0f      	ldrb	r7, [r1, #24]
 8004a76:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8004a78:	2f78      	cmp	r7, #120	; 0x78
 8004a7a:	4691      	mov	r9, r2
 8004a7c:	4680      	mov	r8, r0
 8004a7e:	460c      	mov	r4, r1
 8004a80:	469a      	mov	sl, r3
 8004a82:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8004a86:	d807      	bhi.n	8004a98 <_printf_i+0x28>
 8004a88:	2f62      	cmp	r7, #98	; 0x62
 8004a8a:	d80a      	bhi.n	8004aa2 <_printf_i+0x32>
 8004a8c:	2f00      	cmp	r7, #0
 8004a8e:	f000 80d4 	beq.w	8004c3a <_printf_i+0x1ca>
 8004a92:	2f58      	cmp	r7, #88	; 0x58
 8004a94:	f000 80c0 	beq.w	8004c18 <_printf_i+0x1a8>
 8004a98:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004a9c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8004aa0:	e03a      	b.n	8004b18 <_printf_i+0xa8>
 8004aa2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8004aa6:	2b15      	cmp	r3, #21
 8004aa8:	d8f6      	bhi.n	8004a98 <_printf_i+0x28>
 8004aaa:	a101      	add	r1, pc, #4	; (adr r1, 8004ab0 <_printf_i+0x40>)
 8004aac:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8004ab0:	08004b09 	.word	0x08004b09
 8004ab4:	08004b1d 	.word	0x08004b1d
 8004ab8:	08004a99 	.word	0x08004a99
 8004abc:	08004a99 	.word	0x08004a99
 8004ac0:	08004a99 	.word	0x08004a99
 8004ac4:	08004a99 	.word	0x08004a99
 8004ac8:	08004b1d 	.word	0x08004b1d
 8004acc:	08004a99 	.word	0x08004a99
 8004ad0:	08004a99 	.word	0x08004a99
 8004ad4:	08004a99 	.word	0x08004a99
 8004ad8:	08004a99 	.word	0x08004a99
 8004adc:	08004c21 	.word	0x08004c21
 8004ae0:	08004b49 	.word	0x08004b49
 8004ae4:	08004bdb 	.word	0x08004bdb
 8004ae8:	08004a99 	.word	0x08004a99
 8004aec:	08004a99 	.word	0x08004a99
 8004af0:	08004c43 	.word	0x08004c43
 8004af4:	08004a99 	.word	0x08004a99
 8004af8:	08004b49 	.word	0x08004b49
 8004afc:	08004a99 	.word	0x08004a99
 8004b00:	08004a99 	.word	0x08004a99
 8004b04:	08004be3 	.word	0x08004be3
 8004b08:	682b      	ldr	r3, [r5, #0]
 8004b0a:	1d1a      	adds	r2, r3, #4
 8004b0c:	681b      	ldr	r3, [r3, #0]
 8004b0e:	602a      	str	r2, [r5, #0]
 8004b10:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004b14:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004b18:	2301      	movs	r3, #1
 8004b1a:	e09f      	b.n	8004c5c <_printf_i+0x1ec>
 8004b1c:	6820      	ldr	r0, [r4, #0]
 8004b1e:	682b      	ldr	r3, [r5, #0]
 8004b20:	0607      	lsls	r7, r0, #24
 8004b22:	f103 0104 	add.w	r1, r3, #4
 8004b26:	6029      	str	r1, [r5, #0]
 8004b28:	d501      	bpl.n	8004b2e <_printf_i+0xbe>
 8004b2a:	681e      	ldr	r6, [r3, #0]
 8004b2c:	e003      	b.n	8004b36 <_printf_i+0xc6>
 8004b2e:	0646      	lsls	r6, r0, #25
 8004b30:	d5fb      	bpl.n	8004b2a <_printf_i+0xba>
 8004b32:	f9b3 6000 	ldrsh.w	r6, [r3]
 8004b36:	2e00      	cmp	r6, #0
 8004b38:	da03      	bge.n	8004b42 <_printf_i+0xd2>
 8004b3a:	232d      	movs	r3, #45	; 0x2d
 8004b3c:	4276      	negs	r6, r6
 8004b3e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004b42:	485a      	ldr	r0, [pc, #360]	; (8004cac <_printf_i+0x23c>)
 8004b44:	230a      	movs	r3, #10
 8004b46:	e012      	b.n	8004b6e <_printf_i+0xfe>
 8004b48:	682b      	ldr	r3, [r5, #0]
 8004b4a:	6820      	ldr	r0, [r4, #0]
 8004b4c:	1d19      	adds	r1, r3, #4
 8004b4e:	6029      	str	r1, [r5, #0]
 8004b50:	0605      	lsls	r5, r0, #24
 8004b52:	d501      	bpl.n	8004b58 <_printf_i+0xe8>
 8004b54:	681e      	ldr	r6, [r3, #0]
 8004b56:	e002      	b.n	8004b5e <_printf_i+0xee>
 8004b58:	0641      	lsls	r1, r0, #25
 8004b5a:	d5fb      	bpl.n	8004b54 <_printf_i+0xe4>
 8004b5c:	881e      	ldrh	r6, [r3, #0]
 8004b5e:	4853      	ldr	r0, [pc, #332]	; (8004cac <_printf_i+0x23c>)
 8004b60:	2f6f      	cmp	r7, #111	; 0x6f
 8004b62:	bf0c      	ite	eq
 8004b64:	2308      	moveq	r3, #8
 8004b66:	230a      	movne	r3, #10
 8004b68:	2100      	movs	r1, #0
 8004b6a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8004b6e:	6865      	ldr	r5, [r4, #4]
 8004b70:	60a5      	str	r5, [r4, #8]
 8004b72:	2d00      	cmp	r5, #0
 8004b74:	bfa2      	ittt	ge
 8004b76:	6821      	ldrge	r1, [r4, #0]
 8004b78:	f021 0104 	bicge.w	r1, r1, #4
 8004b7c:	6021      	strge	r1, [r4, #0]
 8004b7e:	b90e      	cbnz	r6, 8004b84 <_printf_i+0x114>
 8004b80:	2d00      	cmp	r5, #0
 8004b82:	d04b      	beq.n	8004c1c <_printf_i+0x1ac>
 8004b84:	4615      	mov	r5, r2
 8004b86:	fbb6 f1f3 	udiv	r1, r6, r3
 8004b8a:	fb03 6711 	mls	r7, r3, r1, r6
 8004b8e:	5dc7      	ldrb	r7, [r0, r7]
 8004b90:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8004b94:	4637      	mov	r7, r6
 8004b96:	42bb      	cmp	r3, r7
 8004b98:	460e      	mov	r6, r1
 8004b9a:	d9f4      	bls.n	8004b86 <_printf_i+0x116>
 8004b9c:	2b08      	cmp	r3, #8
 8004b9e:	d10b      	bne.n	8004bb8 <_printf_i+0x148>
 8004ba0:	6823      	ldr	r3, [r4, #0]
 8004ba2:	07de      	lsls	r6, r3, #31
 8004ba4:	d508      	bpl.n	8004bb8 <_printf_i+0x148>
 8004ba6:	6923      	ldr	r3, [r4, #16]
 8004ba8:	6861      	ldr	r1, [r4, #4]
 8004baa:	4299      	cmp	r1, r3
 8004bac:	bfde      	ittt	le
 8004bae:	2330      	movle	r3, #48	; 0x30
 8004bb0:	f805 3c01 	strble.w	r3, [r5, #-1]
 8004bb4:	f105 35ff 	addle.w	r5, r5, #4294967295
 8004bb8:	1b52      	subs	r2, r2, r5
 8004bba:	6122      	str	r2, [r4, #16]
 8004bbc:	f8cd a000 	str.w	sl, [sp]
 8004bc0:	464b      	mov	r3, r9
 8004bc2:	aa03      	add	r2, sp, #12
 8004bc4:	4621      	mov	r1, r4
 8004bc6:	4640      	mov	r0, r8
 8004bc8:	f7ff fee4 	bl	8004994 <_printf_common>
 8004bcc:	3001      	adds	r0, #1
 8004bce:	d14a      	bne.n	8004c66 <_printf_i+0x1f6>
 8004bd0:	f04f 30ff 	mov.w	r0, #4294967295
 8004bd4:	b004      	add	sp, #16
 8004bd6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004bda:	6823      	ldr	r3, [r4, #0]
 8004bdc:	f043 0320 	orr.w	r3, r3, #32
 8004be0:	6023      	str	r3, [r4, #0]
 8004be2:	4833      	ldr	r0, [pc, #204]	; (8004cb0 <_printf_i+0x240>)
 8004be4:	2778      	movs	r7, #120	; 0x78
 8004be6:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8004bea:	6823      	ldr	r3, [r4, #0]
 8004bec:	6829      	ldr	r1, [r5, #0]
 8004bee:	061f      	lsls	r7, r3, #24
 8004bf0:	f851 6b04 	ldr.w	r6, [r1], #4
 8004bf4:	d402      	bmi.n	8004bfc <_printf_i+0x18c>
 8004bf6:	065f      	lsls	r7, r3, #25
 8004bf8:	bf48      	it	mi
 8004bfa:	b2b6      	uxthmi	r6, r6
 8004bfc:	07df      	lsls	r7, r3, #31
 8004bfe:	bf48      	it	mi
 8004c00:	f043 0320 	orrmi.w	r3, r3, #32
 8004c04:	6029      	str	r1, [r5, #0]
 8004c06:	bf48      	it	mi
 8004c08:	6023      	strmi	r3, [r4, #0]
 8004c0a:	b91e      	cbnz	r6, 8004c14 <_printf_i+0x1a4>
 8004c0c:	6823      	ldr	r3, [r4, #0]
 8004c0e:	f023 0320 	bic.w	r3, r3, #32
 8004c12:	6023      	str	r3, [r4, #0]
 8004c14:	2310      	movs	r3, #16
 8004c16:	e7a7      	b.n	8004b68 <_printf_i+0xf8>
 8004c18:	4824      	ldr	r0, [pc, #144]	; (8004cac <_printf_i+0x23c>)
 8004c1a:	e7e4      	b.n	8004be6 <_printf_i+0x176>
 8004c1c:	4615      	mov	r5, r2
 8004c1e:	e7bd      	b.n	8004b9c <_printf_i+0x12c>
 8004c20:	682b      	ldr	r3, [r5, #0]
 8004c22:	6826      	ldr	r6, [r4, #0]
 8004c24:	6961      	ldr	r1, [r4, #20]
 8004c26:	1d18      	adds	r0, r3, #4
 8004c28:	6028      	str	r0, [r5, #0]
 8004c2a:	0635      	lsls	r5, r6, #24
 8004c2c:	681b      	ldr	r3, [r3, #0]
 8004c2e:	d501      	bpl.n	8004c34 <_printf_i+0x1c4>
 8004c30:	6019      	str	r1, [r3, #0]
 8004c32:	e002      	b.n	8004c3a <_printf_i+0x1ca>
 8004c34:	0670      	lsls	r0, r6, #25
 8004c36:	d5fb      	bpl.n	8004c30 <_printf_i+0x1c0>
 8004c38:	8019      	strh	r1, [r3, #0]
 8004c3a:	2300      	movs	r3, #0
 8004c3c:	6123      	str	r3, [r4, #16]
 8004c3e:	4615      	mov	r5, r2
 8004c40:	e7bc      	b.n	8004bbc <_printf_i+0x14c>
 8004c42:	682b      	ldr	r3, [r5, #0]
 8004c44:	1d1a      	adds	r2, r3, #4
 8004c46:	602a      	str	r2, [r5, #0]
 8004c48:	681d      	ldr	r5, [r3, #0]
 8004c4a:	6862      	ldr	r2, [r4, #4]
 8004c4c:	2100      	movs	r1, #0
 8004c4e:	4628      	mov	r0, r5
 8004c50:	f7fb fac6 	bl	80001e0 <memchr>
 8004c54:	b108      	cbz	r0, 8004c5a <_printf_i+0x1ea>
 8004c56:	1b40      	subs	r0, r0, r5
 8004c58:	6060      	str	r0, [r4, #4]
 8004c5a:	6863      	ldr	r3, [r4, #4]
 8004c5c:	6123      	str	r3, [r4, #16]
 8004c5e:	2300      	movs	r3, #0
 8004c60:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004c64:	e7aa      	b.n	8004bbc <_printf_i+0x14c>
 8004c66:	6923      	ldr	r3, [r4, #16]
 8004c68:	462a      	mov	r2, r5
 8004c6a:	4649      	mov	r1, r9
 8004c6c:	4640      	mov	r0, r8
 8004c6e:	47d0      	blx	sl
 8004c70:	3001      	adds	r0, #1
 8004c72:	d0ad      	beq.n	8004bd0 <_printf_i+0x160>
 8004c74:	6823      	ldr	r3, [r4, #0]
 8004c76:	079b      	lsls	r3, r3, #30
 8004c78:	d413      	bmi.n	8004ca2 <_printf_i+0x232>
 8004c7a:	68e0      	ldr	r0, [r4, #12]
 8004c7c:	9b03      	ldr	r3, [sp, #12]
 8004c7e:	4298      	cmp	r0, r3
 8004c80:	bfb8      	it	lt
 8004c82:	4618      	movlt	r0, r3
 8004c84:	e7a6      	b.n	8004bd4 <_printf_i+0x164>
 8004c86:	2301      	movs	r3, #1
 8004c88:	4632      	mov	r2, r6
 8004c8a:	4649      	mov	r1, r9
 8004c8c:	4640      	mov	r0, r8
 8004c8e:	47d0      	blx	sl
 8004c90:	3001      	adds	r0, #1
 8004c92:	d09d      	beq.n	8004bd0 <_printf_i+0x160>
 8004c94:	3501      	adds	r5, #1
 8004c96:	68e3      	ldr	r3, [r4, #12]
 8004c98:	9903      	ldr	r1, [sp, #12]
 8004c9a:	1a5b      	subs	r3, r3, r1
 8004c9c:	42ab      	cmp	r3, r5
 8004c9e:	dcf2      	bgt.n	8004c86 <_printf_i+0x216>
 8004ca0:	e7eb      	b.n	8004c7a <_printf_i+0x20a>
 8004ca2:	2500      	movs	r5, #0
 8004ca4:	f104 0619 	add.w	r6, r4, #25
 8004ca8:	e7f5      	b.n	8004c96 <_printf_i+0x226>
 8004caa:	bf00      	nop
 8004cac:	08005691 	.word	0x08005691
 8004cb0:	080056a2 	.word	0x080056a2

08004cb4 <memmove>:
 8004cb4:	4288      	cmp	r0, r1
 8004cb6:	b510      	push	{r4, lr}
 8004cb8:	eb01 0402 	add.w	r4, r1, r2
 8004cbc:	d902      	bls.n	8004cc4 <memmove+0x10>
 8004cbe:	4284      	cmp	r4, r0
 8004cc0:	4623      	mov	r3, r4
 8004cc2:	d807      	bhi.n	8004cd4 <memmove+0x20>
 8004cc4:	1e43      	subs	r3, r0, #1
 8004cc6:	42a1      	cmp	r1, r4
 8004cc8:	d008      	beq.n	8004cdc <memmove+0x28>
 8004cca:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004cce:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004cd2:	e7f8      	b.n	8004cc6 <memmove+0x12>
 8004cd4:	4402      	add	r2, r0
 8004cd6:	4601      	mov	r1, r0
 8004cd8:	428a      	cmp	r2, r1
 8004cda:	d100      	bne.n	8004cde <memmove+0x2a>
 8004cdc:	bd10      	pop	{r4, pc}
 8004cde:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004ce2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004ce6:	e7f7      	b.n	8004cd8 <memmove+0x24>

08004ce8 <_sbrk_r>:
 8004ce8:	b538      	push	{r3, r4, r5, lr}
 8004cea:	4d06      	ldr	r5, [pc, #24]	; (8004d04 <_sbrk_r+0x1c>)
 8004cec:	2300      	movs	r3, #0
 8004cee:	4604      	mov	r4, r0
 8004cf0:	4608      	mov	r0, r1
 8004cf2:	602b      	str	r3, [r5, #0]
 8004cf4:	f7fc f9b0 	bl	8001058 <_sbrk>
 8004cf8:	1c43      	adds	r3, r0, #1
 8004cfa:	d102      	bne.n	8004d02 <_sbrk_r+0x1a>
 8004cfc:	682b      	ldr	r3, [r5, #0]
 8004cfe:	b103      	cbz	r3, 8004d02 <_sbrk_r+0x1a>
 8004d00:	6023      	str	r3, [r4, #0]
 8004d02:	bd38      	pop	{r3, r4, r5, pc}
 8004d04:	20001488 	.word	0x20001488

08004d08 <memcpy>:
 8004d08:	440a      	add	r2, r1
 8004d0a:	4291      	cmp	r1, r2
 8004d0c:	f100 33ff 	add.w	r3, r0, #4294967295
 8004d10:	d100      	bne.n	8004d14 <memcpy+0xc>
 8004d12:	4770      	bx	lr
 8004d14:	b510      	push	{r4, lr}
 8004d16:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004d1a:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004d1e:	4291      	cmp	r1, r2
 8004d20:	d1f9      	bne.n	8004d16 <memcpy+0xe>
 8004d22:	bd10      	pop	{r4, pc}

08004d24 <_realloc_r>:
 8004d24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004d28:	4680      	mov	r8, r0
 8004d2a:	4614      	mov	r4, r2
 8004d2c:	460e      	mov	r6, r1
 8004d2e:	b921      	cbnz	r1, 8004d3a <_realloc_r+0x16>
 8004d30:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004d34:	4611      	mov	r1, r2
 8004d36:	f7ff bc49 	b.w	80045cc <_malloc_r>
 8004d3a:	b92a      	cbnz	r2, 8004d48 <_realloc_r+0x24>
 8004d3c:	f7ff fbda 	bl	80044f4 <_free_r>
 8004d40:	4625      	mov	r5, r4
 8004d42:	4628      	mov	r0, r5
 8004d44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004d48:	f000 f81b 	bl	8004d82 <_malloc_usable_size_r>
 8004d4c:	4284      	cmp	r4, r0
 8004d4e:	4607      	mov	r7, r0
 8004d50:	d802      	bhi.n	8004d58 <_realloc_r+0x34>
 8004d52:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8004d56:	d812      	bhi.n	8004d7e <_realloc_r+0x5a>
 8004d58:	4621      	mov	r1, r4
 8004d5a:	4640      	mov	r0, r8
 8004d5c:	f7ff fc36 	bl	80045cc <_malloc_r>
 8004d60:	4605      	mov	r5, r0
 8004d62:	2800      	cmp	r0, #0
 8004d64:	d0ed      	beq.n	8004d42 <_realloc_r+0x1e>
 8004d66:	42bc      	cmp	r4, r7
 8004d68:	4622      	mov	r2, r4
 8004d6a:	4631      	mov	r1, r6
 8004d6c:	bf28      	it	cs
 8004d6e:	463a      	movcs	r2, r7
 8004d70:	f7ff ffca 	bl	8004d08 <memcpy>
 8004d74:	4631      	mov	r1, r6
 8004d76:	4640      	mov	r0, r8
 8004d78:	f7ff fbbc 	bl	80044f4 <_free_r>
 8004d7c:	e7e1      	b.n	8004d42 <_realloc_r+0x1e>
 8004d7e:	4635      	mov	r5, r6
 8004d80:	e7df      	b.n	8004d42 <_realloc_r+0x1e>

08004d82 <_malloc_usable_size_r>:
 8004d82:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004d86:	1f18      	subs	r0, r3, #4
 8004d88:	2b00      	cmp	r3, #0
 8004d8a:	bfbc      	itt	lt
 8004d8c:	580b      	ldrlt	r3, [r1, r0]
 8004d8e:	18c0      	addlt	r0, r0, r3
 8004d90:	4770      	bx	lr
	...

08004d94 <_init>:
 8004d94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004d96:	bf00      	nop
 8004d98:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004d9a:	bc08      	pop	{r3}
 8004d9c:	469e      	mov	lr, r3
 8004d9e:	4770      	bx	lr

08004da0 <_fini>:
 8004da0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004da2:	bf00      	nop
 8004da4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004da6:	bc08      	pop	{r3}
 8004da8:	469e      	mov	lr, r3
 8004daa:	4770      	bx	lr
