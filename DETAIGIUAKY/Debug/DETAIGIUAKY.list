
DETAIGIUAKY.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000566c  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001894  0800580c  0800580c  0001580c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080070a0  080070a0  00020078  2**0
                  CONTENTS
  4 .ARM          00000000  080070a0  080070a0  00020078  2**0
                  CONTENTS
  5 .preinit_array 00000000  080070a0  080070a0  00020078  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080070a0  080070a0  000170a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080070a4  080070a4  000170a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000078  20000000  080070a8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00001468  20000078  08007120  00020078  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200014e0  08007120  000214e0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020078  2**0
                  CONTENTS, READONLY
 12 .comment      000000be  00000000  00000000  000200a8  2**0
                  CONTENTS, READONLY
 13 .debug_info   00038b5d  00000000  00000000  00020166  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000030c5  00000000  00000000  00058cc3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000ed0  00000000  00000000  0005bd88  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000028c  00000000  00000000  0005cc58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00011025  00000000  00000000  0005cee4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000b6ff  00000000  00000000  0006df09  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00056c4a  00000000  00000000  00079608  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00004138  00000000  00000000  000d0254  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000048  00000000  00000000  000d438c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 000009c8  00000000  00000000  000d43d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000078 	.word	0x20000078
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080057f4 	.word	0x080057f4

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	2000007c 	.word	0x2000007c
 80001dc:	080057f4 	.word	0x080057f4

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_dmul>:
 8000280:	b570      	push	{r4, r5, r6, lr}
 8000282:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000286:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800028a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800028e:	bf1d      	ittte	ne
 8000290:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000294:	ea94 0f0c 	teqne	r4, ip
 8000298:	ea95 0f0c 	teqne	r5, ip
 800029c:	f000 f8de 	bleq	800045c <__aeabi_dmul+0x1dc>
 80002a0:	442c      	add	r4, r5
 80002a2:	ea81 0603 	eor.w	r6, r1, r3
 80002a6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80002aa:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80002ae:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80002b2:	bf18      	it	ne
 80002b4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80002b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80002bc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80002c0:	d038      	beq.n	8000334 <__aeabi_dmul+0xb4>
 80002c2:	fba0 ce02 	umull	ip, lr, r0, r2
 80002c6:	f04f 0500 	mov.w	r5, #0
 80002ca:	fbe1 e502 	umlal	lr, r5, r1, r2
 80002ce:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80002d2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80002d6:	f04f 0600 	mov.w	r6, #0
 80002da:	fbe1 5603 	umlal	r5, r6, r1, r3
 80002de:	f09c 0f00 	teq	ip, #0
 80002e2:	bf18      	it	ne
 80002e4:	f04e 0e01 	orrne.w	lr, lr, #1
 80002e8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80002ec:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80002f0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80002f4:	d204      	bcs.n	8000300 <__aeabi_dmul+0x80>
 80002f6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80002fa:	416d      	adcs	r5, r5
 80002fc:	eb46 0606 	adc.w	r6, r6, r6
 8000300:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000304:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000308:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800030c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000310:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000314:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000318:	bf88      	it	hi
 800031a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800031e:	d81e      	bhi.n	800035e <__aeabi_dmul+0xde>
 8000320:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000324:	bf08      	it	eq
 8000326:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800032a:	f150 0000 	adcs.w	r0, r0, #0
 800032e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000332:	bd70      	pop	{r4, r5, r6, pc}
 8000334:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000338:	ea46 0101 	orr.w	r1, r6, r1
 800033c:	ea40 0002 	orr.w	r0, r0, r2
 8000340:	ea81 0103 	eor.w	r1, r1, r3
 8000344:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000348:	bfc2      	ittt	gt
 800034a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800034e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000352:	bd70      	popgt	{r4, r5, r6, pc}
 8000354:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000358:	f04f 0e00 	mov.w	lr, #0
 800035c:	3c01      	subs	r4, #1
 800035e:	f300 80ab 	bgt.w	80004b8 <__aeabi_dmul+0x238>
 8000362:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000366:	bfde      	ittt	le
 8000368:	2000      	movle	r0, #0
 800036a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800036e:	bd70      	pople	{r4, r5, r6, pc}
 8000370:	f1c4 0400 	rsb	r4, r4, #0
 8000374:	3c20      	subs	r4, #32
 8000376:	da35      	bge.n	80003e4 <__aeabi_dmul+0x164>
 8000378:	340c      	adds	r4, #12
 800037a:	dc1b      	bgt.n	80003b4 <__aeabi_dmul+0x134>
 800037c:	f104 0414 	add.w	r4, r4, #20
 8000380:	f1c4 0520 	rsb	r5, r4, #32
 8000384:	fa00 f305 	lsl.w	r3, r0, r5
 8000388:	fa20 f004 	lsr.w	r0, r0, r4
 800038c:	fa01 f205 	lsl.w	r2, r1, r5
 8000390:	ea40 0002 	orr.w	r0, r0, r2
 8000394:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000398:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800039c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80003a0:	fa21 f604 	lsr.w	r6, r1, r4
 80003a4:	eb42 0106 	adc.w	r1, r2, r6
 80003a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80003ac:	bf08      	it	eq
 80003ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80003b2:	bd70      	pop	{r4, r5, r6, pc}
 80003b4:	f1c4 040c 	rsb	r4, r4, #12
 80003b8:	f1c4 0520 	rsb	r5, r4, #32
 80003bc:	fa00 f304 	lsl.w	r3, r0, r4
 80003c0:	fa20 f005 	lsr.w	r0, r0, r5
 80003c4:	fa01 f204 	lsl.w	r2, r1, r4
 80003c8:	ea40 0002 	orr.w	r0, r0, r2
 80003cc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80003d0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80003d4:	f141 0100 	adc.w	r1, r1, #0
 80003d8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80003dc:	bf08      	it	eq
 80003de:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80003e2:	bd70      	pop	{r4, r5, r6, pc}
 80003e4:	f1c4 0520 	rsb	r5, r4, #32
 80003e8:	fa00 f205 	lsl.w	r2, r0, r5
 80003ec:	ea4e 0e02 	orr.w	lr, lr, r2
 80003f0:	fa20 f304 	lsr.w	r3, r0, r4
 80003f4:	fa01 f205 	lsl.w	r2, r1, r5
 80003f8:	ea43 0302 	orr.w	r3, r3, r2
 80003fc:	fa21 f004 	lsr.w	r0, r1, r4
 8000400:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000404:	fa21 f204 	lsr.w	r2, r1, r4
 8000408:	ea20 0002 	bic.w	r0, r0, r2
 800040c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000410:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000414:	bf08      	it	eq
 8000416:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800041a:	bd70      	pop	{r4, r5, r6, pc}
 800041c:	f094 0f00 	teq	r4, #0
 8000420:	d10f      	bne.n	8000442 <__aeabi_dmul+0x1c2>
 8000422:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000426:	0040      	lsls	r0, r0, #1
 8000428:	eb41 0101 	adc.w	r1, r1, r1
 800042c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000430:	bf08      	it	eq
 8000432:	3c01      	subeq	r4, #1
 8000434:	d0f7      	beq.n	8000426 <__aeabi_dmul+0x1a6>
 8000436:	ea41 0106 	orr.w	r1, r1, r6
 800043a:	f095 0f00 	teq	r5, #0
 800043e:	bf18      	it	ne
 8000440:	4770      	bxne	lr
 8000442:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000446:	0052      	lsls	r2, r2, #1
 8000448:	eb43 0303 	adc.w	r3, r3, r3
 800044c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000450:	bf08      	it	eq
 8000452:	3d01      	subeq	r5, #1
 8000454:	d0f7      	beq.n	8000446 <__aeabi_dmul+0x1c6>
 8000456:	ea43 0306 	orr.w	r3, r3, r6
 800045a:	4770      	bx	lr
 800045c:	ea94 0f0c 	teq	r4, ip
 8000460:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000464:	bf18      	it	ne
 8000466:	ea95 0f0c 	teqne	r5, ip
 800046a:	d00c      	beq.n	8000486 <__aeabi_dmul+0x206>
 800046c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000470:	bf18      	it	ne
 8000472:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000476:	d1d1      	bne.n	800041c <__aeabi_dmul+0x19c>
 8000478:	ea81 0103 	eor.w	r1, r1, r3
 800047c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000480:	f04f 0000 	mov.w	r0, #0
 8000484:	bd70      	pop	{r4, r5, r6, pc}
 8000486:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800048a:	bf06      	itte	eq
 800048c:	4610      	moveq	r0, r2
 800048e:	4619      	moveq	r1, r3
 8000490:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000494:	d019      	beq.n	80004ca <__aeabi_dmul+0x24a>
 8000496:	ea94 0f0c 	teq	r4, ip
 800049a:	d102      	bne.n	80004a2 <__aeabi_dmul+0x222>
 800049c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80004a0:	d113      	bne.n	80004ca <__aeabi_dmul+0x24a>
 80004a2:	ea95 0f0c 	teq	r5, ip
 80004a6:	d105      	bne.n	80004b4 <__aeabi_dmul+0x234>
 80004a8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80004ac:	bf1c      	itt	ne
 80004ae:	4610      	movne	r0, r2
 80004b0:	4619      	movne	r1, r3
 80004b2:	d10a      	bne.n	80004ca <__aeabi_dmul+0x24a>
 80004b4:	ea81 0103 	eor.w	r1, r1, r3
 80004b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004bc:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80004c0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004c4:	f04f 0000 	mov.w	r0, #0
 80004c8:	bd70      	pop	{r4, r5, r6, pc}
 80004ca:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80004ce:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80004d2:	bd70      	pop	{r4, r5, r6, pc}

080004d4 <__aeabi_drsub>:
 80004d4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80004d8:	e002      	b.n	80004e0 <__adddf3>
 80004da:	bf00      	nop

080004dc <__aeabi_dsub>:
 80004dc:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080004e0 <__adddf3>:
 80004e0:	b530      	push	{r4, r5, lr}
 80004e2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80004e6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80004ea:	ea94 0f05 	teq	r4, r5
 80004ee:	bf08      	it	eq
 80004f0:	ea90 0f02 	teqeq	r0, r2
 80004f4:	bf1f      	itttt	ne
 80004f6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80004fa:	ea55 0c02 	orrsne.w	ip, r5, r2
 80004fe:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000502:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000506:	f000 80e2 	beq.w	80006ce <__adddf3+0x1ee>
 800050a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800050e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000512:	bfb8      	it	lt
 8000514:	426d      	neglt	r5, r5
 8000516:	dd0c      	ble.n	8000532 <__adddf3+0x52>
 8000518:	442c      	add	r4, r5
 800051a:	ea80 0202 	eor.w	r2, r0, r2
 800051e:	ea81 0303 	eor.w	r3, r1, r3
 8000522:	ea82 0000 	eor.w	r0, r2, r0
 8000526:	ea83 0101 	eor.w	r1, r3, r1
 800052a:	ea80 0202 	eor.w	r2, r0, r2
 800052e:	ea81 0303 	eor.w	r3, r1, r3
 8000532:	2d36      	cmp	r5, #54	; 0x36
 8000534:	bf88      	it	hi
 8000536:	bd30      	pophi	{r4, r5, pc}
 8000538:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800053c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000540:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000544:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000548:	d002      	beq.n	8000550 <__adddf3+0x70>
 800054a:	4240      	negs	r0, r0
 800054c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000550:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000554:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000558:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800055c:	d002      	beq.n	8000564 <__adddf3+0x84>
 800055e:	4252      	negs	r2, r2
 8000560:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000564:	ea94 0f05 	teq	r4, r5
 8000568:	f000 80a7 	beq.w	80006ba <__adddf3+0x1da>
 800056c:	f1a4 0401 	sub.w	r4, r4, #1
 8000570:	f1d5 0e20 	rsbs	lr, r5, #32
 8000574:	db0d      	blt.n	8000592 <__adddf3+0xb2>
 8000576:	fa02 fc0e 	lsl.w	ip, r2, lr
 800057a:	fa22 f205 	lsr.w	r2, r2, r5
 800057e:	1880      	adds	r0, r0, r2
 8000580:	f141 0100 	adc.w	r1, r1, #0
 8000584:	fa03 f20e 	lsl.w	r2, r3, lr
 8000588:	1880      	adds	r0, r0, r2
 800058a:	fa43 f305 	asr.w	r3, r3, r5
 800058e:	4159      	adcs	r1, r3
 8000590:	e00e      	b.n	80005b0 <__adddf3+0xd0>
 8000592:	f1a5 0520 	sub.w	r5, r5, #32
 8000596:	f10e 0e20 	add.w	lr, lr, #32
 800059a:	2a01      	cmp	r2, #1
 800059c:	fa03 fc0e 	lsl.w	ip, r3, lr
 80005a0:	bf28      	it	cs
 80005a2:	f04c 0c02 	orrcs.w	ip, ip, #2
 80005a6:	fa43 f305 	asr.w	r3, r3, r5
 80005aa:	18c0      	adds	r0, r0, r3
 80005ac:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80005b0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005b4:	d507      	bpl.n	80005c6 <__adddf3+0xe6>
 80005b6:	f04f 0e00 	mov.w	lr, #0
 80005ba:	f1dc 0c00 	rsbs	ip, ip, #0
 80005be:	eb7e 0000 	sbcs.w	r0, lr, r0
 80005c2:	eb6e 0101 	sbc.w	r1, lr, r1
 80005c6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80005ca:	d31b      	bcc.n	8000604 <__adddf3+0x124>
 80005cc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80005d0:	d30c      	bcc.n	80005ec <__adddf3+0x10c>
 80005d2:	0849      	lsrs	r1, r1, #1
 80005d4:	ea5f 0030 	movs.w	r0, r0, rrx
 80005d8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80005dc:	f104 0401 	add.w	r4, r4, #1
 80005e0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80005e4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80005e8:	f080 809a 	bcs.w	8000720 <__adddf3+0x240>
 80005ec:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80005f0:	bf08      	it	eq
 80005f2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80005f6:	f150 0000 	adcs.w	r0, r0, #0
 80005fa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005fe:	ea41 0105 	orr.w	r1, r1, r5
 8000602:	bd30      	pop	{r4, r5, pc}
 8000604:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000608:	4140      	adcs	r0, r0
 800060a:	eb41 0101 	adc.w	r1, r1, r1
 800060e:	3c01      	subs	r4, #1
 8000610:	bf28      	it	cs
 8000612:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000616:	d2e9      	bcs.n	80005ec <__adddf3+0x10c>
 8000618:	f091 0f00 	teq	r1, #0
 800061c:	bf04      	itt	eq
 800061e:	4601      	moveq	r1, r0
 8000620:	2000      	moveq	r0, #0
 8000622:	fab1 f381 	clz	r3, r1
 8000626:	bf08      	it	eq
 8000628:	3320      	addeq	r3, #32
 800062a:	f1a3 030b 	sub.w	r3, r3, #11
 800062e:	f1b3 0220 	subs.w	r2, r3, #32
 8000632:	da0c      	bge.n	800064e <__adddf3+0x16e>
 8000634:	320c      	adds	r2, #12
 8000636:	dd08      	ble.n	800064a <__adddf3+0x16a>
 8000638:	f102 0c14 	add.w	ip, r2, #20
 800063c:	f1c2 020c 	rsb	r2, r2, #12
 8000640:	fa01 f00c 	lsl.w	r0, r1, ip
 8000644:	fa21 f102 	lsr.w	r1, r1, r2
 8000648:	e00c      	b.n	8000664 <__adddf3+0x184>
 800064a:	f102 0214 	add.w	r2, r2, #20
 800064e:	bfd8      	it	le
 8000650:	f1c2 0c20 	rsble	ip, r2, #32
 8000654:	fa01 f102 	lsl.w	r1, r1, r2
 8000658:	fa20 fc0c 	lsr.w	ip, r0, ip
 800065c:	bfdc      	itt	le
 800065e:	ea41 010c 	orrle.w	r1, r1, ip
 8000662:	4090      	lslle	r0, r2
 8000664:	1ae4      	subs	r4, r4, r3
 8000666:	bfa2      	ittt	ge
 8000668:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800066c:	4329      	orrge	r1, r5
 800066e:	bd30      	popge	{r4, r5, pc}
 8000670:	ea6f 0404 	mvn.w	r4, r4
 8000674:	3c1f      	subs	r4, #31
 8000676:	da1c      	bge.n	80006b2 <__adddf3+0x1d2>
 8000678:	340c      	adds	r4, #12
 800067a:	dc0e      	bgt.n	800069a <__adddf3+0x1ba>
 800067c:	f104 0414 	add.w	r4, r4, #20
 8000680:	f1c4 0220 	rsb	r2, r4, #32
 8000684:	fa20 f004 	lsr.w	r0, r0, r4
 8000688:	fa01 f302 	lsl.w	r3, r1, r2
 800068c:	ea40 0003 	orr.w	r0, r0, r3
 8000690:	fa21 f304 	lsr.w	r3, r1, r4
 8000694:	ea45 0103 	orr.w	r1, r5, r3
 8000698:	bd30      	pop	{r4, r5, pc}
 800069a:	f1c4 040c 	rsb	r4, r4, #12
 800069e:	f1c4 0220 	rsb	r2, r4, #32
 80006a2:	fa20 f002 	lsr.w	r0, r0, r2
 80006a6:	fa01 f304 	lsl.w	r3, r1, r4
 80006aa:	ea40 0003 	orr.w	r0, r0, r3
 80006ae:	4629      	mov	r1, r5
 80006b0:	bd30      	pop	{r4, r5, pc}
 80006b2:	fa21 f004 	lsr.w	r0, r1, r4
 80006b6:	4629      	mov	r1, r5
 80006b8:	bd30      	pop	{r4, r5, pc}
 80006ba:	f094 0f00 	teq	r4, #0
 80006be:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80006c2:	bf06      	itte	eq
 80006c4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80006c8:	3401      	addeq	r4, #1
 80006ca:	3d01      	subne	r5, #1
 80006cc:	e74e      	b.n	800056c <__adddf3+0x8c>
 80006ce:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80006d2:	bf18      	it	ne
 80006d4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80006d8:	d029      	beq.n	800072e <__adddf3+0x24e>
 80006da:	ea94 0f05 	teq	r4, r5
 80006de:	bf08      	it	eq
 80006e0:	ea90 0f02 	teqeq	r0, r2
 80006e4:	d005      	beq.n	80006f2 <__adddf3+0x212>
 80006e6:	ea54 0c00 	orrs.w	ip, r4, r0
 80006ea:	bf04      	itt	eq
 80006ec:	4619      	moveq	r1, r3
 80006ee:	4610      	moveq	r0, r2
 80006f0:	bd30      	pop	{r4, r5, pc}
 80006f2:	ea91 0f03 	teq	r1, r3
 80006f6:	bf1e      	ittt	ne
 80006f8:	2100      	movne	r1, #0
 80006fa:	2000      	movne	r0, #0
 80006fc:	bd30      	popne	{r4, r5, pc}
 80006fe:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000702:	d105      	bne.n	8000710 <__adddf3+0x230>
 8000704:	0040      	lsls	r0, r0, #1
 8000706:	4149      	adcs	r1, r1
 8000708:	bf28      	it	cs
 800070a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800070e:	bd30      	pop	{r4, r5, pc}
 8000710:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000714:	bf3c      	itt	cc
 8000716:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800071a:	bd30      	popcc	{r4, r5, pc}
 800071c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000720:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000724:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000728:	f04f 0000 	mov.w	r0, #0
 800072c:	bd30      	pop	{r4, r5, pc}
 800072e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000732:	bf1a      	itte	ne
 8000734:	4619      	movne	r1, r3
 8000736:	4610      	movne	r0, r2
 8000738:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800073c:	bf1c      	itt	ne
 800073e:	460b      	movne	r3, r1
 8000740:	4602      	movne	r2, r0
 8000742:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000746:	bf06      	itte	eq
 8000748:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800074c:	ea91 0f03 	teqeq	r1, r3
 8000750:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000754:	bd30      	pop	{r4, r5, pc}
 8000756:	bf00      	nop

08000758 <__aeabi_ui2d>:
 8000758:	f090 0f00 	teq	r0, #0
 800075c:	bf04      	itt	eq
 800075e:	2100      	moveq	r1, #0
 8000760:	4770      	bxeq	lr
 8000762:	b530      	push	{r4, r5, lr}
 8000764:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000768:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800076c:	f04f 0500 	mov.w	r5, #0
 8000770:	f04f 0100 	mov.w	r1, #0
 8000774:	e750      	b.n	8000618 <__adddf3+0x138>
 8000776:	bf00      	nop

08000778 <__aeabi_i2d>:
 8000778:	f090 0f00 	teq	r0, #0
 800077c:	bf04      	itt	eq
 800077e:	2100      	moveq	r1, #0
 8000780:	4770      	bxeq	lr
 8000782:	b530      	push	{r4, r5, lr}
 8000784:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000788:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800078c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000790:	bf48      	it	mi
 8000792:	4240      	negmi	r0, r0
 8000794:	f04f 0100 	mov.w	r1, #0
 8000798:	e73e      	b.n	8000618 <__adddf3+0x138>
 800079a:	bf00      	nop

0800079c <__aeabi_f2d>:
 800079c:	0042      	lsls	r2, r0, #1
 800079e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80007a2:	ea4f 0131 	mov.w	r1, r1, rrx
 80007a6:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80007aa:	bf1f      	itttt	ne
 80007ac:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80007b0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80007b4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80007b8:	4770      	bxne	lr
 80007ba:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80007be:	bf08      	it	eq
 80007c0:	4770      	bxeq	lr
 80007c2:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80007c6:	bf04      	itt	eq
 80007c8:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80007cc:	4770      	bxeq	lr
 80007ce:	b530      	push	{r4, r5, lr}
 80007d0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80007d4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80007d8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80007dc:	e71c      	b.n	8000618 <__adddf3+0x138>
 80007de:	bf00      	nop

080007e0 <__aeabi_ul2d>:
 80007e0:	ea50 0201 	orrs.w	r2, r0, r1
 80007e4:	bf08      	it	eq
 80007e6:	4770      	bxeq	lr
 80007e8:	b530      	push	{r4, r5, lr}
 80007ea:	f04f 0500 	mov.w	r5, #0
 80007ee:	e00a      	b.n	8000806 <__aeabi_l2d+0x16>

080007f0 <__aeabi_l2d>:
 80007f0:	ea50 0201 	orrs.w	r2, r0, r1
 80007f4:	bf08      	it	eq
 80007f6:	4770      	bxeq	lr
 80007f8:	b530      	push	{r4, r5, lr}
 80007fa:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80007fe:	d502      	bpl.n	8000806 <__aeabi_l2d+0x16>
 8000800:	4240      	negs	r0, r0
 8000802:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000806:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800080a:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800080e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000812:	f43f aed8 	beq.w	80005c6 <__adddf3+0xe6>
 8000816:	f04f 0203 	mov.w	r2, #3
 800081a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800081e:	bf18      	it	ne
 8000820:	3203      	addne	r2, #3
 8000822:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000826:	bf18      	it	ne
 8000828:	3203      	addne	r2, #3
 800082a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800082e:	f1c2 0320 	rsb	r3, r2, #32
 8000832:	fa00 fc03 	lsl.w	ip, r0, r3
 8000836:	fa20 f002 	lsr.w	r0, r0, r2
 800083a:	fa01 fe03 	lsl.w	lr, r1, r3
 800083e:	ea40 000e 	orr.w	r0, r0, lr
 8000842:	fa21 f102 	lsr.w	r1, r1, r2
 8000846:	4414      	add	r4, r2
 8000848:	e6bd      	b.n	80005c6 <__adddf3+0xe6>
 800084a:	bf00      	nop

0800084c <__aeabi_d2f>:
 800084c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000850:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000854:	bf24      	itt	cs
 8000856:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 800085a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 800085e:	d90d      	bls.n	800087c <__aeabi_d2f+0x30>
 8000860:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000864:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000868:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 800086c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000870:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000874:	bf08      	it	eq
 8000876:	f020 0001 	biceq.w	r0, r0, #1
 800087a:	4770      	bx	lr
 800087c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000880:	d121      	bne.n	80008c6 <__aeabi_d2f+0x7a>
 8000882:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000886:	bfbc      	itt	lt
 8000888:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 800088c:	4770      	bxlt	lr
 800088e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000892:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000896:	f1c2 0218 	rsb	r2, r2, #24
 800089a:	f1c2 0c20 	rsb	ip, r2, #32
 800089e:	fa10 f30c 	lsls.w	r3, r0, ip
 80008a2:	fa20 f002 	lsr.w	r0, r0, r2
 80008a6:	bf18      	it	ne
 80008a8:	f040 0001 	orrne.w	r0, r0, #1
 80008ac:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 80008b0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 80008b4:	fa03 fc0c 	lsl.w	ip, r3, ip
 80008b8:	ea40 000c 	orr.w	r0, r0, ip
 80008bc:	fa23 f302 	lsr.w	r3, r3, r2
 80008c0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80008c4:	e7cc      	b.n	8000860 <__aeabi_d2f+0x14>
 80008c6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 80008ca:	d107      	bne.n	80008dc <__aeabi_d2f+0x90>
 80008cc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 80008d0:	bf1e      	ittt	ne
 80008d2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 80008d6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 80008da:	4770      	bxne	lr
 80008dc:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 80008e0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80008e4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80008e8:	4770      	bx	lr
 80008ea:	bf00      	nop

080008ec <main>:
static uint8_t temperature, humidity;
static uint8_t temperature1, humidity1;
//static uint8_t temperature2, humidity2;

int main(void)
{
 80008ec:	b580      	push	{r7, lr}
 80008ee:	af00      	add	r7, sp, #0


	AppCommon();
 80008f0:	f000 f83c 	bl	800096c <AppCommon>
	AppInitCommon();
 80008f4:	f000 fc08 	bl	8001108 <AppInitCommon>
	while(1)
	{

		ABL_Process(); // thay Ä‘á»•i Ä‘á»™ sÃ¡ng cá»§a led RGB theo cÆ°á»ng Ä‘á»™ Ã¡nh sÃ¡ng vá»›i chu ká»³ 100 ms.
 80008f8:	f000 fc5e 	bl	80011b8 <ABL_Process>
		processGetValueSensor();
 80008fc:	f000 fa50 	bl	8000da0 <processGetValueSensor>
		processTimerScheduler();
 8000900:	f001 fe14 	bl	800252c <processTimerScheduler>
		ABL_Process(); // thay Ä‘á»•i Ä‘á»™ sÃ¡ng cá»§a led RGB theo cÆ°á»ng Ä‘á»™ Ã¡nh sÃ¡ng vá»›i chu ká»³ 100 ms.
 8000904:	e7f8      	b.n	80008f8 <main+0xc>

08000906 <delay_ms>:

}



void delay_ms(uint32_t ms) {
 8000906:	b580      	push	{r7, lr}
 8000908:	b084      	sub	sp, #16
 800090a:	af00      	add	r7, sp, #0
 800090c:	6078      	str	r0, [r7, #4]

	uint32_t startTime = GetMilSecTick(); //LÆ°u láº¡i thá»i Ä‘iá»ƒm hiá»‡n táº¡i.
 800090e:	f001 fe01 	bl	8002514 <GetMilSecTick>
 8000912:	60f8      	str	r0, [r7, #12]
	while (CalculatorTime(startTime, GetMilSecTick()) <= ms)
 8000914:	bf00      	nop
 8000916:	f001 fdfd 	bl	8002514 <GetMilSecTick>
 800091a:	4603      	mov	r3, r0
 800091c:	4619      	mov	r1, r3
 800091e:	68f8      	ldr	r0, [r7, #12]
 8000920:	f000 f809 	bl	8000936 <CalculatorTime>
 8000924:	4602      	mov	r2, r0
 8000926:	687b      	ldr	r3, [r7, #4]
 8000928:	4293      	cmp	r3, r2
 800092a:	d2f4      	bcs.n	8000916 <delay_ms+0x10>
		;

//	Äá»£i cho Ä‘áº¿n khi háº¿t khoáº£ng time cÃ i Ä‘áº·t

}
 800092c:	bf00      	nop
 800092e:	bf00      	nop
 8000930:	3710      	adds	r7, #16
 8000932:	46bd      	mov	sp, r7
 8000934:	bd80      	pop	{r7, pc}

08000936 <CalculatorTime>:
 * @func   CalculatorTime
 * @brief  Caculator time button
 * @param  None
 * @retval None
 */
uint32_t CalculatorTime(uint32_t dwTimeInit, uint32_t dwTimeCurrent) {
 8000936:	b480      	push	{r7}
 8000938:	b085      	sub	sp, #20
 800093a:	af00      	add	r7, sp, #0
 800093c:	6078      	str	r0, [r7, #4]
 800093e:	6039      	str	r1, [r7, #0]
	uint32_t dwTimeTotal;
	if (dwTimeCurrent >= dwTimeInit) {
 8000940:	683a      	ldr	r2, [r7, #0]
 8000942:	687b      	ldr	r3, [r7, #4]
 8000944:	429a      	cmp	r2, r3
 8000946:	d304      	bcc.n	8000952 <CalculatorTime+0x1c>
		dwTimeTotal = dwTimeCurrent - dwTimeInit;
 8000948:	683a      	ldr	r2, [r7, #0]
 800094a:	687b      	ldr	r3, [r7, #4]
 800094c:	1ad3      	subs	r3, r2, r3
 800094e:	60fb      	str	r3, [r7, #12]
 8000950:	e004      	b.n	800095c <CalculatorTime+0x26>
	} else {
		dwTimeTotal = 0xFFFFFFFFU + dwTimeCurrent - dwTimeInit;
 8000952:	683a      	ldr	r2, [r7, #0]
 8000954:	687b      	ldr	r3, [r7, #4]
 8000956:	1ad3      	subs	r3, r2, r3
 8000958:	3b01      	subs	r3, #1
 800095a:	60fb      	str	r3, [r7, #12]
	}
	return dwTimeTotal;
 800095c:	68fb      	ldr	r3, [r7, #12]

}
 800095e:	4618      	mov	r0, r3
 8000960:	3714      	adds	r7, #20
 8000962:	46bd      	mov	sp, r7
 8000964:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000968:	4770      	bx	lr
	...

0800096c <AppCommon>:
 * @brief  Init everything
 * @param  None
 * @retval None
 */
static void AppCommon()
{
 800096c:	b580      	push	{r7, lr}
 800096e:	b082      	sub	sp, #8
 8000970:	af02      	add	r7, sp, #8
	SystemCoreClockUpdate();
 8000972:	f000 ffe1 	bl	8001938 <SystemCoreClockUpdate>
	TimerInit();
 8000976:	f001 fcf9 	bl	800236c <TimerInit>
    SPI1_Init();
 800097a:	f000 f831 	bl	80009e0 <SPI1_Init>
    I2C_Init_temphumi();
 800097e:	f000 f85f 	bl	8000a40 <I2C_Init_temphumi>
    TemHumSensor_Init();
 8000982:	f001 febf 	bl	8002704 <TemHumSensor_Init>
    Ucglib4WireSWSPI_begin(&ucg, UCG_FONT_MODE_SOLID); //lÃ  hÃ m khá»Ÿi táº¡o LCD.
 8000986:	2100      	movs	r1, #0
 8000988:	4812      	ldr	r0, [pc, #72]	; (80009d4 <AppCommon+0x68>)
 800098a:	f002 f89d 	bl	8002ac8 <Ucglib4WireSWSPI_begin>
    ucg_SetFont(&ucg, ucg_font_ncenR12_hr);
 800098e:	4912      	ldr	r1, [pc, #72]	; (80009d8 <AppCommon+0x6c>)
 8000990:	4810      	ldr	r0, [pc, #64]	; (80009d4 <AppCommon+0x68>)
 8000992:	f003 f9f9 	bl	8003d88 <ucg_SetFont>
    ucg_SetColor(&ucg, 0, 255, 255, 255);
 8000996:	23ff      	movs	r3, #255	; 0xff
 8000998:	9300      	str	r3, [sp, #0]
 800099a:	23ff      	movs	r3, #255	; 0xff
 800099c:	22ff      	movs	r2, #255	; 0xff
 800099e:	2100      	movs	r1, #0
 80009a0:	480c      	ldr	r0, [pc, #48]	; (80009d4 <AppCommon+0x68>)
 80009a2:	f003 fad0 	bl	8003f46 <ucg_SetColor>
    ucg_SetColor(&ucg, 1, 0, 0, 0);
 80009a6:	2300      	movs	r3, #0
 80009a8:	9300      	str	r3, [sp, #0]
 80009aa:	2300      	movs	r3, #0
 80009ac:	2200      	movs	r2, #0
 80009ae:	2101      	movs	r1, #1
 80009b0:	4808      	ldr	r0, [pc, #32]	; (80009d4 <AppCommon+0x68>)
 80009b2:	f003 fac8 	bl	8003f46 <ucg_SetColor>
    ucg_SetRotate180(&ucg);
 80009b6:	4807      	ldr	r0, [pc, #28]	; (80009d4 <AppCommon+0x68>)
 80009b8:	f003 fbc0 	bl	800413c <ucg_SetRotate180>
    Scan_TimeSensor(50);
 80009bc:	2032      	movs	r0, #50	; 0x32
 80009be:	f000 fb07 	bl	8000fd0 <Scan_TimeSensor>
    time_initial = GetMilSecTick();
 80009c2:	f001 fda7 	bl	8002514 <GetMilSecTick>
 80009c6:	4603      	mov	r3, r0
 80009c8:	4a04      	ldr	r2, [pc, #16]	; (80009dc <AppCommon+0x70>)
 80009ca:	6013      	str	r3, [r2, #0]
}
 80009cc:	bf00      	nop
 80009ce:	46bd      	mov	sp, r7
 80009d0:	bd80      	pop	{r7, pc}
 80009d2:	bf00      	nop
 80009d4:	200000b0 	.word	0x200000b0
 80009d8:	080068c4 	.word	0x080068c4
 80009dc:	20000164 	.word	0x20000164

080009e0 <SPI1_Init>:
 * @brief  Init SPI
 * @param  None
 * @retval None
 */
static void SPI1_Init(void)
{
 80009e0:	b580      	push	{r7, lr}
 80009e2:	b082      	sub	sp, #8
 80009e4:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;

	/* GPIOA, GPIOB and GPIOC Clocks enable */
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA | RCC_AHB1Periph_GPIOB | RCC_AHB1Periph_GPIOC, ENABLE);
 80009e6:	2101      	movs	r1, #1
 80009e8:	2007      	movs	r0, #7
 80009ea:	f000 feef 	bl	80017cc <RCC_AHB1PeriphClockCmd>

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 80009ee:	2301      	movs	r3, #1
 80009f0:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
 80009f2:	2303      	movs	r3, #3
 80009f4:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 80009f6:	2300      	movs	r3, #0
 80009f8:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 80009fa:	2300      	movs	r3, #0
 80009fc:	71fb      	strb	r3, [r7, #7]

	GPIO_InitStructure.GPIO_Pin = SPI1_SCK_PIN | SPI1_MOSI_PIN | SPI1_RS_PIN | SPI1_MODE_PIN;
 80009fe:	f44f 7368 	mov.w	r3, #928	; 0x3a0
 8000a02:	603b      	str	r3, [r7, #0]
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 8000a04:	463b      	mov	r3, r7
 8000a06:	4619      	mov	r1, r3
 8000a08:	480a      	ldr	r0, [pc, #40]	; (8000a34 <SPI1_Init+0x54>)
 8000a0a:	f000 fd41 	bl	8001490 <GPIO_Init>

	GPIO_InitStructure.GPIO_Pin = SPI1_CS_PIN | SPI1_ENABLE_PIN;
 8000a0e:	f44f 6388 	mov.w	r3, #1088	; 0x440
 8000a12:	603b      	str	r3, [r7, #0]
	GPIO_Init(GPIOB, &GPIO_InitStructure);
 8000a14:	463b      	mov	r3, r7
 8000a16:	4619      	mov	r1, r3
 8000a18:	4807      	ldr	r0, [pc, #28]	; (8000a38 <SPI1_Init+0x58>)
 8000a1a:	f000 fd39 	bl	8001490 <GPIO_Init>

	GPIO_InitStructure.GPIO_Pin = SPI1_RST_PIN;
 8000a1e:	2380      	movs	r3, #128	; 0x80
 8000a20:	603b      	str	r3, [r7, #0]
	GPIO_Init(GPIOC, &GPIO_InitStructure);
 8000a22:	463b      	mov	r3, r7
 8000a24:	4619      	mov	r1, r3
 8000a26:	4805      	ldr	r0, [pc, #20]	; (8000a3c <SPI1_Init+0x5c>)
 8000a28:	f000 fd32 	bl	8001490 <GPIO_Init>
}
 8000a2c:	bf00      	nop
 8000a2e:	3708      	adds	r7, #8
 8000a30:	46bd      	mov	sp, r7
 8000a32:	bd80      	pop	{r7, pc}
 8000a34:	40020000 	.word	0x40020000
 8000a38:	40020400 	.word	0x40020400
 8000a3c:	40020800 	.word	0x40020800

08000a40 <I2C_Init_temphumi>:
 * @brief  Init I2C temp and humi
 * @param  None
 * @retval None
 */
static void I2C_Init_temphumi(void)
{
 8000a40:	b580      	push	{r7, lr}
 8000a42:	b086      	sub	sp, #24
 8000a44:	af00      	add	r7, sp, #0
// Initialization struct
	I2C_InitTypeDef I2C_InitStruct;
	GPIO_InitTypeDef GPIO_InitStruct;

	// Step 1: Initialize I2C
	RCC_APB1PeriphClockCmd(I2Cx_RCC, ENABLE);
 8000a46:	2101      	movs	r1, #1
 8000a48:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
 8000a4c:	f000 fede 	bl	800180c <RCC_APB1PeriphClockCmd>
	I2C_InitStruct.I2C_ClockSpeed = 400000;
 8000a50:	4b1d      	ldr	r3, [pc, #116]	; (8000ac8 <I2C_Init_temphumi+0x88>)
 8000a52:	60bb      	str	r3, [r7, #8]
	I2C_InitStruct.I2C_Mode = I2C_Mode_I2C;
 8000a54:	2300      	movs	r3, #0
 8000a56:	81bb      	strh	r3, [r7, #12]
	I2C_InitStruct.I2C_DutyCycle = I2C_DutyCycle_2;
 8000a58:	f64b 73ff 	movw	r3, #49151	; 0xbfff
 8000a5c:	81fb      	strh	r3, [r7, #14]
	I2C_InitStruct.I2C_OwnAddress1 = 0x00;
 8000a5e:	2300      	movs	r3, #0
 8000a60:	823b      	strh	r3, [r7, #16]
	I2C_InitStruct.I2C_Ack = I2C_Ack_Enable;
 8000a62:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000a66:	827b      	strh	r3, [r7, #18]
	I2C_InitStruct.I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;
 8000a68:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8000a6c:	82bb      	strh	r3, [r7, #20]
	I2C_Init(I2Cx_SENSOR, &I2C_InitStruct);
 8000a6e:	f107 0308 	add.w	r3, r7, #8
 8000a72:	4619      	mov	r1, r3
 8000a74:	4815      	ldr	r0, [pc, #84]	; (8000acc <I2C_Init_temphumi+0x8c>)
 8000a76:	f001 fa4b 	bl	8001f10 <I2C_Init>
	I2C_Cmd(I2Cx_SENSOR, ENABLE);
 8000a7a:	2101      	movs	r1, #1
 8000a7c:	4813      	ldr	r0, [pc, #76]	; (8000acc <I2C_Init_temphumi+0x8c>)
 8000a7e:	f001 fb09 	bl	8002094 <I2C_Cmd>

	// Step 2: Initialize GPIO as open drain alternate function
	RCC_AHB1PeriphClockCmd(I2C_GPIO_RCC, ENABLE);
 8000a82:	2101      	movs	r1, #1
 8000a84:	2002      	movs	r0, #2
 8000a86:	f000 fea1 	bl	80017cc <RCC_AHB1PeriphClockCmd>
	GPIO_InitStruct.GPIO_Pin = I2C_PIN_SCL | I2C_PIN_SDA;
 8000a8a:	f44f 7340 	mov.w	r3, #768	; 0x300
 8000a8e:	603b      	str	r3, [r7, #0]
	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF;
 8000a90:	2302      	movs	r3, #2
 8000a92:	713b      	strb	r3, [r7, #4]
	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
 8000a94:	2302      	movs	r3, #2
 8000a96:	717b      	strb	r3, [r7, #5]
	GPIO_InitStruct.GPIO_OType = GPIO_OType_OD;
 8000a98:	2301      	movs	r3, #1
 8000a9a:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStruct.GPIO_PuPd  = GPIO_PuPd_NOPULL;
 8000a9c:	2300      	movs	r3, #0
 8000a9e:	71fb      	strb	r3, [r7, #7]
	GPIO_Init(I2C_GPIO, &GPIO_InitStruct);
 8000aa0:	463b      	mov	r3, r7
 8000aa2:	4619      	mov	r1, r3
 8000aa4:	480a      	ldr	r0, [pc, #40]	; (8000ad0 <I2C_Init_temphumi+0x90>)
 8000aa6:	f000 fcf3 	bl	8001490 <GPIO_Init>

	/* Connect PXx to I2C_SCL */
	GPIO_PinAFConfig(I2C_GPIO, GPIO_PinSource8, GPIO_AF_I2C1);
 8000aaa:	2204      	movs	r2, #4
 8000aac:	2108      	movs	r1, #8
 8000aae:	4808      	ldr	r0, [pc, #32]	; (8000ad0 <I2C_Init_temphumi+0x90>)
 8000ab0:	f000 fd95 	bl	80015de <GPIO_PinAFConfig>

	/* Connect PXx to I2C_SDA */
	GPIO_PinAFConfig(I2C_GPIO, GPIO_PinSource9, GPIO_AF_I2C1);
 8000ab4:	2204      	movs	r2, #4
 8000ab6:	2109      	movs	r1, #9
 8000ab8:	4805      	ldr	r0, [pc, #20]	; (8000ad0 <I2C_Init_temphumi+0x90>)
 8000aba:	f000 fd90 	bl	80015de <GPIO_PinAFConfig>
}
 8000abe:	bf00      	nop
 8000ac0:	3718      	adds	r7, #24
 8000ac2:	46bd      	mov	sp, r7
 8000ac4:	bd80      	pop	{r7, pc}
 8000ac6:	bf00      	nop
 8000ac8:	00061a80 	.word	0x00061a80
 8000acc:	40005400 	.word	0x40005400
 8000ad0:	40020400 	.word	0x40020400

08000ad4 <I2C_start>:
 * @brief   Generate I2C start condition
 * @param   None
 * @retval  None
 */
void I2C_start(void)
{
 8000ad4:	b580      	push	{r7, lr}
 8000ad6:	af00      	add	r7, sp, #0
	// Wait until I2Cx is not busy anymore
	while (I2C_GetFlagStatus(I2Cx_SENSOR, I2C_FLAG_BUSY));
 8000ad8:	bf00      	nop
 8000ada:	f44f 3100 	mov.w	r1, #131072	; 0x20000
 8000ade:	480a      	ldr	r0, [pc, #40]	; (8000b08 <I2C_start+0x34>)
 8000ae0:	f001 fbc4 	bl	800226c <I2C_GetFlagStatus>
 8000ae4:	4603      	mov	r3, r0
 8000ae6:	2b00      	cmp	r3, #0
 8000ae8:	d1f7      	bne.n	8000ada <I2C_start+0x6>

	// Generate start condition
	I2C_GenerateSTART(I2Cx_SENSOR, ENABLE);
 8000aea:	2101      	movs	r1, #1
 8000aec:	4806      	ldr	r0, [pc, #24]	; (8000b08 <I2C_start+0x34>)
 8000aee:	f001 faf1 	bl	80020d4 <I2C_GenerateSTART>

	// Wait for I2C EV5.
	// It means that the start condition has been correctly released
	// on the I2C bus (the bus is free, no other devices is communicating))
	while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_MODE_SELECT));
 8000af2:	bf00      	nop
 8000af4:	4905      	ldr	r1, [pc, #20]	; (8000b0c <I2C_start+0x38>)
 8000af6:	4804      	ldr	r0, [pc, #16]	; (8000b08 <I2C_start+0x34>)
 8000af8:	f001 fb88 	bl	800220c <I2C_CheckEvent>
 8000afc:	4603      	mov	r3, r0
 8000afe:	2b00      	cmp	r3, #0
 8000b00:	d0f8      	beq.n	8000af4 <I2C_start+0x20>
}
 8000b02:	bf00      	nop
 8000b04:	bf00      	nop
 8000b06:	bd80      	pop	{r7, pc}
 8000b08:	40005400 	.word	0x40005400
 8000b0c:	00030001 	.word	0x00030001

08000b10 <I2C_address_direction>:
 * @brief   e
 * @param   None
 * @retval  None
 */
void I2C_address_direction(uint8_t address, uint8_t direction)
{
 8000b10:	b580      	push	{r7, lr}
 8000b12:	b082      	sub	sp, #8
 8000b14:	af00      	add	r7, sp, #0
 8000b16:	4603      	mov	r3, r0
 8000b18:	460a      	mov	r2, r1
 8000b1a:	71fb      	strb	r3, [r7, #7]
 8000b1c:	4613      	mov	r3, r2
 8000b1e:	71bb      	strb	r3, [r7, #6]
	// Send slave address
	I2C_Send7bitAddress(I2Cx_SENSOR, address, direction);
 8000b20:	79ba      	ldrb	r2, [r7, #6]
 8000b22:	79fb      	ldrb	r3, [r7, #7]
 8000b24:	4619      	mov	r1, r3
 8000b26:	480f      	ldr	r0, [pc, #60]	; (8000b64 <I2C_address_direction+0x54>)
 8000b28:	f001 fb14 	bl	8002154 <I2C_Send7bitAddress>

	// Wait for I2C EV6
	// It means that a slave acknowledges his address
	if (direction == I2C_Direction_Transmitter)		// truyá»n
 8000b2c:	79bb      	ldrb	r3, [r7, #6]
 8000b2e:	2b00      	cmp	r3, #0
 8000b30:	d108      	bne.n	8000b44 <I2C_address_direction+0x34>
	{
		while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED));
 8000b32:	bf00      	nop
 8000b34:	490c      	ldr	r1, [pc, #48]	; (8000b68 <I2C_address_direction+0x58>)
 8000b36:	480b      	ldr	r0, [pc, #44]	; (8000b64 <I2C_address_direction+0x54>)
 8000b38:	f001 fb68 	bl	800220c <I2C_CheckEvent>
 8000b3c:	4603      	mov	r3, r0
 8000b3e:	2b00      	cmp	r3, #0
 8000b40:	d0f8      	beq.n	8000b34 <I2C_address_direction+0x24>
	}
	else if (direction == I2C_Direction_Receiver)  // nháº­n
	{
		while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED));
	}
}
 8000b42:	e00a      	b.n	8000b5a <I2C_address_direction+0x4a>
	else if (direction == I2C_Direction_Receiver)  // nháº­n
 8000b44:	79bb      	ldrb	r3, [r7, #6]
 8000b46:	2b01      	cmp	r3, #1
 8000b48:	d107      	bne.n	8000b5a <I2C_address_direction+0x4a>
		while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED));
 8000b4a:	bf00      	nop
 8000b4c:	4907      	ldr	r1, [pc, #28]	; (8000b6c <I2C_address_direction+0x5c>)
 8000b4e:	4805      	ldr	r0, [pc, #20]	; (8000b64 <I2C_address_direction+0x54>)
 8000b50:	f001 fb5c 	bl	800220c <I2C_CheckEvent>
 8000b54:	4603      	mov	r3, r0
 8000b56:	2b00      	cmp	r3, #0
 8000b58:	d0f8      	beq.n	8000b4c <I2C_address_direction+0x3c>
}
 8000b5a:	bf00      	nop
 8000b5c:	3708      	adds	r7, #8
 8000b5e:	46bd      	mov	sp, r7
 8000b60:	bd80      	pop	{r7, pc}
 8000b62:	bf00      	nop
 8000b64:	40005400 	.word	0x40005400
 8000b68:	00070082 	.word	0x00070082
 8000b6c:	00030002 	.word	0x00030002

08000b70 <I2C_transmit>:
 * @brief   Transmit one byte to I2C bus
 * @param   None
 * @retval  None
 */
void I2C_transmit(uint8_t byte)
{
 8000b70:	b580      	push	{r7, lr}
 8000b72:	b082      	sub	sp, #8
 8000b74:	af00      	add	r7, sp, #0
 8000b76:	4603      	mov	r3, r0
 8000b78:	71fb      	strb	r3, [r7, #7]
	// Send data byte
	I2C_SendData(I2Cx_SENSOR, byte);
 8000b7a:	79fb      	ldrb	r3, [r7, #7]
 8000b7c:	4619      	mov	r1, r3
 8000b7e:	4808      	ldr	r0, [pc, #32]	; (8000ba0 <I2C_transmit+0x30>)
 8000b80:	f001 fb26 	bl	80021d0 <I2C_SendData>
	// Wait for I2C EV8_2.
	// It means that the data has been physically shifted out and
	// output on the bus)
	while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_BYTE_TRANSMITTED));
 8000b84:	bf00      	nop
 8000b86:	4907      	ldr	r1, [pc, #28]	; (8000ba4 <I2C_transmit+0x34>)
 8000b88:	4805      	ldr	r0, [pc, #20]	; (8000ba0 <I2C_transmit+0x30>)
 8000b8a:	f001 fb3f 	bl	800220c <I2C_CheckEvent>
 8000b8e:	4603      	mov	r3, r0
 8000b90:	2b00      	cmp	r3, #0
 8000b92:	d0f8      	beq.n	8000b86 <I2C_transmit+0x16>
}
 8000b94:	bf00      	nop
 8000b96:	bf00      	nop
 8000b98:	3708      	adds	r7, #8
 8000b9a:	46bd      	mov	sp, r7
 8000b9c:	bd80      	pop	{r7, pc}
 8000b9e:	bf00      	nop
 8000ba0:	40005400 	.word	0x40005400
 8000ba4:	00070084 	.word	0x00070084

08000ba8 <I2C_stop>:
 * @brief   Generate I2C stop condition
 * @param   None
 * @retval  None
 */
void I2C_stop(void)
{
 8000ba8:	b580      	push	{r7, lr}
 8000baa:	af00      	add	r7, sp, #0
	// Generate I2C stop condition
	I2C_GenerateSTOP(I2Cx_SENSOR, ENABLE);
 8000bac:	2101      	movs	r1, #1
 8000bae:	4802      	ldr	r0, [pc, #8]	; (8000bb8 <I2C_stop+0x10>)
 8000bb0:	f001 fab0 	bl	8002114 <I2C_GenerateSTOP>
}
 8000bb4:	bf00      	nop
 8000bb6:	bd80      	pop	{r7, pc}
 8000bb8:	40005400 	.word	0x40005400

08000bbc <I2C_receive_nack>:
 * @brief   receive data
 * @param   None
 * @retval  None
 */
uint8_t I2C_receive_nack(void)
{
 8000bbc:	b580      	push	{r7, lr}
 8000bbe:	af00      	add	r7, sp, #0
	// Disable ACK of received data
	I2C_AcknowledgeConfig(I2Cx_SENSOR, DISABLE);
 8000bc0:	2100      	movs	r1, #0
 8000bc2:	4808      	ldr	r0, [pc, #32]	; (8000be4 <I2C_receive_nack+0x28>)
 8000bc4:	f001 fae4 	bl	8002190 <I2C_AcknowledgeConfig>
	// Wait for I2C EV7
	// It means that the data has been received in I2C data register
	while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_BYTE_RECEIVED));
 8000bc8:	bf00      	nop
 8000bca:	4907      	ldr	r1, [pc, #28]	; (8000be8 <I2C_receive_nack+0x2c>)
 8000bcc:	4805      	ldr	r0, [pc, #20]	; (8000be4 <I2C_receive_nack+0x28>)
 8000bce:	f001 fb1d 	bl	800220c <I2C_CheckEvent>
 8000bd2:	4603      	mov	r3, r0
 8000bd4:	2b00      	cmp	r3, #0
 8000bd6:	d0f8      	beq.n	8000bca <I2C_receive_nack+0xe>

	// Read and return data byte from I2C data register
	return I2C_ReceiveData(I2Cx_SENSOR);
 8000bd8:	4802      	ldr	r0, [pc, #8]	; (8000be4 <I2C_receive_nack+0x28>)
 8000bda:	f001 fb09 	bl	80021f0 <I2C_ReceiveData>
 8000bde:	4603      	mov	r3, r0
}
 8000be0:	4618      	mov	r0, r3
 8000be2:	bd80      	pop	{r7, pc}
 8000be4:	40005400 	.word	0x40005400
 8000be8:	00030040 	.word	0x00030040

08000bec <I2C_receive_ack>:
 * @brief   receive data
 * @param   None
 * @retval  None
 */
uint8_t I2C_receive_ack(void)
{
 8000bec:	b580      	push	{r7, lr}
 8000bee:	af00      	add	r7, sp, #0
	// Enable ACK of received data
	I2C_AcknowledgeConfig(I2Cx_SENSOR, ENABLE);
 8000bf0:	2101      	movs	r1, #1
 8000bf2:	4808      	ldr	r0, [pc, #32]	; (8000c14 <I2C_receive_ack+0x28>)
 8000bf4:	f001 facc 	bl	8002190 <I2C_AcknowledgeConfig>
	// Wait for I2C EV7
	// It means that the data has been received in I2C data register
	while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_BYTE_RECEIVED));
 8000bf8:	bf00      	nop
 8000bfa:	4907      	ldr	r1, [pc, #28]	; (8000c18 <I2C_receive_ack+0x2c>)
 8000bfc:	4805      	ldr	r0, [pc, #20]	; (8000c14 <I2C_receive_ack+0x28>)
 8000bfe:	f001 fb05 	bl	800220c <I2C_CheckEvent>
 8000c02:	4603      	mov	r3, r0
 8000c04:	2b00      	cmp	r3, #0
 8000c06:	d0f8      	beq.n	8000bfa <I2C_receive_ack+0xe>

	// Read and return data byte from I2C data register
	return I2C_ReceiveData(I2Cx_SENSOR);
 8000c08:	4802      	ldr	r0, [pc, #8]	; (8000c14 <I2C_receive_ack+0x28>)
 8000c0a:	f001 faf1 	bl	80021f0 <I2C_ReceiveData>
 8000c0e:	4603      	mov	r3, r0
}
 8000c10:	4618      	mov	r0, r3
 8000c12:	bd80      	pop	{r7, pc}
 8000c14:	40005400 	.word	0x40005400
 8000c18:	00030040 	.word	0x00030040

08000c1c <TemHumSensor_readRegister>:
		uint8_t address,
	    uint8_t* pAddressRegister, // Äá»‹a chá»‰ cá»§a thanh ghi chá»©a dá»¯ liá»‡u nhiá»‡t Ä‘á»™, Ä‘á»™ áº©m.
	    uint8_t* pDataRegister, // Dá»¯ liá»‡u Ä‘á»c Ä‘Æ°á»£c tá»« thanh ghi tÆ°Æ¡ng á»©ng.
	    uint8_t Length_Data, //Äá»™ dÃ i Dá»¯ liá»‡u Ä‘á»c Ä‘Æ°á»£c tá»« thanh ghi tÆ°Æ¡ng á»©ng.
	    uint16_t delay)	//Dá»¯ liá»‡u Ä‘á»c Ä‘Æ°á»£c tá»« thanh ghi tÆ°Æ¡ng á»©ng.
{
 8000c1c:	b590      	push	{r4, r7, lr}
 8000c1e:	b087      	sub	sp, #28
 8000c20:	af00      	add	r7, sp, #0
 8000c22:	60b9      	str	r1, [r7, #8]
 8000c24:	607a      	str	r2, [r7, #4]
 8000c26:	461a      	mov	r2, r3
 8000c28:	4603      	mov	r3, r0
 8000c2a:	73fb      	strb	r3, [r7, #15]
 8000c2c:	4613      	mov	r3, r2
 8000c2e:	73bb      	strb	r3, [r7, #14]
	uint8_t LengthCmd = pAddressRegister[0];
 8000c30:	68bb      	ldr	r3, [r7, #8]
 8000c32:	781b      	ldrb	r3, [r3, #0]
 8000c34:	757b      	strb	r3, [r7, #21]

	I2C_start();	// conditon start
 8000c36:	f7ff ff4d 	bl	8000ad4 <I2C_start>
	I2C_address_direction(address << 1, I2C_Direction_Transmitter); // send slave address - Transmit
 8000c3a:	7bfb      	ldrb	r3, [r7, #15]
 8000c3c:	005b      	lsls	r3, r3, #1
 8000c3e:	b2db      	uxtb	r3, r3
 8000c40:	2100      	movs	r1, #0
 8000c42:	4618      	mov	r0, r3
 8000c44:	f7ff ff64 	bl	8000b10 <I2C_address_direction>

	for (uint8_t i = 1; i < LengthCmd; i++) {
 8000c48:	2301      	movs	r3, #1
 8000c4a:	75fb      	strb	r3, [r7, #23]
 8000c4c:	e009      	b.n	8000c62 <TemHumSensor_readRegister+0x46>
		I2C_transmit(pAddressRegister[i]);		// Send Data from register
 8000c4e:	7dfb      	ldrb	r3, [r7, #23]
 8000c50:	68ba      	ldr	r2, [r7, #8]
 8000c52:	4413      	add	r3, r2
 8000c54:	781b      	ldrb	r3, [r3, #0]
 8000c56:	4618      	mov	r0, r3
 8000c58:	f7ff ff8a 	bl	8000b70 <I2C_transmit>
	for (uint8_t i = 1; i < LengthCmd; i++) {
 8000c5c:	7dfb      	ldrb	r3, [r7, #23]
 8000c5e:	3301      	adds	r3, #1
 8000c60:	75fb      	strb	r3, [r7, #23]
 8000c62:	7dfa      	ldrb	r2, [r7, #23]
 8000c64:	7d7b      	ldrb	r3, [r7, #21]
 8000c66:	429a      	cmp	r2, r3
 8000c68:	d3f1      	bcc.n	8000c4e <TemHumSensor_readRegister+0x32>
	}

    if (delay > 0) {
 8000c6a:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8000c6c:	2b00      	cmp	r3, #0
 8000c6e:	d003      	beq.n	8000c78 <TemHumSensor_readRegister+0x5c>
        delay_ms(delay);
 8000c70:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8000c72:	4618      	mov	r0, r3
 8000c74:	f7ff fe47 	bl	8000906 <delay_ms>
    }

	I2C_stop();// condition stop
 8000c78:	f7ff ff96 	bl	8000ba8 <I2C_stop>

	I2C_start(); // condition start
 8000c7c:	f7ff ff2a 	bl	8000ad4 <I2C_start>
	I2C_address_direction(address << 1, I2C_Direction_Receiver); // send slave address - Received
 8000c80:	7bfb      	ldrb	r3, [r7, #15]
 8000c82:	005b      	lsls	r3, r3, #1
 8000c84:	b2db      	uxtb	r3, r3
 8000c86:	2101      	movs	r1, #1
 8000c88:	4618      	mov	r0, r3
 8000c8a:	f7ff ff41 	bl	8000b10 <I2C_address_direction>

	for (uint8_t i = 0; i < Length_Data; i++)
 8000c8e:	2300      	movs	r3, #0
 8000c90:	75bb      	strb	r3, [r7, #22]
 8000c92:	e016      	b.n	8000cc2 <TemHumSensor_readRegister+0xa6>
	{
		if (i == (Length_Data - 1))
 8000c94:	7dba      	ldrb	r2, [r7, #22]
 8000c96:	7bbb      	ldrb	r3, [r7, #14]
 8000c98:	3b01      	subs	r3, #1
 8000c9a:	429a      	cmp	r2, r3
 8000c9c:	d107      	bne.n	8000cae <TemHumSensor_readRegister+0x92>
		{
			pDataRegister[i] = I2C_receive_nack();  // 	NA
 8000c9e:	7dbb      	ldrb	r3, [r7, #22]
 8000ca0:	687a      	ldr	r2, [r7, #4]
 8000ca2:	18d4      	adds	r4, r2, r3
 8000ca4:	f7ff ff8a 	bl	8000bbc <I2C_receive_nack>
 8000ca8:	4603      	mov	r3, r0
 8000caa:	7023      	strb	r3, [r4, #0]
 8000cac:	e006      	b.n	8000cbc <TemHumSensor_readRegister+0xa0>
		}
		else
		{
			pDataRegister[i] = I2C_receive_ack();   // A
 8000cae:	7dbb      	ldrb	r3, [r7, #22]
 8000cb0:	687a      	ldr	r2, [r7, #4]
 8000cb2:	18d4      	adds	r4, r2, r3
 8000cb4:	f7ff ff9a 	bl	8000bec <I2C_receive_ack>
 8000cb8:	4603      	mov	r3, r0
 8000cba:	7023      	strb	r3, [r4, #0]
	for (uint8_t i = 0; i < Length_Data; i++)
 8000cbc:	7dbb      	ldrb	r3, [r7, #22]
 8000cbe:	3301      	adds	r3, #1
 8000cc0:	75bb      	strb	r3, [r7, #22]
 8000cc2:	7dba      	ldrb	r2, [r7, #22]
 8000cc4:	7bbb      	ldrb	r3, [r7, #14]
 8000cc6:	429a      	cmp	r2, r3
 8000cc8:	d3e4      	bcc.n	8000c94 <TemHumSensor_readRegister+0x78>
		}
	}
	I2C_stop();
 8000cca:	f7ff ff6d 	bl	8000ba8 <I2C_stop>

}
 8000cce:	bf00      	nop
 8000cd0:	371c      	adds	r7, #28
 8000cd2:	46bd      	mov	sp, r7
 8000cd4:	bd90      	pop	{r4, r7, pc}
	...

08000cd8 <GetTemp_Sensor>:
 * @brief   Get value temperature
 * @param   None
 * @retval  Temperature
 */
uint32_t GetTemp_Sensor(void)
{
 8000cd8:	b580      	push	{r7, lr}
 8000cda:	b086      	sub	sp, #24
 8000cdc:	af02      	add	r7, sp, #8
	uint32_t RT;
    uint8_t pRT[3] = { 0 };	// pRT[0]: MSB		pRT[1]: LSB
 8000cde:	4b15      	ldr	r3, [pc, #84]	; (8000d34 <GetTemp_Sensor+0x5c>)
 8000ce0:	881b      	ldrh	r3, [r3, #0]
 8000ce2:	813b      	strh	r3, [r7, #8]
 8000ce4:	2300      	movs	r3, #0
 8000ce6:	72bb      	strb	r3, [r7, #10]

    uint8_t CMD_MEASURE_TEMP[2] =  { 2, 0xE3 }; // gá»­i Ä‘á»™ dÃ i byte cáº§n truyá»n vÃ  CMD_MEASURE cháº¿ Ä‘á»™ HOLD MASTER MODE
 8000ce8:	f24e 3302 	movw	r3, #58114	; 0xe302
 8000cec:	80bb      	strh	r3, [r7, #4]

    TemHumSensor_readRegister(SI7020_ADDR, CMD_MEASURE_TEMP, pRT, 3, 4);
 8000cee:	f107 0208 	add.w	r2, r7, #8
 8000cf2:	1d39      	adds	r1, r7, #4
 8000cf4:	2304      	movs	r3, #4
 8000cf6:	9300      	str	r3, [sp, #0]
 8000cf8:	2303      	movs	r3, #3
 8000cfa:	2040      	movs	r0, #64	; 0x40
 8000cfc:	f7ff ff8e 	bl	8000c1c <TemHumSensor_readRegister>

    RT = (pRT[0] << 8) + pRT[1];			// RT_CODE (MSB << 8) + LSB		// Temp = ((17572* RT)/(0xFFu +1) - 4685)/100
 8000d00:	7a3b      	ldrb	r3, [r7, #8]
 8000d02:	021b      	lsls	r3, r3, #8
 8000d04:	7a7a      	ldrb	r2, [r7, #9]
 8000d06:	4413      	add	r3, r2
 8000d08:	60fb      	str	r3, [r7, #12]
    RT = ((RT * 17572) >> 16) - 4685;
 8000d0a:	68fb      	ldr	r3, [r7, #12]
 8000d0c:	f244 42a4 	movw	r2, #17572	; 0x44a4
 8000d10:	fb02 f303 	mul.w	r3, r2, r3
 8000d14:	0c1b      	lsrs	r3, r3, #16
 8000d16:	f5a3 5392 	sub.w	r3, r3, #4672	; 0x1240
 8000d1a:	3b0d      	subs	r3, #13
 8000d1c:	60fb      	str	r3, [r7, #12]
    RT = RT/100;
 8000d1e:	68fb      	ldr	r3, [r7, #12]
 8000d20:	4a05      	ldr	r2, [pc, #20]	; (8000d38 <GetTemp_Sensor+0x60>)
 8000d22:	fba2 2303 	umull	r2, r3, r2, r3
 8000d26:	095b      	lsrs	r3, r3, #5
 8000d28:	60fb      	str	r3, [r7, #12]
    return RT;
 8000d2a:	68fb      	ldr	r3, [r7, #12]
}
 8000d2c:	4618      	mov	r0, r3
 8000d2e:	3710      	adds	r7, #16
 8000d30:	46bd      	mov	sp, r7
 8000d32:	bd80      	pop	{r7, pc}
 8000d34:	0800580c 	.word	0x0800580c
 8000d38:	51eb851f 	.word	0x51eb851f

08000d3c <GetHumi_Sensor>:
 * @brief   Get value humidity
 * @param   None
 * @retval  Humidity
 */
uint32_t GetHumi_Sensor(void)
{
 8000d3c:	b580      	push	{r7, lr}
 8000d3e:	b086      	sub	sp, #24
 8000d40:	af02      	add	r7, sp, #8
	uint32_t RH;
	uint8_t pRH[3] = { 0 };
 8000d42:	4b15      	ldr	r3, [pc, #84]	; (8000d98 <GetHumi_Sensor+0x5c>)
 8000d44:	881b      	ldrh	r3, [r3, #0]
 8000d46:	813b      	strh	r3, [r7, #8]
 8000d48:	2300      	movs	r3, #0
 8000d4a:	72bb      	strb	r3, [r7, #10]


	uint8_t CMD_MEASURE_HUMI[2] =  { 2, 0xE5 }; // gá»­i Ä‘á»™ dÃ i byte cáº§n truyá»n vÃ  CMD_MEASURE cháº¿ Ä‘á»™ HOLD MASTER MODE
 8000d4c:	f24e 5302 	movw	r3, #58626	; 0xe502
 8000d50:	80bb      	strh	r3, [r7, #4]

    TemHumSensor_readRegister(SI7020_ADDR, CMD_MEASURE_HUMI, pRH, 3, 8);
 8000d52:	f107 0208 	add.w	r2, r7, #8
 8000d56:	1d39      	adds	r1, r7, #4
 8000d58:	2308      	movs	r3, #8
 8000d5a:	9300      	str	r3, [sp, #0]
 8000d5c:	2303      	movs	r3, #3
 8000d5e:	2040      	movs	r0, #64	; 0x40
 8000d60:	f7ff ff5c 	bl	8000c1c <TemHumSensor_readRegister>

    RH = (pRH[0] << 8) + pRH[1]; // RH_CODE (MSB << 8) + LSB
 8000d64:	7a3b      	ldrb	r3, [r7, #8]
 8000d66:	021b      	lsls	r3, r3, #8
 8000d68:	7a7a      	ldrb	r2, [r7, #9]
 8000d6a:	4413      	add	r3, r2
 8000d6c:	60fb      	str	r3, [r7, #12]
    RH = ((RH * 12500) >> 16) - 600;
 8000d6e:	68fb      	ldr	r3, [r7, #12]
 8000d70:	f243 02d4 	movw	r2, #12500	; 0x30d4
 8000d74:	fb02 f303 	mul.w	r3, r2, r3
 8000d78:	0c1b      	lsrs	r3, r3, #16
 8000d7a:	f5a3 7316 	sub.w	r3, r3, #600	; 0x258
 8000d7e:	60fb      	str	r3, [r7, #12]
    RH = RH/100;
 8000d80:	68fb      	ldr	r3, [r7, #12]
 8000d82:	4a06      	ldr	r2, [pc, #24]	; (8000d9c <GetHumi_Sensor+0x60>)
 8000d84:	fba2 2303 	umull	r2, r3, r2, r3
 8000d88:	095b      	lsrs	r3, r3, #5
 8000d8a:	60fb      	str	r3, [r7, #12]

    return RH;
 8000d8c:	68fb      	ldr	r3, [r7, #12]
}
 8000d8e:	4618      	mov	r0, r3
 8000d90:	3710      	adds	r7, #16
 8000d92:	46bd      	mov	sp, r7
 8000d94:	bd80      	pop	{r7, pc}
 8000d96:	bf00      	nop
 8000d98:	0800580c 	.word	0x0800580c
 8000d9c:	51eb851f 	.word	0x51eb851f

08000da0 <processGetValueSensor>:
 * @func 	processGetValueSensor
 * @brief	Get value sensor
 * @param	None
 * @retval	None
 */
void processGetValueSensor(void) {
 8000da0:	b580      	push	{r7, lr}
 8000da2:	b082      	sub	sp, #8
 8000da4:	af02      	add	r7, sp, #8
	// Get timer
	time_current = GetMilSecTick();
 8000da6:	f001 fbb5 	bl	8002514 <GetMilSecTick>
 8000daa:	4603      	mov	r3, r0
 8000dac:	4a58      	ldr	r2, [pc, #352]	; (8000f10 <processGetValueSensor+0x170>)
 8000dae:	6013      	str	r3, [r2, #0]

	if (time_current >= time_initial) {
 8000db0:	4b57      	ldr	r3, [pc, #348]	; (8000f10 <processGetValueSensor+0x170>)
 8000db2:	681a      	ldr	r2, [r3, #0]
 8000db4:	4b57      	ldr	r3, [pc, #348]	; (8000f14 <processGetValueSensor+0x174>)
 8000db6:	681b      	ldr	r3, [r3, #0]
 8000db8:	429a      	cmp	r2, r3
 8000dba:	d30a      	bcc.n	8000dd2 <processGetValueSensor+0x32>
		time_total += time_current - time_initial;
 8000dbc:	4b54      	ldr	r3, [pc, #336]	; (8000f10 <processGetValueSensor+0x170>)
 8000dbe:	681a      	ldr	r2, [r3, #0]
 8000dc0:	4b54      	ldr	r3, [pc, #336]	; (8000f14 <processGetValueSensor+0x174>)
 8000dc2:	681b      	ldr	r3, [r3, #0]
 8000dc4:	1ad2      	subs	r2, r2, r3
 8000dc6:	4b54      	ldr	r3, [pc, #336]	; (8000f18 <processGetValueSensor+0x178>)
 8000dc8:	681b      	ldr	r3, [r3, #0]
 8000dca:	4413      	add	r3, r2
 8000dcc:	4a52      	ldr	r2, [pc, #328]	; (8000f18 <processGetValueSensor+0x178>)
 8000dce:	6013      	str	r3, [r2, #0]
 8000dd0:	e00a      	b.n	8000de8 <processGetValueSensor+0x48>
	} else {
		time_total += 0xFFFFFFFFU - time_current + time_initial;
 8000dd2:	4b50      	ldr	r3, [pc, #320]	; (8000f14 <processGetValueSensor+0x174>)
 8000dd4:	681a      	ldr	r2, [r3, #0]
 8000dd6:	4b4e      	ldr	r3, [pc, #312]	; (8000f10 <processGetValueSensor+0x170>)
 8000dd8:	681b      	ldr	r3, [r3, #0]
 8000dda:	1ad2      	subs	r2, r2, r3
 8000ddc:	4b4e      	ldr	r3, [pc, #312]	; (8000f18 <processGetValueSensor+0x178>)
 8000dde:	681b      	ldr	r3, [r3, #0]
 8000de0:	4413      	add	r3, r2
 8000de2:	3b01      	subs	r3, #1
 8000de4:	4a4c      	ldr	r2, [pc, #304]	; (8000f18 <processGetValueSensor+0x178>)
 8000de6:	6013      	str	r3, [r2, #0]
	}
	if (time_total == CYCLE_SEND_DATA_1) {
 8000de8:	4b4b      	ldr	r3, [pc, #300]	; (8000f18 <processGetValueSensor+0x178>)
 8000dea:	681b      	ldr	r3, [r3, #0]
 8000dec:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8000df0:	d10b      	bne.n	8000e0a <processGetValueSensor+0x6a>
		//DÃ¹ng Ä‘á»ƒ Ä‘á»c giÃ¡ trá»‹ nhiá»‡t Ä‘á»™ tráº£ vá» tá»« cáº£m biáº¿n thÃ´ng qua giao tiáº¿p I2C.
		temperature = (uint8_t) (GetTemp_Sensor());
 8000df2:	f7ff ff71 	bl	8000cd8 <GetTemp_Sensor>
 8000df6:	4603      	mov	r3, r0
 8000df8:	b2da      	uxtb	r2, r3
 8000dfa:	4b48      	ldr	r3, [pc, #288]	; (8000f1c <processGetValueSensor+0x17c>)
 8000dfc:	701a      	strb	r2, [r3, #0]

		//DÃ¹ng Ä‘á»ƒ Ä‘á»c giÃ¡ trá»‹ Ä‘á»™ áº©m tráº£ vá» tá»« cáº£m biáº¿n thÃ´ng qua giao tiáº¿p I2C.
		humidity = (uint8_t) (GetHumi_Sensor());
 8000dfe:	f7ff ff9d 	bl	8000d3c <GetHumi_Sensor>
 8000e02:	4603      	mov	r3, r0
 8000e04:	b2da      	uxtb	r2, r3
 8000e06:	4b46      	ldr	r3, [pc, #280]	; (8000f20 <processGetValueSensor+0x180>)
 8000e08:	701a      	strb	r2, [r3, #0]

	}
	if(time_total >= CYCLE_SEND_DATA_2)
 8000e0a:	4b43      	ldr	r3, [pc, #268]	; (8000f18 <processGetValueSensor+0x178>)
 8000e0c:	681b      	ldr	r3, [r3, #0]
 8000e0e:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 8000e12:	d376      	bcc.n	8000f02 <processGetValueSensor+0x162>
	{
		temperature1 = (uint8_t) (GetTemp_Sensor());
 8000e14:	f7ff ff60 	bl	8000cd8 <GetTemp_Sensor>
 8000e18:	4603      	mov	r3, r0
 8000e1a:	b2da      	uxtb	r2, r3
 8000e1c:	4b41      	ldr	r3, [pc, #260]	; (8000f24 <processGetValueSensor+0x184>)
 8000e1e:	701a      	strb	r2, [r3, #0]

		humidity1 = (uint8_t) (GetHumi_Sensor());
 8000e20:	f7ff ff8c 	bl	8000d3c <GetHumi_Sensor>
 8000e24:	4603      	mov	r3, r0
 8000e26:	b2da      	uxtb	r2, r3
 8000e28:	4b3f      	ldr	r3, [pc, #252]	; (8000f28 <processGetValueSensor+0x188>)
 8000e2a:	701a      	strb	r2, [r3, #0]

		// náº¿u thá»i gian chÃªnh lá»‡ch giá»¯a láº§n Ä‘o 1 vÃ  láº§n Ä‘o 2 lÃ  2 thÃ¬ sáº½ cáº­p nháº­t giÃ¡ trá»‹ sensor
		if( ((temperature1 > temperature ) && (temperature1 - temperature >= 2))
 8000e2c:	4b3d      	ldr	r3, [pc, #244]	; (8000f24 <processGetValueSensor+0x184>)
 8000e2e:	781a      	ldrb	r2, [r3, #0]
 8000e30:	4b3a      	ldr	r3, [pc, #232]	; (8000f1c <processGetValueSensor+0x17c>)
 8000e32:	781b      	ldrb	r3, [r3, #0]
 8000e34:	429a      	cmp	r2, r3
 8000e36:	d907      	bls.n	8000e48 <processGetValueSensor+0xa8>
 8000e38:	4b3a      	ldr	r3, [pc, #232]	; (8000f24 <processGetValueSensor+0x184>)
 8000e3a:	781b      	ldrb	r3, [r3, #0]
 8000e3c:	461a      	mov	r2, r3
 8000e3e:	4b37      	ldr	r3, [pc, #220]	; (8000f1c <processGetValueSensor+0x17c>)
 8000e40:	781b      	ldrb	r3, [r3, #0]
 8000e42:	1ad3      	subs	r3, r2, r3
 8000e44:	2b01      	cmp	r3, #1
 8000e46:	dc29      	bgt.n	8000e9c <processGetValueSensor+0xfc>
		 || ((temperature1 < temperature ) && (temperature1 - temperature <= 2))
 8000e48:	4b36      	ldr	r3, [pc, #216]	; (8000f24 <processGetValueSensor+0x184>)
 8000e4a:	781a      	ldrb	r2, [r3, #0]
 8000e4c:	4b33      	ldr	r3, [pc, #204]	; (8000f1c <processGetValueSensor+0x17c>)
 8000e4e:	781b      	ldrb	r3, [r3, #0]
 8000e50:	429a      	cmp	r2, r3
 8000e52:	d207      	bcs.n	8000e64 <processGetValueSensor+0xc4>
 8000e54:	4b33      	ldr	r3, [pc, #204]	; (8000f24 <processGetValueSensor+0x184>)
 8000e56:	781b      	ldrb	r3, [r3, #0]
 8000e58:	461a      	mov	r2, r3
 8000e5a:	4b30      	ldr	r3, [pc, #192]	; (8000f1c <processGetValueSensor+0x17c>)
 8000e5c:	781b      	ldrb	r3, [r3, #0]
 8000e5e:	1ad3      	subs	r3, r2, r3
 8000e60:	2b02      	cmp	r3, #2
 8000e62:	dd1b      	ble.n	8000e9c <processGetValueSensor+0xfc>
		 || ((humidity1 > humidity ) && (humidity1 - humidity >= 2))
 8000e64:	4b30      	ldr	r3, [pc, #192]	; (8000f28 <processGetValueSensor+0x188>)
 8000e66:	781a      	ldrb	r2, [r3, #0]
 8000e68:	4b2d      	ldr	r3, [pc, #180]	; (8000f20 <processGetValueSensor+0x180>)
 8000e6a:	781b      	ldrb	r3, [r3, #0]
 8000e6c:	429a      	cmp	r2, r3
 8000e6e:	d907      	bls.n	8000e80 <processGetValueSensor+0xe0>
 8000e70:	4b2d      	ldr	r3, [pc, #180]	; (8000f28 <processGetValueSensor+0x188>)
 8000e72:	781b      	ldrb	r3, [r3, #0]
 8000e74:	461a      	mov	r2, r3
 8000e76:	4b2a      	ldr	r3, [pc, #168]	; (8000f20 <processGetValueSensor+0x180>)
 8000e78:	781b      	ldrb	r3, [r3, #0]
 8000e7a:	1ad3      	subs	r3, r2, r3
 8000e7c:	2b01      	cmp	r3, #1
 8000e7e:	dc0d      	bgt.n	8000e9c <processGetValueSensor+0xfc>
		 || ((humidity1 < humidity ) && (humidity1 - humidity <= 2)))
 8000e80:	4b29      	ldr	r3, [pc, #164]	; (8000f28 <processGetValueSensor+0x188>)
 8000e82:	781a      	ldrb	r2, [r3, #0]
 8000e84:	4b26      	ldr	r3, [pc, #152]	; (8000f20 <processGetValueSensor+0x180>)
 8000e86:	781b      	ldrb	r3, [r3, #0]
 8000e88:	429a      	cmp	r2, r3
 8000e8a:	d237      	bcs.n	8000efc <processGetValueSensor+0x15c>
 8000e8c:	4b26      	ldr	r3, [pc, #152]	; (8000f28 <processGetValueSensor+0x188>)
 8000e8e:	781b      	ldrb	r3, [r3, #0]
 8000e90:	461a      	mov	r2, r3
 8000e92:	4b23      	ldr	r3, [pc, #140]	; (8000f20 <processGetValueSensor+0x180>)
 8000e94:	781b      	ldrb	r3, [r3, #0]
 8000e96:	1ad3      	subs	r3, r2, r3
 8000e98:	2b02      	cmp	r3, #2
 8000e9a:	dc2f      	bgt.n	8000efc <processGetValueSensor+0x15c>
		{
			ucg_DrawString(&ucg, 0, 32, 0, "NHOM 2");
 8000e9c:	4b23      	ldr	r3, [pc, #140]	; (8000f2c <processGetValueSensor+0x18c>)
 8000e9e:	9300      	str	r3, [sp, #0]
 8000ea0:	2300      	movs	r3, #0
 8000ea2:	2220      	movs	r2, #32
 8000ea4:	2100      	movs	r1, #0
 8000ea6:	4822      	ldr	r0, [pc, #136]	; (8000f30 <processGetValueSensor+0x190>)
 8000ea8:	f002 feaa 	bl	8003c00 <ucg_DrawString>
			memset(src1, 0, sizeof(src1));
 8000eac:	2214      	movs	r2, #20
 8000eae:	2100      	movs	r1, #0
 8000eb0:	4820      	ldr	r0, [pc, #128]	; (8000f34 <processGetValueSensor+0x194>)
 8000eb2:	f004 f81b 	bl	8004eec <memset>
			sprintf(src1, " Temp = %d oC  ", temperature1);
 8000eb6:	4b1b      	ldr	r3, [pc, #108]	; (8000f24 <processGetValueSensor+0x184>)
 8000eb8:	781b      	ldrb	r3, [r3, #0]
 8000eba:	461a      	mov	r2, r3
 8000ebc:	491e      	ldr	r1, [pc, #120]	; (8000f38 <processGetValueSensor+0x198>)
 8000ebe:	481d      	ldr	r0, [pc, #116]	; (8000f34 <processGetValueSensor+0x194>)
 8000ec0:	f003 fff4 	bl	8004eac <siprintf>
			ucg_DrawString(&ucg, 0, 52, 0, src1);
 8000ec4:	4b1b      	ldr	r3, [pc, #108]	; (8000f34 <processGetValueSensor+0x194>)
 8000ec6:	9300      	str	r3, [sp, #0]
 8000ec8:	2300      	movs	r3, #0
 8000eca:	2234      	movs	r2, #52	; 0x34
 8000ecc:	2100      	movs	r1, #0
 8000ece:	4818      	ldr	r0, [pc, #96]	; (8000f30 <processGetValueSensor+0x190>)
 8000ed0:	f002 fe96 	bl	8003c00 <ucg_DrawString>

			memset(src2, 0, sizeof(src2));
 8000ed4:	2214      	movs	r2, #20
 8000ed6:	2100      	movs	r1, #0
 8000ed8:	4818      	ldr	r0, [pc, #96]	; (8000f3c <processGetValueSensor+0x19c>)
 8000eda:	f004 f807 	bl	8004eec <memset>
			sprintf(src2, " Humi = %3d %%   ", humidity1);
 8000ede:	4b12      	ldr	r3, [pc, #72]	; (8000f28 <processGetValueSensor+0x188>)
 8000ee0:	781b      	ldrb	r3, [r3, #0]
 8000ee2:	461a      	mov	r2, r3
 8000ee4:	4916      	ldr	r1, [pc, #88]	; (8000f40 <processGetValueSensor+0x1a0>)
 8000ee6:	4815      	ldr	r0, [pc, #84]	; (8000f3c <processGetValueSensor+0x19c>)
 8000ee8:	f003 ffe0 	bl	8004eac <siprintf>
			ucg_DrawString(&ucg, 0, 72, 0, src2);
 8000eec:	4b13      	ldr	r3, [pc, #76]	; (8000f3c <processGetValueSensor+0x19c>)
 8000eee:	9300      	str	r3, [sp, #0]
 8000ef0:	2300      	movs	r3, #0
 8000ef2:	2248      	movs	r2, #72	; 0x48
 8000ef4:	2100      	movs	r1, #0
 8000ef6:	480e      	ldr	r0, [pc, #56]	; (8000f30 <processGetValueSensor+0x190>)
 8000ef8:	f002 fe82 	bl	8003c00 <ucg_DrawString>
		}

		time_total = 0;
 8000efc:	4b06      	ldr	r3, [pc, #24]	; (8000f18 <processGetValueSensor+0x178>)
 8000efe:	2200      	movs	r2, #0
 8000f00:	601a      	str	r2, [r3, #0]
		// Reset láº¡i biáº¿n thá»i gian sau quÃ¡ trÃ¬nh Ä‘á»c giÃ¡ trá»‹ nhiá»‡t Ä‘á»™ - Ä‘á»™ áº©m.

	}
	time_initial = time_current;
 8000f02:	4b03      	ldr	r3, [pc, #12]	; (8000f10 <processGetValueSensor+0x170>)
 8000f04:	681b      	ldr	r3, [r3, #0]
 8000f06:	4a03      	ldr	r2, [pc, #12]	; (8000f14 <processGetValueSensor+0x174>)
 8000f08:	6013      	str	r3, [r2, #0]



}
 8000f0a:	bf00      	nop
 8000f0c:	46bd      	mov	sp, r7
 8000f0e:	bd80      	pop	{r7, pc}
 8000f10:	20000168 	.word	0x20000168
 8000f14:	20000164 	.word	0x20000164
 8000f18:	200001c0 	.word	0x200001c0
 8000f1c:	200001c4 	.word	0x200001c4
 8000f20:	200001c5 	.word	0x200001c5
 8000f24:	200001c6 	.word	0x200001c6
 8000f28:	200001c7 	.word	0x200001c7
 8000f2c:	08005810 	.word	0x08005810
 8000f30:	200000b0 	.word	0x200000b0
 8000f34:	20000170 	.word	0x20000170
 8000f38:	08005818 	.word	0x08005818
 8000f3c:	20000184 	.word	0x20000184
 8000f40:	08005828 	.word	0x08005828

08000f44 <Scan_SensorLCD>:
* @brief	Scan display value sensor
* @param	None
* @retval	None
*/
void Scan_SensorLCD(void)
{
 8000f44:	b580      	push	{r7, lr}
 8000f46:	b082      	sub	sp, #8
 8000f48:	af02      	add	r7, sp, #8
	ucg_DrawString(&ucg, 0, 32, 0, "NHOM 2");
 8000f4a:	4b19      	ldr	r3, [pc, #100]	; (8000fb0 <Scan_SensorLCD+0x6c>)
 8000f4c:	9300      	str	r3, [sp, #0]
 8000f4e:	2300      	movs	r3, #0
 8000f50:	2220      	movs	r2, #32
 8000f52:	2100      	movs	r1, #0
 8000f54:	4817      	ldr	r0, [pc, #92]	; (8000fb4 <Scan_SensorLCD+0x70>)
 8000f56:	f002 fe53 	bl	8003c00 <ucg_DrawString>
	memset(src3, 0, sizeof(src3));
 8000f5a:	2214      	movs	r2, #20
 8000f5c:	2100      	movs	r1, #0
 8000f5e:	4816      	ldr	r0, [pc, #88]	; (8000fb8 <Scan_SensorLCD+0x74>)
 8000f60:	f003 ffc4 	bl	8004eec <memset>
	sprintf(src3, " Temp = %d oC  ", temperature);
 8000f64:	4b15      	ldr	r3, [pc, #84]	; (8000fbc <Scan_SensorLCD+0x78>)
 8000f66:	781b      	ldrb	r3, [r3, #0]
 8000f68:	461a      	mov	r2, r3
 8000f6a:	4915      	ldr	r1, [pc, #84]	; (8000fc0 <Scan_SensorLCD+0x7c>)
 8000f6c:	4812      	ldr	r0, [pc, #72]	; (8000fb8 <Scan_SensorLCD+0x74>)
 8000f6e:	f003 ff9d 	bl	8004eac <siprintf>
	ucg_DrawString(&ucg, 0, 52, 0, src3);
 8000f72:	4b11      	ldr	r3, [pc, #68]	; (8000fb8 <Scan_SensorLCD+0x74>)
 8000f74:	9300      	str	r3, [sp, #0]
 8000f76:	2300      	movs	r3, #0
 8000f78:	2234      	movs	r2, #52	; 0x34
 8000f7a:	2100      	movs	r1, #0
 8000f7c:	480d      	ldr	r0, [pc, #52]	; (8000fb4 <Scan_SensorLCD+0x70>)
 8000f7e:	f002 fe3f 	bl	8003c00 <ucg_DrawString>

	memset(src4, 0, sizeof(src4));
 8000f82:	2214      	movs	r2, #20
 8000f84:	2100      	movs	r1, #0
 8000f86:	480f      	ldr	r0, [pc, #60]	; (8000fc4 <Scan_SensorLCD+0x80>)
 8000f88:	f003 ffb0 	bl	8004eec <memset>
	sprintf(src4, " Humi = %3d %%   ", humidity);
 8000f8c:	4b0e      	ldr	r3, [pc, #56]	; (8000fc8 <Scan_SensorLCD+0x84>)
 8000f8e:	781b      	ldrb	r3, [r3, #0]
 8000f90:	461a      	mov	r2, r3
 8000f92:	490e      	ldr	r1, [pc, #56]	; (8000fcc <Scan_SensorLCD+0x88>)
 8000f94:	480b      	ldr	r0, [pc, #44]	; (8000fc4 <Scan_SensorLCD+0x80>)
 8000f96:	f003 ff89 	bl	8004eac <siprintf>
	ucg_DrawString(&ucg, 0, 72, 0, src4);
 8000f9a:	4b0a      	ldr	r3, [pc, #40]	; (8000fc4 <Scan_SensorLCD+0x80>)
 8000f9c:	9300      	str	r3, [sp, #0]
 8000f9e:	2300      	movs	r3, #0
 8000fa0:	2248      	movs	r2, #72	; 0x48
 8000fa2:	2100      	movs	r1, #0
 8000fa4:	4803      	ldr	r0, [pc, #12]	; (8000fb4 <Scan_SensorLCD+0x70>)
 8000fa6:	f002 fe2b 	bl	8003c00 <ucg_DrawString>
}
 8000faa:	bf00      	nop
 8000fac:	46bd      	mov	sp, r7
 8000fae:	bd80      	pop	{r7, pc}
 8000fb0:	08005810 	.word	0x08005810
 8000fb4:	200000b0 	.word	0x200000b0
 8000fb8:	20000198 	.word	0x20000198
 8000fbc:	200001c4 	.word	0x200001c4
 8000fc0:	08005818 	.word	0x08005818
 8000fc4:	200001ac 	.word	0x200001ac
 8000fc8:	200001c5 	.word	0x200001c5
 8000fcc:	08005828 	.word	0x08005828

08000fd0 <Scan_TimeSensor>:
* @brief	Scan period 1s
* @param	None
* @retval	None
*/
void Scan_TimeSensor(uint32_t byRepeats)
{
 8000fd0:	b580      	push	{r7, lr}
 8000fd2:	b084      	sub	sp, #16
 8000fd4:	af02      	add	r7, sp, #8
 8000fd6:	6078      	str	r0, [r7, #4]
	if (idTimer != NO_TIMER) {
 8000fd8:	4b0c      	ldr	r3, [pc, #48]	; (800100c <Scan_TimeSensor+0x3c>)
 8000fda:	681b      	ldr	r3, [r3, #0]
 8000fdc:	2bff      	cmp	r3, #255	; 0xff
 8000fde:	d005      	beq.n	8000fec <Scan_TimeSensor+0x1c>
	TimerStop(idTimer);
 8000fe0:	4b0a      	ldr	r3, [pc, #40]	; (800100c <Scan_TimeSensor+0x3c>)
 8000fe2:	681b      	ldr	r3, [r3, #0]
 8000fe4:	b2db      	uxtb	r3, r3
 8000fe6:	4618      	mov	r0, r3
 8000fe8:	f001 fa44 	bl	8002474 <TimerStop>
	}
	idTimer = TimerStart("Scan_sensor", byRepeats, TIMER_REPEAT_FOREVER, (void*) Scan_SensorLCD, NULL);
 8000fec:	2300      	movs	r3, #0
 8000fee:	9300      	str	r3, [sp, #0]
 8000ff0:	4b07      	ldr	r3, [pc, #28]	; (8001010 <Scan_TimeSensor+0x40>)
 8000ff2:	22ff      	movs	r2, #255	; 0xff
 8000ff4:	6879      	ldr	r1, [r7, #4]
 8000ff6:	4807      	ldr	r0, [pc, #28]	; (8001014 <Scan_TimeSensor+0x44>)
 8000ff8:	f001 f9da 	bl	80023b0 <TimerStart>
 8000ffc:	4603      	mov	r3, r0
 8000ffe:	461a      	mov	r2, r3
 8001000:	4b02      	ldr	r3, [pc, #8]	; (800100c <Scan_TimeSensor+0x3c>)
 8001002:	601a      	str	r2, [r3, #0]
}
 8001004:	bf00      	nop
 8001006:	3708      	adds	r7, #8
 8001008:	46bd      	mov	sp, r7
 800100a:	bd80      	pop	{r7, pc}
 800100c:	2000016c 	.word	0x2000016c
 8001010:	08000f45 	.word	0x08000f45
 8001014:	0800583c 	.word	0x0800583c

08001018 <LightSensor_AdcInit>:

static void LightSensor_AdcInit(void)
{
 8001018:	b580      	push	{r7, lr}
 800101a:	b08c      	sub	sp, #48	; 0x30
 800101c:	af00      	add	r7, sp, #0
	ADC_CommonInitTypeDef ADC_CommonInitStructure;
	ADC_InitTypeDef ADC_InitStructure;
	GPIO_InitTypeDef GPIO_InitStructure;

	/* Enable peripheral clocks ***********************************************/
	RCC_APB2PeriphClockCmd(ADCx_CLK, ENABLE);
 800101e:	2101      	movs	r1, #1
 8001020:	f44f 7080 	mov.w	r0, #256	; 0x100
 8001024:	f000 fc12 	bl	800184c <RCC_APB2PeriphClockCmd>
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC, ENABLE);
 8001028:	2101      	movs	r1, #1
 800102a:	2004      	movs	r0, #4
 800102c:	f000 fbce 	bl	80017cc <RCC_AHB1PeriphClockCmd>

	GPIO_InitStructure.GPIO_Pin = ADC_PIN;
 8001030:	2320      	movs	r3, #32
 8001032:	603b      	str	r3, [r7, #0]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
 8001034:	2303      	movs	r3, #3
 8001036:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 8001038:	2300      	movs	r3, #0
 800103a:	71fb      	strb	r3, [r7, #7]
	GPIO_Init(ADC_PORT, &GPIO_InitStructure);
 800103c:	463b      	mov	r3, r7
 800103e:	4619      	mov	r1, r3
 8001040:	4821      	ldr	r0, [pc, #132]	; (80010c8 <LightSensor_AdcInit+0xb0>)
 8001042:	f000 fa25 	bl	8001490 <GPIO_Init>

	/* ADC Deinit ***************************************************/
	ADC_DeInit();
 8001046:	f000 fd43 	bl	8001ad0 <ADC_DeInit>

	/* ADC Common Init ********************************************************/
	ADC_CommonInitStructure.ADC_Mode = ADC_Mode_Independent;
 800104a:	2300      	movs	r3, #0
 800104c:	623b      	str	r3, [r7, #32]
	ADC_CommonInitStructure.ADC_Prescaler = ADC_Prescaler_Div2;
 800104e:	2300      	movs	r3, #0
 8001050:	627b      	str	r3, [r7, #36]	; 0x24
	ADC_CommonInitStructure.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
 8001052:	2300      	movs	r3, #0
 8001054:	62bb      	str	r3, [r7, #40]	; 0x28
	ADC_CommonInitStructure.ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_5Cycles;
 8001056:	2300      	movs	r3, #0
 8001058:	62fb      	str	r3, [r7, #44]	; 0x2c
	ADC_CommonInit(&ADC_CommonInitStructure);
 800105a:	f107 0320 	add.w	r3, r7, #32
 800105e:	4618      	mov	r0, r3
 8001060:	f000 fd9a 	bl	8001b98 <ADC_CommonInit>

	/* ADC1 Init **************************************************************/
	ADC_InitStructure.ADC_Resolution = ADC_Resolution_12b;
 8001064:	2300      	movs	r3, #0
 8001066:	60bb      	str	r3, [r7, #8]
	ADC_InitStructure.ADC_ScanConvMode = DISABLE;
 8001068:	2300      	movs	r3, #0
 800106a:	733b      	strb	r3, [r7, #12]
	ADC_InitStructure.ADC_ContinuousConvMode = ENABLE;
 800106c:	2301      	movs	r3, #1
 800106e:	737b      	strb	r3, [r7, #13]
	ADC_InitStructure.ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;
 8001070:	2300      	movs	r3, #0
 8001072:	613b      	str	r3, [r7, #16]
	ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_T1_CC1;
 8001074:	2300      	movs	r3, #0
 8001076:	617b      	str	r3, [r7, #20]
	ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
 8001078:	2300      	movs	r3, #0
 800107a:	61bb      	str	r3, [r7, #24]
	ADC_InitStructure.ADC_NbrOfConversion = 1;
 800107c:	2301      	movs	r3, #1
 800107e:	773b      	strb	r3, [r7, #28]
	ADC_Init(ADC1, &ADC_InitStructure);
 8001080:	f107 0308 	add.w	r3, r7, #8
 8001084:	4619      	mov	r1, r3
 8001086:	4811      	ldr	r0, [pc, #68]	; (80010cc <LightSensor_AdcInit+0xb4>)
 8001088:	f000 fd30 	bl	8001aec <ADC_Init>

	//Polling Configure
	ADC_EOCOnEachRegularChannelCmd(ADC1, ENABLE);
 800108c:	2101      	movs	r1, #1
 800108e:	480f      	ldr	r0, [pc, #60]	; (80010cc <LightSensor_AdcInit+0xb4>)
 8001090:	f000 fea0 	bl	8001dd4 <ADC_EOCOnEachRegularChannelCmd>
	ADC_ContinuousModeCmd(ADC1, DISABLE);
 8001094:	2100      	movs	r1, #0
 8001096:	480d      	ldr	r0, [pc, #52]	; (80010cc <LightSensor_AdcInit+0xb4>)
 8001098:	f000 feb8 	bl	8001e0c <ADC_ContinuousModeCmd>
	ADC_DiscModeChannelCountConfig(ADC1, 1);
 800109c:	2101      	movs	r1, #1
 800109e:	480b      	ldr	r0, [pc, #44]	; (80010cc <LightSensor_AdcInit+0xb4>)
 80010a0:	f000 fed0 	bl	8001e44 <ADC_DiscModeChannelCountConfig>
	ADC_DiscModeCmd(ADC1, ENABLE);
 80010a4:	2101      	movs	r1, #1
 80010a6:	4809      	ldr	r0, [pc, #36]	; (80010cc <LightSensor_AdcInit+0xb4>)
 80010a8:	f000 feee 	bl	8001e88 <ADC_DiscModeCmd>


	/* ADC1 regular channel15 configuration ************************************/
	ADC_RegularChannelConfig(ADC1, ADC_Channel_15, 1, ADC_SampleTime_15Cycles);
 80010ac:	2301      	movs	r3, #1
 80010ae:	2201      	movs	r2, #1
 80010b0:	210f      	movs	r1, #15
 80010b2:	4806      	ldr	r0, [pc, #24]	; (80010cc <LightSensor_AdcInit+0xb4>)
 80010b4:	f000 fdb4 	bl	8001c20 <ADC_RegularChannelConfig>

	/* Enable ADC1 */
	ADC_Cmd(ADC1, ENABLE);
 80010b8:	2101      	movs	r1, #1
 80010ba:	4804      	ldr	r0, [pc, #16]	; (80010cc <LightSensor_AdcInit+0xb4>)
 80010bc:	f000 fd94 	bl	8001be8 <ADC_Cmd>
}
 80010c0:	bf00      	nop
 80010c2:	3730      	adds	r7, #48	; 0x30
 80010c4:	46bd      	mov	sp, r7
 80010c6:	bd80      	pop	{r7, pc}
 80010c8:	40020800 	.word	0x40020800
 80010cc:	40012000 	.word	0x40012000

080010d0 <LightSensor_AdcPollingRead>:

uint16_t LightSensor_AdcPollingRead(void)
{
 80010d0:	b580      	push	{r7, lr}
 80010d2:	b082      	sub	sp, #8
 80010d4:	af00      	add	r7, sp, #0
	uint16_t result = 0;
 80010d6:	2300      	movs	r3, #0
 80010d8:	80fb      	strh	r3, [r7, #6]

	//  Báº¯t Ä‘áº§u quÃ¡ trÃ¬nh chuyá»ƒn Ä‘á»•i dá»¯ liá»‡u ADC.
	ADC_SoftwareStartConv(ADCx_SENSOR);
 80010da:	480a      	ldr	r0, [pc, #40]	; (8001104 <LightSensor_AdcPollingRead+0x34>)
 80010dc:	f000 fe6a 	bl	8001db4 <ADC_SoftwareStartConv>

	// Äá»£i quÃ¡ trÃ¬nh chuyá»ƒn Ä‘á»•i Ä‘Æ°á»£c hoÃ n táº¥t Ä‘á»ƒ Ä‘á»c dá»¯ liá»‡u.
	while (ADC_GetFlagStatus(ADCx_SENSOR, ADC_FLAG_EOC) == RESET);
 80010e0:	bf00      	nop
 80010e2:	2102      	movs	r1, #2
 80010e4:	4807      	ldr	r0, [pc, #28]	; (8001104 <LightSensor_AdcPollingRead+0x34>)
 80010e6:	f000 fef8 	bl	8001eda <ADC_GetFlagStatus>
 80010ea:	4603      	mov	r3, r0
 80010ec:	2b00      	cmp	r3, #0
 80010ee:	d0f8      	beq.n	80010e2 <LightSensor_AdcPollingRead+0x12>

	// Read value
	result = ADC_GetConversionValue(ADCx_SENSOR);
 80010f0:	4804      	ldr	r0, [pc, #16]	; (8001104 <LightSensor_AdcPollingRead+0x34>)
 80010f2:	f000 fee5 	bl	8001ec0 <ADC_GetConversionValue>
 80010f6:	4603      	mov	r3, r0
 80010f8:	80fb      	strh	r3, [r7, #6]

	return result;
 80010fa:	88fb      	ldrh	r3, [r7, #6]

}
 80010fc:	4618      	mov	r0, r3
 80010fe:	3708      	adds	r7, #8
 8001100:	46bd      	mov	sp, r7
 8001102:	bd80      	pop	{r7, pc}
 8001104:	40012000 	.word	0x40012000

08001108 <AppInitCommon>:
static void AppInitCommon(void)
{
 8001108:	b580      	push	{r7, lr}
 800110a:	b082      	sub	sp, #8
 800110c:	af02      	add	r7, sp, #8
	SystemCoreClockUpdate(); 	//Cáº¥p nguá»“n clock cho vi Ä‘iá»u khiá»ƒn lÃ  84 Mhz.
 800110e:	f000 fc13 	bl	8001938 <SystemCoreClockUpdate>
	TimerInit();				//Khá»Ÿi táº¡o timer sá»­ dá»¥ng system tick.
 8001112:	f001 f92b 	bl	800236c <TimerInit>
	LightSensor_AdcInit();		//Khá»Ÿi táº¡o ngoáº¡i vi ADC á»Ÿ cháº¿ Ä‘á»™ Polling.
 8001116:	f7ff ff7f 	bl	8001018 <LightSensor_AdcInit>
	KalmanFilterInit(2, 2, 0.001); // Khá»Ÿi táº¡o bá»™ lá»c Kalman
 800111a:	ed9f 1a14 	vldr	s2, [pc, #80]	; 800116c <AppInitCommon+0x64>
 800111e:	eef0 0a00 	vmov.f32	s1, #0	; 0x40000000  2.0
 8001122:	eeb0 0a00 	vmov.f32	s0, #0	; 0x40000000  2.0
 8001126:	f000 f905 	bl	8001334 <KalmanFilterInit>
	Ucglib4WireSWSPI_begin(&ucg, UCG_FONT_MODE_SOLID);
 800112a:	2100      	movs	r1, #0
 800112c:	4810      	ldr	r0, [pc, #64]	; (8001170 <AppInitCommon+0x68>)
 800112e:	f001 fccb 	bl	8002ac8 <Ucglib4WireSWSPI_begin>
	ucg_SetFont(&ucg, ucg_font_ncenR10_hf);
 8001132:	4910      	ldr	r1, [pc, #64]	; (8001174 <AppInitCommon+0x6c>)
 8001134:	480e      	ldr	r0, [pc, #56]	; (8001170 <AppInitCommon+0x68>)
 8001136:	f002 fe27 	bl	8003d88 <ucg_SetFont>
	ucg_ClearScreen(&ucg);
 800113a:	480d      	ldr	r0, [pc, #52]	; (8001170 <AppInitCommon+0x68>)
 800113c:	f001 fd0b 	bl	8002b56 <ucg_ClearScreen>
	ucg_SetColor(&ucg, 0, 255, 255, 255);
 8001140:	23ff      	movs	r3, #255	; 0xff
 8001142:	9300      	str	r3, [sp, #0]
 8001144:	23ff      	movs	r3, #255	; 0xff
 8001146:	22ff      	movs	r2, #255	; 0xff
 8001148:	2100      	movs	r1, #0
 800114a:	4809      	ldr	r0, [pc, #36]	; (8001170 <AppInitCommon+0x68>)
 800114c:	f002 fefb 	bl	8003f46 <ucg_SetColor>
	ucg_SetColor(&ucg, 1, 0, 0, 0);
 8001150:	2300      	movs	r3, #0
 8001152:	9300      	str	r3, [sp, #0]
 8001154:	2300      	movs	r3, #0
 8001156:	2200      	movs	r2, #0
 8001158:	2101      	movs	r1, #1
 800115a:	4805      	ldr	r0, [pc, #20]	; (8001170 <AppInitCommon+0x68>)
 800115c:	f002 fef3 	bl	8003f46 <ucg_SetColor>
	ucg_SetRotate180(&ucg);
 8001160:	4803      	ldr	r0, [pc, #12]	; (8001170 <AppInitCommon+0x68>)
 8001162:	f002 ffeb 	bl	800413c <ucg_SetRotate180>

}
 8001166:	bf00      	nop
 8001168:	46bd      	mov	sp, r7
 800116a:	bd80      	pop	{r7, pc}
 800116c:	3a83126f 	.word	0x3a83126f
 8001170:	200000b0 	.word	0x200000b0
 8001174:	0800594c 	.word	0x0800594c

08001178 <Kanman_Light>:
uint16_t Kanman_Light(uint16_t lightLevel)
{
 8001178:	b580      	push	{r7, lr}
 800117a:	b082      	sub	sp, #8
 800117c:	af00      	add	r7, sp, #0
 800117e:	4603      	mov	r3, r0
 8001180:	80fb      	strh	r3, [r7, #6]
	lightLevelAfterFilter = KalmanFilter_updateEstimate(lightLevel);
 8001182:	88fb      	ldrh	r3, [r7, #6]
 8001184:	ee07 3a90 	vmov	s15, r3
 8001188:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800118c:	eeb0 0a67 	vmov.f32	s0, s15
 8001190:	f000 f8ee 	bl	8001370 <KalmanFilter_updateEstimate>
 8001194:	eef0 7a40 	vmov.f32	s15, s0
 8001198:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800119c:	ee17 3a90 	vmov	r3, s15
 80011a0:	b29a      	uxth	r2, r3
 80011a2:	4b04      	ldr	r3, [pc, #16]	; (80011b4 <Kanman_Light+0x3c>)
 80011a4:	801a      	strh	r2, [r3, #0]

	return lightLevelAfterFilter;
 80011a6:	4b03      	ldr	r3, [pc, #12]	; (80011b4 <Kanman_Light+0x3c>)
 80011a8:	881b      	ldrh	r3, [r3, #0]
}
 80011aa:	4618      	mov	r0, r3
 80011ac:	3708      	adds	r7, #8
 80011ae:	46bd      	mov	sp, r7
 80011b0:	bd80      	pop	{r7, pc}
 80011b2:	bf00      	nop
 80011b4:	20000096 	.word	0x20000096

080011b8 <ABL_Process>:
static void ABL_Process(void)
{
 80011b8:	b580      	push	{r7, lr}
 80011ba:	b084      	sub	sp, #16
 80011bc:	af02      	add	r7, sp, #8
	uint32_t dwTimeCurrent;
	static uint32_t dwTimeTotal, dwTimeInit;

	dwTimeCurrent = GetMilSecTick();
 80011be:	f001 f9a9 	bl	8002514 <GetMilSecTick>
 80011c2:	6078      	str	r0, [r7, #4]

	if(dwTimeCurrent >= dwTimeInit)
 80011c4:	4b24      	ldr	r3, [pc, #144]	; (8001258 <ABL_Process+0xa0>)
 80011c6:	681b      	ldr	r3, [r3, #0]
 80011c8:	687a      	ldr	r2, [r7, #4]
 80011ca:	429a      	cmp	r2, r3
 80011cc:	d309      	bcc.n	80011e2 <ABL_Process+0x2a>
	{
		dwTimeTotal += dwTimeCurrent - dwTimeInit;
 80011ce:	4b22      	ldr	r3, [pc, #136]	; (8001258 <ABL_Process+0xa0>)
 80011d0:	681b      	ldr	r3, [r3, #0]
 80011d2:	687a      	ldr	r2, [r7, #4]
 80011d4:	1ad2      	subs	r2, r2, r3
 80011d6:	4b21      	ldr	r3, [pc, #132]	; (800125c <ABL_Process+0xa4>)
 80011d8:	681b      	ldr	r3, [r3, #0]
 80011da:	4413      	add	r3, r2
 80011dc:	4a1f      	ldr	r2, [pc, #124]	; (800125c <ABL_Process+0xa4>)
 80011de:	6013      	str	r3, [r2, #0]
 80011e0:	e009      	b.n	80011f6 <ABL_Process+0x3e>
	}
	else
	{
		dwTimeTotal += 0xFFFFFFFFU - dwTimeCurrent + dwTimeInit;
 80011e2:	4b1d      	ldr	r3, [pc, #116]	; (8001258 <ABL_Process+0xa0>)
 80011e4:	681a      	ldr	r2, [r3, #0]
 80011e6:	687b      	ldr	r3, [r7, #4]
 80011e8:	1ad2      	subs	r2, r2, r3
 80011ea:	4b1c      	ldr	r3, [pc, #112]	; (800125c <ABL_Process+0xa4>)
 80011ec:	681b      	ldr	r3, [r3, #0]
 80011ee:	4413      	add	r3, r2
 80011f0:	3b01      	subs	r3, #1
 80011f2:	4a1a      	ldr	r2, [pc, #104]	; (800125c <ABL_Process+0xa4>)
 80011f4:	6013      	str	r3, [r2, #0]
	}

	if(dwTimeTotal >= 100)
 80011f6:	4b19      	ldr	r3, [pc, #100]	; (800125c <ABL_Process+0xa4>)
 80011f8:	681b      	ldr	r3, [r3, #0]
 80011fa:	2b63      	cmp	r3, #99	; 0x63
 80011fc:	d925      	bls.n	800124a <ABL_Process+0x92>
	{
		dwTimeTotal = 0;
 80011fe:	4b17      	ldr	r3, [pc, #92]	; (800125c <ABL_Process+0xa4>)
 8001200:	2200      	movs	r2, #0
 8001202:	601a      	str	r2, [r3, #0]
		AdcValue  = LightSensor_AdcPollingRead(); //Äá»c giÃ¡ trá»‹ ADC Ä‘o Ä‘Æ°á»£c tá»« cáº£m biáº¿n Ã¡nh sÃ¡ng
 8001204:	f7ff ff64 	bl	80010d0 <LightSensor_AdcPollingRead>
 8001208:	4603      	mov	r3, r0
 800120a:	461a      	mov	r2, r3
 800120c:	4b14      	ldr	r3, [pc, #80]	; (8001260 <ABL_Process+0xa8>)
 800120e:	801a      	strh	r2, [r3, #0]
		Kanman_light = Kanman_Light(AdcValue);
 8001210:	4b13      	ldr	r3, [pc, #76]	; (8001260 <ABL_Process+0xa8>)
 8001212:	881b      	ldrh	r3, [r3, #0]
 8001214:	4618      	mov	r0, r3
 8001216:	f7ff ffaf 	bl	8001178 <Kanman_Light>
 800121a:	4603      	mov	r3, r0
 800121c:	461a      	mov	r2, r3
 800121e:	4b11      	ldr	r3, [pc, #68]	; (8001264 <ABL_Process+0xac>)
 8001220:	801a      	strh	r2, [r3, #0]

		memset(src5, 0, sizeof(src5));
 8001222:	2214      	movs	r2, #20
 8001224:	2100      	movs	r1, #0
 8001226:	4810      	ldr	r0, [pc, #64]	; (8001268 <ABL_Process+0xb0>)
 8001228:	f003 fe60 	bl	8004eec <memset>
		sprintf(src5, " Light = %d lux  ", Kanman_light);
 800122c:	4b0d      	ldr	r3, [pc, #52]	; (8001264 <ABL_Process+0xac>)
 800122e:	881b      	ldrh	r3, [r3, #0]
 8001230:	461a      	mov	r2, r3
 8001232:	490e      	ldr	r1, [pc, #56]	; (800126c <ABL_Process+0xb4>)
 8001234:	480c      	ldr	r0, [pc, #48]	; (8001268 <ABL_Process+0xb0>)
 8001236:	f003 fe39 	bl	8004eac <siprintf>
		ucg_DrawString(&ucg, 0, 92, 0, src5);
 800123a:	4b0b      	ldr	r3, [pc, #44]	; (8001268 <ABL_Process+0xb0>)
 800123c:	9300      	str	r3, [sp, #0]
 800123e:	2300      	movs	r3, #0
 8001240:	225c      	movs	r2, #92	; 0x5c
 8001242:	2100      	movs	r1, #0
 8001244:	480a      	ldr	r0, [pc, #40]	; (8001270 <ABL_Process+0xb8>)
 8001246:	f002 fcdb 	bl	8003c00 <ucg_DrawString>
	}
	dwTimeInit = dwTimeCurrent;
 800124a:	4a03      	ldr	r2, [pc, #12]	; (8001258 <ABL_Process+0xa0>)
 800124c:	687b      	ldr	r3, [r7, #4]
 800124e:	6013      	str	r3, [r2, #0]

}
 8001250:	bf00      	nop
 8001252:	3708      	adds	r7, #8
 8001254:	46bd      	mov	sp, r7
 8001256:	bd80      	pop	{r7, pc}
 8001258:	200001c8 	.word	0x200001c8
 800125c:	200001cc 	.word	0x200001cc
 8001260:	20000094 	.word	0x20000094
 8001264:	20000098 	.word	0x20000098
 8001268:	2000009c 	.word	0x2000009c
 800126c:	08005848 	.word	0x08005848
 8001270:	200000b0 	.word	0x200000b0

08001274 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001274:	b580      	push	{r7, lr}
 8001276:	b086      	sub	sp, #24
 8001278:	af00      	add	r7, sp, #0
 800127a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800127c:	4a14      	ldr	r2, [pc, #80]	; (80012d0 <_sbrk+0x5c>)
 800127e:	4b15      	ldr	r3, [pc, #84]	; (80012d4 <_sbrk+0x60>)
 8001280:	1ad3      	subs	r3, r2, r3
 8001282:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001284:	697b      	ldr	r3, [r7, #20]
 8001286:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001288:	4b13      	ldr	r3, [pc, #76]	; (80012d8 <_sbrk+0x64>)
 800128a:	681b      	ldr	r3, [r3, #0]
 800128c:	2b00      	cmp	r3, #0
 800128e:	d102      	bne.n	8001296 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001290:	4b11      	ldr	r3, [pc, #68]	; (80012d8 <_sbrk+0x64>)
 8001292:	4a12      	ldr	r2, [pc, #72]	; (80012dc <_sbrk+0x68>)
 8001294:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001296:	4b10      	ldr	r3, [pc, #64]	; (80012d8 <_sbrk+0x64>)
 8001298:	681a      	ldr	r2, [r3, #0]
 800129a:	687b      	ldr	r3, [r7, #4]
 800129c:	4413      	add	r3, r2
 800129e:	693a      	ldr	r2, [r7, #16]
 80012a0:	429a      	cmp	r2, r3
 80012a2:	d207      	bcs.n	80012b4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80012a4:	f003 fe2a 	bl	8004efc <__errno>
 80012a8:	4603      	mov	r3, r0
 80012aa:	220c      	movs	r2, #12
 80012ac:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80012ae:	f04f 33ff 	mov.w	r3, #4294967295
 80012b2:	e009      	b.n	80012c8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80012b4:	4b08      	ldr	r3, [pc, #32]	; (80012d8 <_sbrk+0x64>)
 80012b6:	681b      	ldr	r3, [r3, #0]
 80012b8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80012ba:	4b07      	ldr	r3, [pc, #28]	; (80012d8 <_sbrk+0x64>)
 80012bc:	681a      	ldr	r2, [r3, #0]
 80012be:	687b      	ldr	r3, [r7, #4]
 80012c0:	4413      	add	r3, r2
 80012c2:	4a05      	ldr	r2, [pc, #20]	; (80012d8 <_sbrk+0x64>)
 80012c4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80012c6:	68fb      	ldr	r3, [r7, #12]
}
 80012c8:	4618      	mov	r0, r3
 80012ca:	3718      	adds	r7, #24
 80012cc:	46bd      	mov	sp, r7
 80012ce:	bd80      	pop	{r7, pc}
 80012d0:	20018000 	.word	0x20018000
 80012d4:	00000400 	.word	0x00000400
 80012d8:	200001d0 	.word	0x200001d0
 80012dc:	200014e0 	.word	0x200014e0

080012e0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80012e0:	480d      	ldr	r0, [pc, #52]	; (8001318 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80012e2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80012e4:	f000 faf2 	bl	80018cc <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80012e8:	480c      	ldr	r0, [pc, #48]	; (800131c <LoopForever+0x6>)
  ldr r1, =_edata
 80012ea:	490d      	ldr	r1, [pc, #52]	; (8001320 <LoopForever+0xa>)
  ldr r2, =_sidata
 80012ec:	4a0d      	ldr	r2, [pc, #52]	; (8001324 <LoopForever+0xe>)
  movs r3, #0
 80012ee:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80012f0:	e002      	b.n	80012f8 <LoopCopyDataInit>

080012f2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80012f2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80012f4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80012f6:	3304      	adds	r3, #4

080012f8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80012f8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80012fa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80012fc:	d3f9      	bcc.n	80012f2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80012fe:	4a0a      	ldr	r2, [pc, #40]	; (8001328 <LoopForever+0x12>)
  ldr r4, =_ebss
 8001300:	4c0a      	ldr	r4, [pc, #40]	; (800132c <LoopForever+0x16>)
  movs r3, #0
 8001302:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001304:	e001      	b.n	800130a <LoopFillZerobss>

08001306 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001306:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001308:	3204      	adds	r2, #4

0800130a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800130a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800130c:	d3fb      	bcc.n	8001306 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800130e:	f003 fdfb 	bl	8004f08 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001312:	f7ff faeb 	bl	80008ec <main>

08001316 <LoopForever>:

LoopForever:
  b LoopForever
 8001316:	e7fe      	b.n	8001316 <LoopForever>
  ldr   r0, =_estack
 8001318:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 800131c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001320:	20000078 	.word	0x20000078
  ldr r2, =_sidata
 8001324:	080070a8 	.word	0x080070a8
  ldr r2, =_sbss
 8001328:	20000078 	.word	0x20000078
  ldr r4, =_ebss
 800132c:	200014e0 	.word	0x200014e0

08001330 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001330:	e7fe      	b.n	8001330 <ADC_IRQHandler>
	...

08001334 <KalmanFilterInit>:
*
*e_est: Ước tính Không chắc chắn
*- Có thể được bắt đầu với cùng một giá trị như e_mea vì bộ lọc kalman sẽ điều chỉnh giá trị của nó.
*q: Phương sai Quá trình - thường là một số nhỏ trong khoảng từ 0,001 đến 1. */
void KalmanFilterInit(float mea_e, float est_e, float q)
{
 8001334:	b480      	push	{r7}
 8001336:	b085      	sub	sp, #20
 8001338:	af00      	add	r7, sp, #0
 800133a:	ed87 0a03 	vstr	s0, [r7, #12]
 800133e:	edc7 0a02 	vstr	s1, [r7, #8]
 8001342:	ed87 1a01 	vstr	s2, [r7, #4]
  _err_measure=mea_e;
 8001346:	4a07      	ldr	r2, [pc, #28]	; (8001364 <KalmanFilterInit+0x30>)
 8001348:	68fb      	ldr	r3, [r7, #12]
 800134a:	6013      	str	r3, [r2, #0]
  _err_estimate=est_e;
 800134c:	4a06      	ldr	r2, [pc, #24]	; (8001368 <KalmanFilterInit+0x34>)
 800134e:	68bb      	ldr	r3, [r7, #8]
 8001350:	6013      	str	r3, [r2, #0]
  _q = q;
 8001352:	4a06      	ldr	r2, [pc, #24]	; (800136c <KalmanFilterInit+0x38>)
 8001354:	687b      	ldr	r3, [r7, #4]
 8001356:	6013      	str	r3, [r2, #0]
}
 8001358:	bf00      	nop
 800135a:	3714      	adds	r7, #20
 800135c:	46bd      	mov	sp, r7
 800135e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001362:	4770      	bx	lr
 8001364:	200001d4 	.word	0x200001d4
 8001368:	200001d8 	.word	0x200001d8
 800136c:	200001dc 	.word	0x200001dc

08001370 <KalmanFilter_updateEstimate>:

float KalmanFilter_updateEstimate(float mea)
{
 8001370:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8001374:	b082      	sub	sp, #8
 8001376:	af00      	add	r7, sp, #0
 8001378:	ed87 0a01 	vstr	s0, [r7, #4]
  _kalman_gain = _err_estimate/(_err_estimate + _err_measure);
 800137c:	4b3d      	ldr	r3, [pc, #244]	; (8001474 <KalmanFilter_updateEstimate+0x104>)
 800137e:	edd3 6a00 	vldr	s13, [r3]
 8001382:	4b3c      	ldr	r3, [pc, #240]	; (8001474 <KalmanFilter_updateEstimate+0x104>)
 8001384:	ed93 7a00 	vldr	s14, [r3]
 8001388:	4b3b      	ldr	r3, [pc, #236]	; (8001478 <KalmanFilter_updateEstimate+0x108>)
 800138a:	edd3 7a00 	vldr	s15, [r3]
 800138e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001392:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001396:	4b39      	ldr	r3, [pc, #228]	; (800147c <KalmanFilter_updateEstimate+0x10c>)
 8001398:	edc3 7a00 	vstr	s15, [r3]
  _current_estimate = _last_estimate + _kalman_gain * (mea - _last_estimate);
 800139c:	4b38      	ldr	r3, [pc, #224]	; (8001480 <KalmanFilter_updateEstimate+0x110>)
 800139e:	edd3 7a00 	vldr	s15, [r3]
 80013a2:	ed97 7a01 	vldr	s14, [r7, #4]
 80013a6:	ee37 7a67 	vsub.f32	s14, s14, s15
 80013aa:	4b34      	ldr	r3, [pc, #208]	; (800147c <KalmanFilter_updateEstimate+0x10c>)
 80013ac:	edd3 7a00 	vldr	s15, [r3]
 80013b0:	ee27 7a27 	vmul.f32	s14, s14, s15
 80013b4:	4b32      	ldr	r3, [pc, #200]	; (8001480 <KalmanFilter_updateEstimate+0x110>)
 80013b6:	edd3 7a00 	vldr	s15, [r3]
 80013ba:	ee77 7a27 	vadd.f32	s15, s14, s15
 80013be:	4b31      	ldr	r3, [pc, #196]	; (8001484 <KalmanFilter_updateEstimate+0x114>)
 80013c0:	edc3 7a00 	vstr	s15, [r3]
  _err_estimate =  (1.0 - _kalman_gain)*_err_estimate + fabs(_last_estimate-_current_estimate)*_q;
 80013c4:	4b2d      	ldr	r3, [pc, #180]	; (800147c <KalmanFilter_updateEstimate+0x10c>)
 80013c6:	681b      	ldr	r3, [r3, #0]
 80013c8:	4618      	mov	r0, r3
 80013ca:	f7ff f9e7 	bl	800079c <__aeabi_f2d>
 80013ce:	4602      	mov	r2, r0
 80013d0:	460b      	mov	r3, r1
 80013d2:	f04f 0000 	mov.w	r0, #0
 80013d6:	492c      	ldr	r1, [pc, #176]	; (8001488 <KalmanFilter_updateEstimate+0x118>)
 80013d8:	f7ff f880 	bl	80004dc <__aeabi_dsub>
 80013dc:	4602      	mov	r2, r0
 80013de:	460b      	mov	r3, r1
 80013e0:	4614      	mov	r4, r2
 80013e2:	461d      	mov	r5, r3
 80013e4:	4b23      	ldr	r3, [pc, #140]	; (8001474 <KalmanFilter_updateEstimate+0x104>)
 80013e6:	681b      	ldr	r3, [r3, #0]
 80013e8:	4618      	mov	r0, r3
 80013ea:	f7ff f9d7 	bl	800079c <__aeabi_f2d>
 80013ee:	4602      	mov	r2, r0
 80013f0:	460b      	mov	r3, r1
 80013f2:	4620      	mov	r0, r4
 80013f4:	4629      	mov	r1, r5
 80013f6:	f7fe ff43 	bl	8000280 <__aeabi_dmul>
 80013fa:	4602      	mov	r2, r0
 80013fc:	460b      	mov	r3, r1
 80013fe:	4690      	mov	r8, r2
 8001400:	4699      	mov	r9, r3
 8001402:	4b1f      	ldr	r3, [pc, #124]	; (8001480 <KalmanFilter_updateEstimate+0x110>)
 8001404:	ed93 7a00 	vldr	s14, [r3]
 8001408:	4b1e      	ldr	r3, [pc, #120]	; (8001484 <KalmanFilter_updateEstimate+0x114>)
 800140a:	edd3 7a00 	vldr	s15, [r3]
 800140e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001412:	eef0 7ae7 	vabs.f32	s15, s15
 8001416:	ee17 0a90 	vmov	r0, s15
 800141a:	f7ff f9bf 	bl	800079c <__aeabi_f2d>
 800141e:	4604      	mov	r4, r0
 8001420:	460d      	mov	r5, r1
 8001422:	4b1a      	ldr	r3, [pc, #104]	; (800148c <KalmanFilter_updateEstimate+0x11c>)
 8001424:	681b      	ldr	r3, [r3, #0]
 8001426:	4618      	mov	r0, r3
 8001428:	f7ff f9b8 	bl	800079c <__aeabi_f2d>
 800142c:	4602      	mov	r2, r0
 800142e:	460b      	mov	r3, r1
 8001430:	4620      	mov	r0, r4
 8001432:	4629      	mov	r1, r5
 8001434:	f7fe ff24 	bl	8000280 <__aeabi_dmul>
 8001438:	4602      	mov	r2, r0
 800143a:	460b      	mov	r3, r1
 800143c:	4640      	mov	r0, r8
 800143e:	4649      	mov	r1, r9
 8001440:	f7ff f84e 	bl	80004e0 <__adddf3>
 8001444:	4602      	mov	r2, r0
 8001446:	460b      	mov	r3, r1
 8001448:	4610      	mov	r0, r2
 800144a:	4619      	mov	r1, r3
 800144c:	f7ff f9fe 	bl	800084c <__aeabi_d2f>
 8001450:	4603      	mov	r3, r0
 8001452:	4a08      	ldr	r2, [pc, #32]	; (8001474 <KalmanFilter_updateEstimate+0x104>)
 8001454:	6013      	str	r3, [r2, #0]
  _last_estimate=_current_estimate;
 8001456:	4b0b      	ldr	r3, [pc, #44]	; (8001484 <KalmanFilter_updateEstimate+0x114>)
 8001458:	681b      	ldr	r3, [r3, #0]
 800145a:	4a09      	ldr	r2, [pc, #36]	; (8001480 <KalmanFilter_updateEstimate+0x110>)
 800145c:	6013      	str	r3, [r2, #0]

  return _current_estimate;
 800145e:	4b09      	ldr	r3, [pc, #36]	; (8001484 <KalmanFilter_updateEstimate+0x114>)
 8001460:	681b      	ldr	r3, [r3, #0]
 8001462:	ee07 3a90 	vmov	s15, r3
}
 8001466:	eeb0 0a67 	vmov.f32	s0, s15
 800146a:	3708      	adds	r7, #8
 800146c:	46bd      	mov	sp, r7
 800146e:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8001472:	bf00      	nop
 8001474:	200001d8 	.word	0x200001d8
 8001478:	200001d4 	.word	0x200001d4
 800147c:	200001e8 	.word	0x200001e8
 8001480:	200001e4 	.word	0x200001e4
 8001484:	200001e0 	.word	0x200001e0
 8001488:	3ff00000 	.word	0x3ff00000
 800148c:	200001dc 	.word	0x200001dc

08001490 <GPIO_Init>:
  * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
{
 8001490:	b480      	push	{r7}
 8001492:	b087      	sub	sp, #28
 8001494:	af00      	add	r7, sp, #0
 8001496:	6078      	str	r0, [r7, #4]
 8001498:	6039      	str	r1, [r7, #0]
  uint32_t pinpos = 0x00, pos = 0x00 , currentpin = 0x00;
 800149a:	2300      	movs	r3, #0
 800149c:	617b      	str	r3, [r7, #20]
 800149e:	2300      	movs	r3, #0
 80014a0:	613b      	str	r3, [r7, #16]
 80014a2:	2300      	movs	r3, #0
 80014a4:	60fb      	str	r3, [r7, #12]

  /* ------------------------- Configure the port pins ---------------- */
  /*-- GPIO Mode Configuration --*/
  for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 80014a6:	2300      	movs	r3, #0
 80014a8:	617b      	str	r3, [r7, #20]
 80014aa:	e076      	b.n	800159a <GPIO_Init+0x10a>
  {
    pos = ((uint32_t)0x01) << pinpos;
 80014ac:	2201      	movs	r2, #1
 80014ae:	697b      	ldr	r3, [r7, #20]
 80014b0:	fa02 f303 	lsl.w	r3, r2, r3
 80014b4:	613b      	str	r3, [r7, #16]
    /* Get the port pins position */
    currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 80014b6:	683b      	ldr	r3, [r7, #0]
 80014b8:	681b      	ldr	r3, [r3, #0]
 80014ba:	693a      	ldr	r2, [r7, #16]
 80014bc:	4013      	ands	r3, r2
 80014be:	60fb      	str	r3, [r7, #12]

    if (currentpin == pos)
 80014c0:	68fa      	ldr	r2, [r7, #12]
 80014c2:	693b      	ldr	r3, [r7, #16]
 80014c4:	429a      	cmp	r2, r3
 80014c6:	d165      	bne.n	8001594 <GPIO_Init+0x104>
    {
      GPIOx->MODER  &= ~(GPIO_MODER_MODER0 << (pinpos * 2));
 80014c8:	687b      	ldr	r3, [r7, #4]
 80014ca:	681a      	ldr	r2, [r3, #0]
 80014cc:	697b      	ldr	r3, [r7, #20]
 80014ce:	005b      	lsls	r3, r3, #1
 80014d0:	2103      	movs	r1, #3
 80014d2:	fa01 f303 	lsl.w	r3, r1, r3
 80014d6:	43db      	mvns	r3, r3
 80014d8:	401a      	ands	r2, r3
 80014da:	687b      	ldr	r3, [r7, #4]
 80014dc:	601a      	str	r2, [r3, #0]
      GPIOx->MODER |= (((uint32_t)GPIO_InitStruct->GPIO_Mode) << (pinpos * 2));
 80014de:	687b      	ldr	r3, [r7, #4]
 80014e0:	681a      	ldr	r2, [r3, #0]
 80014e2:	683b      	ldr	r3, [r7, #0]
 80014e4:	791b      	ldrb	r3, [r3, #4]
 80014e6:	4619      	mov	r1, r3
 80014e8:	697b      	ldr	r3, [r7, #20]
 80014ea:	005b      	lsls	r3, r3, #1
 80014ec:	fa01 f303 	lsl.w	r3, r1, r3
 80014f0:	431a      	orrs	r2, r3
 80014f2:	687b      	ldr	r3, [r7, #4]
 80014f4:	601a      	str	r2, [r3, #0]

      if ((GPIO_InitStruct->GPIO_Mode == GPIO_Mode_OUT) || (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_AF))
 80014f6:	683b      	ldr	r3, [r7, #0]
 80014f8:	791b      	ldrb	r3, [r3, #4]
 80014fa:	2b01      	cmp	r3, #1
 80014fc:	d003      	beq.n	8001506 <GPIO_Init+0x76>
 80014fe:	683b      	ldr	r3, [r7, #0]
 8001500:	791b      	ldrb	r3, [r3, #4]
 8001502:	2b02      	cmp	r3, #2
 8001504:	d12e      	bne.n	8001564 <GPIO_Init+0xd4>
      {
        /* Speed mode configuration */
        GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (pinpos * 2));
 8001506:	687b      	ldr	r3, [r7, #4]
 8001508:	689a      	ldr	r2, [r3, #8]
 800150a:	697b      	ldr	r3, [r7, #20]
 800150c:	005b      	lsls	r3, r3, #1
 800150e:	2103      	movs	r1, #3
 8001510:	fa01 f303 	lsl.w	r3, r1, r3
 8001514:	43db      	mvns	r3, r3
 8001516:	401a      	ands	r2, r3
 8001518:	687b      	ldr	r3, [r7, #4]
 800151a:	609a      	str	r2, [r3, #8]
        GPIOx->OSPEEDR |= ((uint32_t)(GPIO_InitStruct->GPIO_Speed) << (pinpos * 2));
 800151c:	687b      	ldr	r3, [r7, #4]
 800151e:	689a      	ldr	r2, [r3, #8]
 8001520:	683b      	ldr	r3, [r7, #0]
 8001522:	795b      	ldrb	r3, [r3, #5]
 8001524:	4619      	mov	r1, r3
 8001526:	697b      	ldr	r3, [r7, #20]
 8001528:	005b      	lsls	r3, r3, #1
 800152a:	fa01 f303 	lsl.w	r3, r1, r3
 800152e:	431a      	orrs	r2, r3
 8001530:	687b      	ldr	r3, [r7, #4]
 8001532:	609a      	str	r2, [r3, #8]

        /* Output mode configuration*/
        GPIOx->OTYPER  &= ~((GPIO_OTYPER_OT_0) << ((uint16_t)pinpos)) ;
 8001534:	687b      	ldr	r3, [r7, #4]
 8001536:	685a      	ldr	r2, [r3, #4]
 8001538:	697b      	ldr	r3, [r7, #20]
 800153a:	b29b      	uxth	r3, r3
 800153c:	4619      	mov	r1, r3
 800153e:	2301      	movs	r3, #1
 8001540:	408b      	lsls	r3, r1
 8001542:	43db      	mvns	r3, r3
 8001544:	401a      	ands	r2, r3
 8001546:	687b      	ldr	r3, [r7, #4]
 8001548:	605a      	str	r2, [r3, #4]
        GPIOx->OTYPER |= (uint16_t)(((uint16_t)GPIO_InitStruct->GPIO_OType) << ((uint16_t)pinpos));
 800154a:	687b      	ldr	r3, [r7, #4]
 800154c:	685b      	ldr	r3, [r3, #4]
 800154e:	683a      	ldr	r2, [r7, #0]
 8001550:	7992      	ldrb	r2, [r2, #6]
 8001552:	4611      	mov	r1, r2
 8001554:	697a      	ldr	r2, [r7, #20]
 8001556:	b292      	uxth	r2, r2
 8001558:	fa01 f202 	lsl.w	r2, r1, r2
 800155c:	b292      	uxth	r2, r2
 800155e:	431a      	orrs	r2, r3
 8001560:	687b      	ldr	r3, [r7, #4]
 8001562:	605a      	str	r2, [r3, #4]
      }

      /* Pull-up Pull down resistor configuration*/
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << ((uint16_t)pinpos * 2));
 8001564:	687b      	ldr	r3, [r7, #4]
 8001566:	68da      	ldr	r2, [r3, #12]
 8001568:	697b      	ldr	r3, [r7, #20]
 800156a:	b29b      	uxth	r3, r3
 800156c:	005b      	lsls	r3, r3, #1
 800156e:	2103      	movs	r1, #3
 8001570:	fa01 f303 	lsl.w	r3, r1, r3
 8001574:	43db      	mvns	r3, r3
 8001576:	401a      	ands	r2, r3
 8001578:	687b      	ldr	r3, [r7, #4]
 800157a:	60da      	str	r2, [r3, #12]
      GPIOx->PUPDR |= (((uint32_t)GPIO_InitStruct->GPIO_PuPd) << (pinpos * 2));
 800157c:	687b      	ldr	r3, [r7, #4]
 800157e:	68da      	ldr	r2, [r3, #12]
 8001580:	683b      	ldr	r3, [r7, #0]
 8001582:	79db      	ldrb	r3, [r3, #7]
 8001584:	4619      	mov	r1, r3
 8001586:	697b      	ldr	r3, [r7, #20]
 8001588:	005b      	lsls	r3, r3, #1
 800158a:	fa01 f303 	lsl.w	r3, r1, r3
 800158e:	431a      	orrs	r2, r3
 8001590:	687b      	ldr	r3, [r7, #4]
 8001592:	60da      	str	r2, [r3, #12]
  for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 8001594:	697b      	ldr	r3, [r7, #20]
 8001596:	3301      	adds	r3, #1
 8001598:	617b      	str	r3, [r7, #20]
 800159a:	697b      	ldr	r3, [r7, #20]
 800159c:	2b0f      	cmp	r3, #15
 800159e:	d985      	bls.n	80014ac <GPIO_Init+0x1c>
    }
  }
}
 80015a0:	bf00      	nop
 80015a2:	bf00      	nop
 80015a4:	371c      	adds	r7, #28
 80015a6:	46bd      	mov	sp, r7
 80015a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015ac:	4770      	bx	lr

080015ae <GPIO_WriteBit>:
  *            @arg Bit_RESET: to clear the port pin
  *            @arg Bit_SET: to set the port pin
  * @retval None
  */
void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal)
{
 80015ae:	b480      	push	{r7}
 80015b0:	b083      	sub	sp, #12
 80015b2:	af00      	add	r7, sp, #0
 80015b4:	6078      	str	r0, [r7, #4]
 80015b6:	460b      	mov	r3, r1
 80015b8:	807b      	strh	r3, [r7, #2]
 80015ba:	4613      	mov	r3, r2
 80015bc:	707b      	strb	r3, [r7, #1]
  if (BitVal != Bit_RESET)
 80015be:	787b      	ldrb	r3, [r7, #1]
 80015c0:	2b00      	cmp	r3, #0
 80015c2:	d003      	beq.n	80015cc <GPIO_WriteBit+0x1e>
  {
    GPIOx->BSRRL = GPIO_Pin;
 80015c4:	687b      	ldr	r3, [r7, #4]
 80015c6:	887a      	ldrh	r2, [r7, #2]
 80015c8:	831a      	strh	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRRH = GPIO_Pin ;
  }
}
 80015ca:	e002      	b.n	80015d2 <GPIO_WriteBit+0x24>
    GPIOx->BSRRH = GPIO_Pin ;
 80015cc:	687b      	ldr	r3, [r7, #4]
 80015ce:	887a      	ldrh	r2, [r7, #2]
 80015d0:	835a      	strh	r2, [r3, #26]
}
 80015d2:	bf00      	nop
 80015d4:	370c      	adds	r7, #12
 80015d6:	46bd      	mov	sp, r7
 80015d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015dc:	4770      	bx	lr

080015de <GPIO_PinAFConfig>:
  *            @arg GPIO_AF_LTDC: Connect LTDC pins to AF14 for STM32F429xx/439xx devices.
  *            @arg GPIO_AF_EVENTOUT: Connect EVENTOUT pins to AF15
  * @retval None
  */
void GPIO_PinAFConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_PinSource, uint8_t GPIO_AF)
{
 80015de:	b480      	push	{r7}
 80015e0:	b085      	sub	sp, #20
 80015e2:	af00      	add	r7, sp, #0
 80015e4:	6078      	str	r0, [r7, #4]
 80015e6:	460b      	mov	r3, r1
 80015e8:	807b      	strh	r3, [r7, #2]
 80015ea:	4613      	mov	r3, r2
 80015ec:	707b      	strb	r3, [r7, #1]
  uint32_t temp = 0x00;
 80015ee:	2300      	movs	r3, #0
 80015f0:	60fb      	str	r3, [r7, #12]
  uint32_t temp_2 = 0x00;
 80015f2:	2300      	movs	r3, #0
 80015f4:	60bb      	str	r3, [r7, #8]

  temp = ((uint32_t)(GPIO_AF) << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4)) ;
 80015f6:	787a      	ldrb	r2, [r7, #1]
 80015f8:	887b      	ldrh	r3, [r7, #2]
 80015fa:	f003 0307 	and.w	r3, r3, #7
 80015fe:	009b      	lsls	r3, r3, #2
 8001600:	fa02 f303 	lsl.w	r3, r2, r3
 8001604:	60fb      	str	r3, [r7, #12]
  GPIOx->AFR[GPIO_PinSource >> 0x03] &= ~((uint32_t)0xF << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4)) ;
 8001606:	887b      	ldrh	r3, [r7, #2]
 8001608:	08db      	lsrs	r3, r3, #3
 800160a:	b29b      	uxth	r3, r3
 800160c:	461a      	mov	r2, r3
 800160e:	687b      	ldr	r3, [r7, #4]
 8001610:	3208      	adds	r2, #8
 8001612:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8001616:	887b      	ldrh	r3, [r7, #2]
 8001618:	f003 0307 	and.w	r3, r3, #7
 800161c:	009b      	lsls	r3, r3, #2
 800161e:	210f      	movs	r1, #15
 8001620:	fa01 f303 	lsl.w	r3, r1, r3
 8001624:	43db      	mvns	r3, r3
 8001626:	8879      	ldrh	r1, [r7, #2]
 8001628:	08c9      	lsrs	r1, r1, #3
 800162a:	b289      	uxth	r1, r1
 800162c:	4608      	mov	r0, r1
 800162e:	ea02 0103 	and.w	r1, r2, r3
 8001632:	687b      	ldr	r3, [r7, #4]
 8001634:	f100 0208 	add.w	r2, r0, #8
 8001638:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  temp_2 = GPIOx->AFR[GPIO_PinSource >> 0x03] | temp;
 800163c:	887b      	ldrh	r3, [r7, #2]
 800163e:	08db      	lsrs	r3, r3, #3
 8001640:	b29b      	uxth	r3, r3
 8001642:	461a      	mov	r2, r3
 8001644:	687b      	ldr	r3, [r7, #4]
 8001646:	3208      	adds	r2, #8
 8001648:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800164c:	68fa      	ldr	r2, [r7, #12]
 800164e:	4313      	orrs	r3, r2
 8001650:	60bb      	str	r3, [r7, #8]
  GPIOx->AFR[GPIO_PinSource >> 0x03] = temp_2;
 8001652:	887b      	ldrh	r3, [r7, #2]
 8001654:	08db      	lsrs	r3, r3, #3
 8001656:	b29b      	uxth	r3, r3
 8001658:	461a      	mov	r2, r3
 800165a:	687b      	ldr	r3, [r7, #4]
 800165c:	3208      	adds	r2, #8
 800165e:	68b9      	ldr	r1, [r7, #8]
 8001660:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
}
 8001664:	bf00      	nop
 8001666:	3714      	adds	r7, #20
 8001668:	46bd      	mov	sp, r7
 800166a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800166e:	4770      	bx	lr

08001670 <RCC_GetClocksFreq>:
  *         configuration based on this function will be incorrect.
  *
  * @retval None
  */
void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
{
 8001670:	b480      	push	{r7}
 8001672:	b089      	sub	sp, #36	; 0x24
 8001674:	af00      	add	r7, sp, #0
 8001676:	6078      	str	r0, [r7, #4]
  uint32_t tmp = 0, presc = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 8001678:	2300      	movs	r3, #0
 800167a:	61bb      	str	r3, [r7, #24]
 800167c:	2300      	movs	r3, #0
 800167e:	617b      	str	r3, [r7, #20]
 8001680:	2300      	movs	r3, #0
 8001682:	61fb      	str	r3, [r7, #28]
 8001684:	2302      	movs	r3, #2
 8001686:	613b      	str	r3, [r7, #16]
 8001688:	2300      	movs	r3, #0
 800168a:	60fb      	str	r3, [r7, #12]
 800168c:	2302      	movs	r3, #2
 800168e:	60bb      	str	r3, [r7, #8]

  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 8001690:	4b4a      	ldr	r3, [pc, #296]	; (80017bc <RCC_GetClocksFreq+0x14c>)
 8001692:	689b      	ldr	r3, [r3, #8]
 8001694:	f003 030c 	and.w	r3, r3, #12
 8001698:	61bb      	str	r3, [r7, #24]

  switch (tmp)
 800169a:	69bb      	ldr	r3, [r7, #24]
 800169c:	2b08      	cmp	r3, #8
 800169e:	d011      	beq.n	80016c4 <RCC_GetClocksFreq+0x54>
 80016a0:	69bb      	ldr	r3, [r7, #24]
 80016a2:	2b08      	cmp	r3, #8
 80016a4:	d844      	bhi.n	8001730 <RCC_GetClocksFreq+0xc0>
 80016a6:	69bb      	ldr	r3, [r7, #24]
 80016a8:	2b00      	cmp	r3, #0
 80016aa:	d003      	beq.n	80016b4 <RCC_GetClocksFreq+0x44>
 80016ac:	69bb      	ldr	r3, [r7, #24]
 80016ae:	2b04      	cmp	r3, #4
 80016b0:	d004      	beq.n	80016bc <RCC_GetClocksFreq+0x4c>
 80016b2:	e03d      	b.n	8001730 <RCC_GetClocksFreq+0xc0>
  {
  case 0x00:  /* HSI used as system clock source */
    RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 80016b4:	687b      	ldr	r3, [r7, #4]
 80016b6:	4a42      	ldr	r2, [pc, #264]	; (80017c0 <RCC_GetClocksFreq+0x150>)
 80016b8:	601a      	str	r2, [r3, #0]
    break;
 80016ba:	e03d      	b.n	8001738 <RCC_GetClocksFreq+0xc8>
  case 0x04:  /* HSE used as system clock  source */
    RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
 80016bc:	687b      	ldr	r3, [r7, #4]
 80016be:	4a41      	ldr	r2, [pc, #260]	; (80017c4 <RCC_GetClocksFreq+0x154>)
 80016c0:	601a      	str	r2, [r3, #0]
    break;
 80016c2:	e039      	b.n	8001738 <RCC_GetClocksFreq+0xc8>
  case 0x08:  /* PLL P used as system clock  source */

    /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
    SYSCLK = PLL_VCO / PLLP
    */
    pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 80016c4:	4b3d      	ldr	r3, [pc, #244]	; (80017bc <RCC_GetClocksFreq+0x14c>)
 80016c6:	685b      	ldr	r3, [r3, #4]
 80016c8:	0d9b      	lsrs	r3, r3, #22
 80016ca:	f003 0301 	and.w	r3, r3, #1
 80016ce:	60fb      	str	r3, [r7, #12]
    pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80016d0:	4b3a      	ldr	r3, [pc, #232]	; (80017bc <RCC_GetClocksFreq+0x14c>)
 80016d2:	685b      	ldr	r3, [r3, #4]
 80016d4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80016d8:	60bb      	str	r3, [r7, #8]

    if (pllsource != 0)
 80016da:	68fb      	ldr	r3, [r7, #12]
 80016dc:	2b00      	cmp	r3, #0
 80016de:	d00c      	beq.n	80016fa <RCC_GetClocksFreq+0x8a>
    {
      /* HSE used as PLL clock source */
      pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 80016e0:	4a38      	ldr	r2, [pc, #224]	; (80017c4 <RCC_GetClocksFreq+0x154>)
 80016e2:	68bb      	ldr	r3, [r7, #8]
 80016e4:	fbb2 f3f3 	udiv	r3, r2, r3
 80016e8:	4a34      	ldr	r2, [pc, #208]	; (80017bc <RCC_GetClocksFreq+0x14c>)
 80016ea:	6852      	ldr	r2, [r2, #4]
 80016ec:	0992      	lsrs	r2, r2, #6
 80016ee:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80016f2:	fb02 f303 	mul.w	r3, r2, r3
 80016f6:	61fb      	str	r3, [r7, #28]
 80016f8:	e00b      	b.n	8001712 <RCC_GetClocksFreq+0xa2>
    }
    else
    {
      /* HSI used as PLL clock source */
      pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 80016fa:	4a31      	ldr	r2, [pc, #196]	; (80017c0 <RCC_GetClocksFreq+0x150>)
 80016fc:	68bb      	ldr	r3, [r7, #8]
 80016fe:	fbb2 f3f3 	udiv	r3, r2, r3
 8001702:	4a2e      	ldr	r2, [pc, #184]	; (80017bc <RCC_GetClocksFreq+0x14c>)
 8001704:	6852      	ldr	r2, [r2, #4]
 8001706:	0992      	lsrs	r2, r2, #6
 8001708:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800170c:	fb02 f303 	mul.w	r3, r2, r3
 8001710:	61fb      	str	r3, [r7, #28]
    }

    pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 8001712:	4b2a      	ldr	r3, [pc, #168]	; (80017bc <RCC_GetClocksFreq+0x14c>)
 8001714:	685b      	ldr	r3, [r3, #4]
 8001716:	0c1b      	lsrs	r3, r3, #16
 8001718:	f003 0303 	and.w	r3, r3, #3
 800171c:	3301      	adds	r3, #1
 800171e:	005b      	lsls	r3, r3, #1
 8001720:	613b      	str	r3, [r7, #16]
    RCC_Clocks->SYSCLK_Frequency = pllvco/pllp;
 8001722:	69fa      	ldr	r2, [r7, #28]
 8001724:	693b      	ldr	r3, [r7, #16]
 8001726:	fbb2 f2f3 	udiv	r2, r2, r3
 800172a:	687b      	ldr	r3, [r7, #4]
 800172c:	601a      	str	r2, [r3, #0]
    break;
 800172e:	e003      	b.n	8001738 <RCC_GetClocksFreq+0xc8>
  default:
    RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 8001730:	687b      	ldr	r3, [r7, #4]
 8001732:	4a23      	ldr	r2, [pc, #140]	; (80017c0 <RCC_GetClocksFreq+0x150>)
 8001734:	601a      	str	r2, [r3, #0]
    break;
 8001736:	bf00      	nop
  }
  /* Compute HCLK, PCLK1 and PCLK2 clocks frequencies ------------------------*/

  /* Get HCLK prescaler */
  tmp = RCC->CFGR & RCC_CFGR_HPRE;
 8001738:	4b20      	ldr	r3, [pc, #128]	; (80017bc <RCC_GetClocksFreq+0x14c>)
 800173a:	689b      	ldr	r3, [r3, #8]
 800173c:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8001740:	61bb      	str	r3, [r7, #24]
  tmp = tmp >> 4;
 8001742:	69bb      	ldr	r3, [r7, #24]
 8001744:	091b      	lsrs	r3, r3, #4
 8001746:	61bb      	str	r3, [r7, #24]
  presc = APBAHBPrescTable[tmp];
 8001748:	4a1f      	ldr	r2, [pc, #124]	; (80017c8 <RCC_GetClocksFreq+0x158>)
 800174a:	69bb      	ldr	r3, [r7, #24]
 800174c:	4413      	add	r3, r2
 800174e:	781b      	ldrb	r3, [r3, #0]
 8001750:	b2db      	uxtb	r3, r3
 8001752:	617b      	str	r3, [r7, #20]
  /* HCLK clock frequency */
  RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 8001754:	687b      	ldr	r3, [r7, #4]
 8001756:	681a      	ldr	r2, [r3, #0]
 8001758:	697b      	ldr	r3, [r7, #20]
 800175a:	40da      	lsrs	r2, r3
 800175c:	687b      	ldr	r3, [r7, #4]
 800175e:	605a      	str	r2, [r3, #4]

  /* Get PCLK1 prescaler */
  tmp = RCC->CFGR & RCC_CFGR_PPRE1;
 8001760:	4b16      	ldr	r3, [pc, #88]	; (80017bc <RCC_GetClocksFreq+0x14c>)
 8001762:	689b      	ldr	r3, [r3, #8]
 8001764:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8001768:	61bb      	str	r3, [r7, #24]
  tmp = tmp >> 10;
 800176a:	69bb      	ldr	r3, [r7, #24]
 800176c:	0a9b      	lsrs	r3, r3, #10
 800176e:	61bb      	str	r3, [r7, #24]
  presc = APBAHBPrescTable[tmp];
 8001770:	4a15      	ldr	r2, [pc, #84]	; (80017c8 <RCC_GetClocksFreq+0x158>)
 8001772:	69bb      	ldr	r3, [r7, #24]
 8001774:	4413      	add	r3, r2
 8001776:	781b      	ldrb	r3, [r3, #0]
 8001778:	b2db      	uxtb	r3, r3
 800177a:	617b      	str	r3, [r7, #20]
  /* PCLK1 clock frequency */
  RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 800177c:	687b      	ldr	r3, [r7, #4]
 800177e:	685a      	ldr	r2, [r3, #4]
 8001780:	697b      	ldr	r3, [r7, #20]
 8001782:	40da      	lsrs	r2, r3
 8001784:	687b      	ldr	r3, [r7, #4]
 8001786:	609a      	str	r2, [r3, #8]

  /* Get PCLK2 prescaler */
  tmp = RCC->CFGR & RCC_CFGR_PPRE2;
 8001788:	4b0c      	ldr	r3, [pc, #48]	; (80017bc <RCC_GetClocksFreq+0x14c>)
 800178a:	689b      	ldr	r3, [r3, #8]
 800178c:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8001790:	61bb      	str	r3, [r7, #24]
  tmp = tmp >> 13;
 8001792:	69bb      	ldr	r3, [r7, #24]
 8001794:	0b5b      	lsrs	r3, r3, #13
 8001796:	61bb      	str	r3, [r7, #24]
  presc = APBAHBPrescTable[tmp];
 8001798:	4a0b      	ldr	r2, [pc, #44]	; (80017c8 <RCC_GetClocksFreq+0x158>)
 800179a:	69bb      	ldr	r3, [r7, #24]
 800179c:	4413      	add	r3, r2
 800179e:	781b      	ldrb	r3, [r3, #0]
 80017a0:	b2db      	uxtb	r3, r3
 80017a2:	617b      	str	r3, [r7, #20]
  /* PCLK2 clock frequency */
  RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 80017a4:	687b      	ldr	r3, [r7, #4]
 80017a6:	685a      	ldr	r2, [r3, #4]
 80017a8:	697b      	ldr	r3, [r7, #20]
 80017aa:	40da      	lsrs	r2, r3
 80017ac:	687b      	ldr	r3, [r7, #4]
 80017ae:	60da      	str	r2, [r3, #12]
}
 80017b0:	bf00      	nop
 80017b2:	3724      	adds	r7, #36	; 0x24
 80017b4:	46bd      	mov	sp, r7
 80017b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017ba:	4770      	bx	lr
 80017bc:	40023800 	.word	0x40023800
 80017c0:	00f42400 	.word	0x00f42400
 80017c4:	017d7840 	.word	0x017d7840
 80017c8:	20000000 	.word	0x20000000

080017cc <RCC_AHB1PeriphClockCmd>:
  * @param  NewState: new state of the specified peripheral clock.
  *          This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_AHB1PeriphClockCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState)
{
 80017cc:	b480      	push	{r7}
 80017ce:	b083      	sub	sp, #12
 80017d0:	af00      	add	r7, sp, #0
 80017d2:	6078      	str	r0, [r7, #4]
 80017d4:	460b      	mov	r3, r1
 80017d6:	70fb      	strb	r3, [r7, #3]
  /* Check the parameters */
  assert_param(IS_RCC_AHB1_CLOCK_PERIPH(RCC_AHB1Periph));

  assert_param(IS_FUNCTIONAL_STATE(NewState));
  if (NewState != DISABLE)
 80017d8:	78fb      	ldrb	r3, [r7, #3]
 80017da:	2b00      	cmp	r3, #0
 80017dc:	d006      	beq.n	80017ec <RCC_AHB1PeriphClockCmd+0x20>
  {
    RCC->AHB1ENR |= RCC_AHB1Periph;
 80017de:	4b0a      	ldr	r3, [pc, #40]	; (8001808 <RCC_AHB1PeriphClockCmd+0x3c>)
 80017e0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80017e2:	4909      	ldr	r1, [pc, #36]	; (8001808 <RCC_AHB1PeriphClockCmd+0x3c>)
 80017e4:	687b      	ldr	r3, [r7, #4]
 80017e6:	4313      	orrs	r3, r2
 80017e8:	630b      	str	r3, [r1, #48]	; 0x30
  }
  else
  {
    RCC->AHB1ENR &= ~RCC_AHB1Periph;
  }
}
 80017ea:	e006      	b.n	80017fa <RCC_AHB1PeriphClockCmd+0x2e>
    RCC->AHB1ENR &= ~RCC_AHB1Periph;
 80017ec:	4b06      	ldr	r3, [pc, #24]	; (8001808 <RCC_AHB1PeriphClockCmd+0x3c>)
 80017ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80017f0:	687b      	ldr	r3, [r7, #4]
 80017f2:	43db      	mvns	r3, r3
 80017f4:	4904      	ldr	r1, [pc, #16]	; (8001808 <RCC_AHB1PeriphClockCmd+0x3c>)
 80017f6:	4013      	ands	r3, r2
 80017f8:	630b      	str	r3, [r1, #48]	; 0x30
}
 80017fa:	bf00      	nop
 80017fc:	370c      	adds	r7, #12
 80017fe:	46bd      	mov	sp, r7
 8001800:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001804:	4770      	bx	lr
 8001806:	bf00      	nop
 8001808:	40023800 	.word	0x40023800

0800180c <RCC_APB1PeriphClockCmd>:
  * @param  NewState: new state of the specified peripheral clock.
  *          This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
{
 800180c:	b480      	push	{r7}
 800180e:	b083      	sub	sp, #12
 8001810:	af00      	add	r7, sp, #0
 8001812:	6078      	str	r0, [r7, #4]
 8001814:	460b      	mov	r3, r1
 8001816:	70fb      	strb	r3, [r7, #3]
  /* Check the parameters */
  assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
 8001818:	78fb      	ldrb	r3, [r7, #3]
 800181a:	2b00      	cmp	r3, #0
 800181c:	d006      	beq.n	800182c <RCC_APB1PeriphClockCmd+0x20>
  {
    RCC->APB1ENR |= RCC_APB1Periph;
 800181e:	4b0a      	ldr	r3, [pc, #40]	; (8001848 <RCC_APB1PeriphClockCmd+0x3c>)
 8001820:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001822:	4909      	ldr	r1, [pc, #36]	; (8001848 <RCC_APB1PeriphClockCmd+0x3c>)
 8001824:	687b      	ldr	r3, [r7, #4]
 8001826:	4313      	orrs	r3, r2
 8001828:	640b      	str	r3, [r1, #64]	; 0x40
  }
  else
  {
    RCC->APB1ENR &= ~RCC_APB1Periph;
  }
}
 800182a:	e006      	b.n	800183a <RCC_APB1PeriphClockCmd+0x2e>
    RCC->APB1ENR &= ~RCC_APB1Periph;
 800182c:	4b06      	ldr	r3, [pc, #24]	; (8001848 <RCC_APB1PeriphClockCmd+0x3c>)
 800182e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001830:	687b      	ldr	r3, [r7, #4]
 8001832:	43db      	mvns	r3, r3
 8001834:	4904      	ldr	r1, [pc, #16]	; (8001848 <RCC_APB1PeriphClockCmd+0x3c>)
 8001836:	4013      	ands	r3, r2
 8001838:	640b      	str	r3, [r1, #64]	; 0x40
}
 800183a:	bf00      	nop
 800183c:	370c      	adds	r7, #12
 800183e:	46bd      	mov	sp, r7
 8001840:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001844:	4770      	bx	lr
 8001846:	bf00      	nop
 8001848:	40023800 	.word	0x40023800

0800184c <RCC_APB2PeriphClockCmd>:
  * @param  NewState: new state of the specified peripheral clock.
  *          This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
{
 800184c:	b480      	push	{r7}
 800184e:	b083      	sub	sp, #12
 8001850:	af00      	add	r7, sp, #0
 8001852:	6078      	str	r0, [r7, #4]
 8001854:	460b      	mov	r3, r1
 8001856:	70fb      	strb	r3, [r7, #3]
  /* Check the parameters */
  assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
 8001858:	78fb      	ldrb	r3, [r7, #3]
 800185a:	2b00      	cmp	r3, #0
 800185c:	d006      	beq.n	800186c <RCC_APB2PeriphClockCmd+0x20>
  {
    RCC->APB2ENR |= RCC_APB2Periph;
 800185e:	4b0a      	ldr	r3, [pc, #40]	; (8001888 <RCC_APB2PeriphClockCmd+0x3c>)
 8001860:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001862:	4909      	ldr	r1, [pc, #36]	; (8001888 <RCC_APB2PeriphClockCmd+0x3c>)
 8001864:	687b      	ldr	r3, [r7, #4]
 8001866:	4313      	orrs	r3, r2
 8001868:	644b      	str	r3, [r1, #68]	; 0x44
  }
  else
  {
    RCC->APB2ENR &= ~RCC_APB2Periph;
  }
}
 800186a:	e006      	b.n	800187a <RCC_APB2PeriphClockCmd+0x2e>
    RCC->APB2ENR &= ~RCC_APB2Periph;
 800186c:	4b06      	ldr	r3, [pc, #24]	; (8001888 <RCC_APB2PeriphClockCmd+0x3c>)
 800186e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001870:	687b      	ldr	r3, [r7, #4]
 8001872:	43db      	mvns	r3, r3
 8001874:	4904      	ldr	r1, [pc, #16]	; (8001888 <RCC_APB2PeriphClockCmd+0x3c>)
 8001876:	4013      	ands	r3, r2
 8001878:	644b      	str	r3, [r1, #68]	; 0x44
}
 800187a:	bf00      	nop
 800187c:	370c      	adds	r7, #12
 800187e:	46bd      	mov	sp, r7
 8001880:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001884:	4770      	bx	lr
 8001886:	bf00      	nop
 8001888:	40023800 	.word	0x40023800

0800188c <RCC_APB2PeriphResetCmd>:
  * @param  NewState: new state of the specified peripheral reset.
  *          This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
{
 800188c:	b480      	push	{r7}
 800188e:	b083      	sub	sp, #12
 8001890:	af00      	add	r7, sp, #0
 8001892:	6078      	str	r0, [r7, #4]
 8001894:	460b      	mov	r3, r1
 8001896:	70fb      	strb	r3, [r7, #3]
  /* Check the parameters */
  assert_param(IS_RCC_APB2_RESET_PERIPH(RCC_APB2Periph));
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  if (NewState != DISABLE)
 8001898:	78fb      	ldrb	r3, [r7, #3]
 800189a:	2b00      	cmp	r3, #0
 800189c:	d006      	beq.n	80018ac <RCC_APB2PeriphResetCmd+0x20>
  {
    RCC->APB2RSTR |= RCC_APB2Periph;
 800189e:	4b0a      	ldr	r3, [pc, #40]	; (80018c8 <RCC_APB2PeriphResetCmd+0x3c>)
 80018a0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80018a2:	4909      	ldr	r1, [pc, #36]	; (80018c8 <RCC_APB2PeriphResetCmd+0x3c>)
 80018a4:	687b      	ldr	r3, [r7, #4]
 80018a6:	4313      	orrs	r3, r2
 80018a8:	624b      	str	r3, [r1, #36]	; 0x24
  }
  else
  {
    RCC->APB2RSTR &= ~RCC_APB2Periph;
  }
}
 80018aa:	e006      	b.n	80018ba <RCC_APB2PeriphResetCmd+0x2e>
    RCC->APB2RSTR &= ~RCC_APB2Periph;
 80018ac:	4b06      	ldr	r3, [pc, #24]	; (80018c8 <RCC_APB2PeriphResetCmd+0x3c>)
 80018ae:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80018b0:	687b      	ldr	r3, [r7, #4]
 80018b2:	43db      	mvns	r3, r3
 80018b4:	4904      	ldr	r1, [pc, #16]	; (80018c8 <RCC_APB2PeriphResetCmd+0x3c>)
 80018b6:	4013      	ands	r3, r2
 80018b8:	624b      	str	r3, [r1, #36]	; 0x24
}
 80018ba:	bf00      	nop
 80018bc:	370c      	adds	r7, #12
 80018be:	46bd      	mov	sp, r7
 80018c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018c4:	4770      	bx	lr
 80018c6:	bf00      	nop
 80018c8:	40023800 	.word	0x40023800

080018cc <SystemInit>:
 80018cc:	b580      	push	{r7, lr}
 80018ce:	af00      	add	r7, sp, #0
 80018d0:	4b16      	ldr	r3, [pc, #88]	; (800192c <SystemInit+0x60>)
 80018d2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80018d6:	4a15      	ldr	r2, [pc, #84]	; (800192c <SystemInit+0x60>)
 80018d8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80018dc:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80018e0:	4b13      	ldr	r3, [pc, #76]	; (8001930 <SystemInit+0x64>)
 80018e2:	681b      	ldr	r3, [r3, #0]
 80018e4:	4a12      	ldr	r2, [pc, #72]	; (8001930 <SystemInit+0x64>)
 80018e6:	f043 0301 	orr.w	r3, r3, #1
 80018ea:	6013      	str	r3, [r2, #0]
 80018ec:	4b10      	ldr	r3, [pc, #64]	; (8001930 <SystemInit+0x64>)
 80018ee:	2200      	movs	r2, #0
 80018f0:	609a      	str	r2, [r3, #8]
 80018f2:	4b0f      	ldr	r3, [pc, #60]	; (8001930 <SystemInit+0x64>)
 80018f4:	681b      	ldr	r3, [r3, #0]
 80018f6:	4a0e      	ldr	r2, [pc, #56]	; (8001930 <SystemInit+0x64>)
 80018f8:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 80018fc:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001900:	6013      	str	r3, [r2, #0]
 8001902:	4b0b      	ldr	r3, [pc, #44]	; (8001930 <SystemInit+0x64>)
 8001904:	4a0b      	ldr	r2, [pc, #44]	; (8001934 <SystemInit+0x68>)
 8001906:	605a      	str	r2, [r3, #4]
 8001908:	4b09      	ldr	r3, [pc, #36]	; (8001930 <SystemInit+0x64>)
 800190a:	681b      	ldr	r3, [r3, #0]
 800190c:	4a08      	ldr	r2, [pc, #32]	; (8001930 <SystemInit+0x64>)
 800190e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001912:	6013      	str	r3, [r2, #0]
 8001914:	4b06      	ldr	r3, [pc, #24]	; (8001930 <SystemInit+0x64>)
 8001916:	2200      	movs	r2, #0
 8001918:	60da      	str	r2, [r3, #12]
 800191a:	f000 f889 	bl	8001a30 <SetSysClock>
 800191e:	4b03      	ldr	r3, [pc, #12]	; (800192c <SystemInit+0x60>)
 8001920:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8001924:	609a      	str	r2, [r3, #8]
 8001926:	bf00      	nop
 8001928:	bd80      	pop	{r7, pc}
 800192a:	bf00      	nop
 800192c:	e000ed00 	.word	0xe000ed00
 8001930:	40023800 	.word	0x40023800
 8001934:	24003010 	.word	0x24003010

08001938 <SystemCoreClockUpdate>:
 8001938:	b480      	push	{r7}
 800193a:	b087      	sub	sp, #28
 800193c:	af00      	add	r7, sp, #0
 800193e:	2300      	movs	r3, #0
 8001940:	613b      	str	r3, [r7, #16]
 8001942:	2300      	movs	r3, #0
 8001944:	617b      	str	r3, [r7, #20]
 8001946:	2302      	movs	r3, #2
 8001948:	60fb      	str	r3, [r7, #12]
 800194a:	2300      	movs	r3, #0
 800194c:	60bb      	str	r3, [r7, #8]
 800194e:	2302      	movs	r3, #2
 8001950:	607b      	str	r3, [r7, #4]
 8001952:	4b32      	ldr	r3, [pc, #200]	; (8001a1c <SystemCoreClockUpdate+0xe4>)
 8001954:	689b      	ldr	r3, [r3, #8]
 8001956:	f003 030c 	and.w	r3, r3, #12
 800195a:	613b      	str	r3, [r7, #16]
 800195c:	693b      	ldr	r3, [r7, #16]
 800195e:	2b04      	cmp	r3, #4
 8001960:	d007      	beq.n	8001972 <SystemCoreClockUpdate+0x3a>
 8001962:	2b08      	cmp	r3, #8
 8001964:	d009      	beq.n	800197a <SystemCoreClockUpdate+0x42>
 8001966:	2b00      	cmp	r3, #0
 8001968:	d13d      	bne.n	80019e6 <SystemCoreClockUpdate+0xae>
 800196a:	4b2d      	ldr	r3, [pc, #180]	; (8001a20 <SystemCoreClockUpdate+0xe8>)
 800196c:	4a2d      	ldr	r2, [pc, #180]	; (8001a24 <SystemCoreClockUpdate+0xec>)
 800196e:	601a      	str	r2, [r3, #0]
 8001970:	e03d      	b.n	80019ee <SystemCoreClockUpdate+0xb6>
 8001972:	4b2b      	ldr	r3, [pc, #172]	; (8001a20 <SystemCoreClockUpdate+0xe8>)
 8001974:	4a2c      	ldr	r2, [pc, #176]	; (8001a28 <SystemCoreClockUpdate+0xf0>)
 8001976:	601a      	str	r2, [r3, #0]
 8001978:	e039      	b.n	80019ee <SystemCoreClockUpdate+0xb6>
 800197a:	4b28      	ldr	r3, [pc, #160]	; (8001a1c <SystemCoreClockUpdate+0xe4>)
 800197c:	685b      	ldr	r3, [r3, #4]
 800197e:	0d9b      	lsrs	r3, r3, #22
 8001980:	f003 0301 	and.w	r3, r3, #1
 8001984:	60bb      	str	r3, [r7, #8]
 8001986:	4b25      	ldr	r3, [pc, #148]	; (8001a1c <SystemCoreClockUpdate+0xe4>)
 8001988:	685b      	ldr	r3, [r3, #4]
 800198a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800198e:	607b      	str	r3, [r7, #4]
 8001990:	68bb      	ldr	r3, [r7, #8]
 8001992:	2b00      	cmp	r3, #0
 8001994:	d00c      	beq.n	80019b0 <SystemCoreClockUpdate+0x78>
 8001996:	4a24      	ldr	r2, [pc, #144]	; (8001a28 <SystemCoreClockUpdate+0xf0>)
 8001998:	687b      	ldr	r3, [r7, #4]
 800199a:	fbb2 f3f3 	udiv	r3, r2, r3
 800199e:	4a1f      	ldr	r2, [pc, #124]	; (8001a1c <SystemCoreClockUpdate+0xe4>)
 80019a0:	6852      	ldr	r2, [r2, #4]
 80019a2:	0992      	lsrs	r2, r2, #6
 80019a4:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80019a8:	fb02 f303 	mul.w	r3, r2, r3
 80019ac:	617b      	str	r3, [r7, #20]
 80019ae:	e00b      	b.n	80019c8 <SystemCoreClockUpdate+0x90>
 80019b0:	4a1c      	ldr	r2, [pc, #112]	; (8001a24 <SystemCoreClockUpdate+0xec>)
 80019b2:	687b      	ldr	r3, [r7, #4]
 80019b4:	fbb2 f3f3 	udiv	r3, r2, r3
 80019b8:	4a18      	ldr	r2, [pc, #96]	; (8001a1c <SystemCoreClockUpdate+0xe4>)
 80019ba:	6852      	ldr	r2, [r2, #4]
 80019bc:	0992      	lsrs	r2, r2, #6
 80019be:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80019c2:	fb02 f303 	mul.w	r3, r2, r3
 80019c6:	617b      	str	r3, [r7, #20]
 80019c8:	4b14      	ldr	r3, [pc, #80]	; (8001a1c <SystemCoreClockUpdate+0xe4>)
 80019ca:	685b      	ldr	r3, [r3, #4]
 80019cc:	0c1b      	lsrs	r3, r3, #16
 80019ce:	f003 0303 	and.w	r3, r3, #3
 80019d2:	3301      	adds	r3, #1
 80019d4:	005b      	lsls	r3, r3, #1
 80019d6:	60fb      	str	r3, [r7, #12]
 80019d8:	697a      	ldr	r2, [r7, #20]
 80019da:	68fb      	ldr	r3, [r7, #12]
 80019dc:	fbb2 f3f3 	udiv	r3, r2, r3
 80019e0:	4a0f      	ldr	r2, [pc, #60]	; (8001a20 <SystemCoreClockUpdate+0xe8>)
 80019e2:	6013      	str	r3, [r2, #0]
 80019e4:	e003      	b.n	80019ee <SystemCoreClockUpdate+0xb6>
 80019e6:	4b0e      	ldr	r3, [pc, #56]	; (8001a20 <SystemCoreClockUpdate+0xe8>)
 80019e8:	4a0e      	ldr	r2, [pc, #56]	; (8001a24 <SystemCoreClockUpdate+0xec>)
 80019ea:	601a      	str	r2, [r3, #0]
 80019ec:	bf00      	nop
 80019ee:	4b0b      	ldr	r3, [pc, #44]	; (8001a1c <SystemCoreClockUpdate+0xe4>)
 80019f0:	689b      	ldr	r3, [r3, #8]
 80019f2:	091b      	lsrs	r3, r3, #4
 80019f4:	f003 030f 	and.w	r3, r3, #15
 80019f8:	4a0c      	ldr	r2, [pc, #48]	; (8001a2c <SystemCoreClockUpdate+0xf4>)
 80019fa:	5cd3      	ldrb	r3, [r2, r3]
 80019fc:	b2db      	uxtb	r3, r3
 80019fe:	613b      	str	r3, [r7, #16]
 8001a00:	4b07      	ldr	r3, [pc, #28]	; (8001a20 <SystemCoreClockUpdate+0xe8>)
 8001a02:	681a      	ldr	r2, [r3, #0]
 8001a04:	693b      	ldr	r3, [r7, #16]
 8001a06:	fa22 f303 	lsr.w	r3, r2, r3
 8001a0a:	4a05      	ldr	r2, [pc, #20]	; (8001a20 <SystemCoreClockUpdate+0xe8>)
 8001a0c:	6013      	str	r3, [r2, #0]
 8001a0e:	bf00      	nop
 8001a10:	371c      	adds	r7, #28
 8001a12:	46bd      	mov	sp, r7
 8001a14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a18:	4770      	bx	lr
 8001a1a:	bf00      	nop
 8001a1c:	40023800 	.word	0x40023800
 8001a20:	20000010 	.word	0x20000010
 8001a24:	00f42400 	.word	0x00f42400
 8001a28:	017d7840 	.word	0x017d7840
 8001a2c:	20000014 	.word	0x20000014

08001a30 <SetSysClock>:
 8001a30:	b480      	push	{r7}
 8001a32:	af00      	add	r7, sp, #0
 8001a34:	4b22      	ldr	r3, [pc, #136]	; (8001ac0 <SetSysClock+0x90>)
 8001a36:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a38:	4a21      	ldr	r2, [pc, #132]	; (8001ac0 <SetSysClock+0x90>)
 8001a3a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001a3e:	6413      	str	r3, [r2, #64]	; 0x40
 8001a40:	4b20      	ldr	r3, [pc, #128]	; (8001ac4 <SetSysClock+0x94>)
 8001a42:	681b      	ldr	r3, [r3, #0]
 8001a44:	4a1f      	ldr	r2, [pc, #124]	; (8001ac4 <SetSysClock+0x94>)
 8001a46:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8001a4a:	6013      	str	r3, [r2, #0]
 8001a4c:	4b1c      	ldr	r3, [pc, #112]	; (8001ac0 <SetSysClock+0x90>)
 8001a4e:	4a1c      	ldr	r2, [pc, #112]	; (8001ac0 <SetSysClock+0x90>)
 8001a50:	689b      	ldr	r3, [r3, #8]
 8001a52:	6093      	str	r3, [r2, #8]
 8001a54:	4b1a      	ldr	r3, [pc, #104]	; (8001ac0 <SetSysClock+0x90>)
 8001a56:	4a1a      	ldr	r2, [pc, #104]	; (8001ac0 <SetSysClock+0x90>)
 8001a58:	689b      	ldr	r3, [r3, #8]
 8001a5a:	6093      	str	r3, [r2, #8]
 8001a5c:	4b18      	ldr	r3, [pc, #96]	; (8001ac0 <SetSysClock+0x90>)
 8001a5e:	689b      	ldr	r3, [r3, #8]
 8001a60:	4a17      	ldr	r2, [pc, #92]	; (8001ac0 <SetSysClock+0x90>)
 8001a62:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001a66:	6093      	str	r3, [r2, #8]
 8001a68:	4b15      	ldr	r3, [pc, #84]	; (8001ac0 <SetSysClock+0x90>)
 8001a6a:	4a17      	ldr	r2, [pc, #92]	; (8001ac8 <SetSysClock+0x98>)
 8001a6c:	605a      	str	r2, [r3, #4]
 8001a6e:	4b14      	ldr	r3, [pc, #80]	; (8001ac0 <SetSysClock+0x90>)
 8001a70:	681b      	ldr	r3, [r3, #0]
 8001a72:	4a13      	ldr	r2, [pc, #76]	; (8001ac0 <SetSysClock+0x90>)
 8001a74:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001a78:	6013      	str	r3, [r2, #0]
 8001a7a:	bf00      	nop
 8001a7c:	4b10      	ldr	r3, [pc, #64]	; (8001ac0 <SetSysClock+0x90>)
 8001a7e:	681b      	ldr	r3, [r3, #0]
 8001a80:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001a84:	2b00      	cmp	r3, #0
 8001a86:	d0f9      	beq.n	8001a7c <SetSysClock+0x4c>
 8001a88:	4b10      	ldr	r3, [pc, #64]	; (8001acc <SetSysClock+0x9c>)
 8001a8a:	f240 6202 	movw	r2, #1538	; 0x602
 8001a8e:	601a      	str	r2, [r3, #0]
 8001a90:	4b0b      	ldr	r3, [pc, #44]	; (8001ac0 <SetSysClock+0x90>)
 8001a92:	689b      	ldr	r3, [r3, #8]
 8001a94:	4a0a      	ldr	r2, [pc, #40]	; (8001ac0 <SetSysClock+0x90>)
 8001a96:	f023 0303 	bic.w	r3, r3, #3
 8001a9a:	6093      	str	r3, [r2, #8]
 8001a9c:	4b08      	ldr	r3, [pc, #32]	; (8001ac0 <SetSysClock+0x90>)
 8001a9e:	689b      	ldr	r3, [r3, #8]
 8001aa0:	4a07      	ldr	r2, [pc, #28]	; (8001ac0 <SetSysClock+0x90>)
 8001aa2:	f043 0302 	orr.w	r3, r3, #2
 8001aa6:	6093      	str	r3, [r2, #8]
 8001aa8:	bf00      	nop
 8001aaa:	4b05      	ldr	r3, [pc, #20]	; (8001ac0 <SetSysClock+0x90>)
 8001aac:	689b      	ldr	r3, [r3, #8]
 8001aae:	f003 030c 	and.w	r3, r3, #12
 8001ab2:	2b08      	cmp	r3, #8
 8001ab4:	d1f9      	bne.n	8001aaa <SetSysClock+0x7a>
 8001ab6:	bf00      	nop
 8001ab8:	46bd      	mov	sp, r7
 8001aba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001abe:	4770      	bx	lr
 8001ac0:	40023800 	.word	0x40023800
 8001ac4:	40007000 	.word	0x40007000
 8001ac8:	08015410 	.word	0x08015410
 8001acc:	40023c00 	.word	0x40023c00

08001ad0 <ADC_DeInit>:
 8001ad0:	b580      	push	{r7, lr}
 8001ad2:	af00      	add	r7, sp, #0
 8001ad4:	2101      	movs	r1, #1
 8001ad6:	f44f 7080 	mov.w	r0, #256	; 0x100
 8001ada:	f7ff fed7 	bl	800188c <RCC_APB2PeriphResetCmd>
 8001ade:	2100      	movs	r1, #0
 8001ae0:	f44f 7080 	mov.w	r0, #256	; 0x100
 8001ae4:	f7ff fed2 	bl	800188c <RCC_APB2PeriphResetCmd>
 8001ae8:	bf00      	nop
 8001aea:	bd80      	pop	{r7, pc}

08001aec <ADC_Init>:
 8001aec:	b480      	push	{r7}
 8001aee:	b085      	sub	sp, #20
 8001af0:	af00      	add	r7, sp, #0
 8001af2:	6078      	str	r0, [r7, #4]
 8001af4:	6039      	str	r1, [r7, #0]
 8001af6:	2300      	movs	r3, #0
 8001af8:	60fb      	str	r3, [r7, #12]
 8001afa:	2300      	movs	r3, #0
 8001afc:	72fb      	strb	r3, [r7, #11]
 8001afe:	687b      	ldr	r3, [r7, #4]
 8001b00:	685b      	ldr	r3, [r3, #4]
 8001b02:	60fb      	str	r3, [r7, #12]
 8001b04:	68fb      	ldr	r3, [r7, #12]
 8001b06:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 8001b0a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8001b0e:	60fb      	str	r3, [r7, #12]
 8001b10:	683b      	ldr	r3, [r7, #0]
 8001b12:	791b      	ldrb	r3, [r3, #4]
 8001b14:	021a      	lsls	r2, r3, #8
 8001b16:	683b      	ldr	r3, [r7, #0]
 8001b18:	681b      	ldr	r3, [r3, #0]
 8001b1a:	4313      	orrs	r3, r2
 8001b1c:	68fa      	ldr	r2, [r7, #12]
 8001b1e:	4313      	orrs	r3, r2
 8001b20:	60fb      	str	r3, [r7, #12]
 8001b22:	687b      	ldr	r3, [r7, #4]
 8001b24:	68fa      	ldr	r2, [r7, #12]
 8001b26:	605a      	str	r2, [r3, #4]
 8001b28:	687b      	ldr	r3, [r7, #4]
 8001b2a:	689b      	ldr	r3, [r3, #8]
 8001b2c:	60fb      	str	r3, [r7, #12]
 8001b2e:	68fa      	ldr	r2, [r7, #12]
 8001b30:	4b18      	ldr	r3, [pc, #96]	; (8001b94 <ADC_Init+0xa8>)
 8001b32:	4013      	ands	r3, r2
 8001b34:	60fb      	str	r3, [r7, #12]
 8001b36:	683b      	ldr	r3, [r7, #0]
 8001b38:	691a      	ldr	r2, [r3, #16]
 8001b3a:	683b      	ldr	r3, [r7, #0]
 8001b3c:	68db      	ldr	r3, [r3, #12]
 8001b3e:	431a      	orrs	r2, r3
 8001b40:	683b      	ldr	r3, [r7, #0]
 8001b42:	689b      	ldr	r3, [r3, #8]
 8001b44:	431a      	orrs	r2, r3
 8001b46:	683b      	ldr	r3, [r7, #0]
 8001b48:	795b      	ldrb	r3, [r3, #5]
 8001b4a:	005b      	lsls	r3, r3, #1
 8001b4c:	4313      	orrs	r3, r2
 8001b4e:	68fa      	ldr	r2, [r7, #12]
 8001b50:	4313      	orrs	r3, r2
 8001b52:	60fb      	str	r3, [r7, #12]
 8001b54:	687b      	ldr	r3, [r7, #4]
 8001b56:	68fa      	ldr	r2, [r7, #12]
 8001b58:	609a      	str	r2, [r3, #8]
 8001b5a:	687b      	ldr	r3, [r7, #4]
 8001b5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001b5e:	60fb      	str	r3, [r7, #12]
 8001b60:	68fb      	ldr	r3, [r7, #12]
 8001b62:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8001b66:	60fb      	str	r3, [r7, #12]
 8001b68:	683b      	ldr	r3, [r7, #0]
 8001b6a:	7d1b      	ldrb	r3, [r3, #20]
 8001b6c:	3b01      	subs	r3, #1
 8001b6e:	b2da      	uxtb	r2, r3
 8001b70:	7afb      	ldrb	r3, [r7, #11]
 8001b72:	4313      	orrs	r3, r2
 8001b74:	72fb      	strb	r3, [r7, #11]
 8001b76:	7afb      	ldrb	r3, [r7, #11]
 8001b78:	051b      	lsls	r3, r3, #20
 8001b7a:	68fa      	ldr	r2, [r7, #12]
 8001b7c:	4313      	orrs	r3, r2
 8001b7e:	60fb      	str	r3, [r7, #12]
 8001b80:	687b      	ldr	r3, [r7, #4]
 8001b82:	68fa      	ldr	r2, [r7, #12]
 8001b84:	62da      	str	r2, [r3, #44]	; 0x2c
 8001b86:	bf00      	nop
 8001b88:	3714      	adds	r7, #20
 8001b8a:	46bd      	mov	sp, r7
 8001b8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b90:	4770      	bx	lr
 8001b92:	bf00      	nop
 8001b94:	c0fff7fd 	.word	0xc0fff7fd

08001b98 <ADC_CommonInit>:
 8001b98:	b480      	push	{r7}
 8001b9a:	b085      	sub	sp, #20
 8001b9c:	af00      	add	r7, sp, #0
 8001b9e:	6078      	str	r0, [r7, #4]
 8001ba0:	2300      	movs	r3, #0
 8001ba2:	60fb      	str	r3, [r7, #12]
 8001ba4:	4b0e      	ldr	r3, [pc, #56]	; (8001be0 <ADC_CommonInit+0x48>)
 8001ba6:	685b      	ldr	r3, [r3, #4]
 8001ba8:	60fb      	str	r3, [r7, #12]
 8001baa:	68fa      	ldr	r2, [r7, #12]
 8001bac:	4b0d      	ldr	r3, [pc, #52]	; (8001be4 <ADC_CommonInit+0x4c>)
 8001bae:	4013      	ands	r3, r2
 8001bb0:	60fb      	str	r3, [r7, #12]
 8001bb2:	687b      	ldr	r3, [r7, #4]
 8001bb4:	681a      	ldr	r2, [r3, #0]
 8001bb6:	687b      	ldr	r3, [r7, #4]
 8001bb8:	685b      	ldr	r3, [r3, #4]
 8001bba:	431a      	orrs	r2, r3
 8001bbc:	687b      	ldr	r3, [r7, #4]
 8001bbe:	689b      	ldr	r3, [r3, #8]
 8001bc0:	431a      	orrs	r2, r3
 8001bc2:	687b      	ldr	r3, [r7, #4]
 8001bc4:	68db      	ldr	r3, [r3, #12]
 8001bc6:	4313      	orrs	r3, r2
 8001bc8:	68fa      	ldr	r2, [r7, #12]
 8001bca:	4313      	orrs	r3, r2
 8001bcc:	60fb      	str	r3, [r7, #12]
 8001bce:	4a04      	ldr	r2, [pc, #16]	; (8001be0 <ADC_CommonInit+0x48>)
 8001bd0:	68fb      	ldr	r3, [r7, #12]
 8001bd2:	6053      	str	r3, [r2, #4]
 8001bd4:	bf00      	nop
 8001bd6:	3714      	adds	r7, #20
 8001bd8:	46bd      	mov	sp, r7
 8001bda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bde:	4770      	bx	lr
 8001be0:	40012300 	.word	0x40012300
 8001be4:	fffc30e0 	.word	0xfffc30e0

08001be8 <ADC_Cmd>:
 8001be8:	b480      	push	{r7}
 8001bea:	b083      	sub	sp, #12
 8001bec:	af00      	add	r7, sp, #0
 8001bee:	6078      	str	r0, [r7, #4]
 8001bf0:	460b      	mov	r3, r1
 8001bf2:	70fb      	strb	r3, [r7, #3]
 8001bf4:	78fb      	ldrb	r3, [r7, #3]
 8001bf6:	2b00      	cmp	r3, #0
 8001bf8:	d006      	beq.n	8001c08 <ADC_Cmd+0x20>
 8001bfa:	687b      	ldr	r3, [r7, #4]
 8001bfc:	689b      	ldr	r3, [r3, #8]
 8001bfe:	f043 0201 	orr.w	r2, r3, #1
 8001c02:	687b      	ldr	r3, [r7, #4]
 8001c04:	609a      	str	r2, [r3, #8]
 8001c06:	e005      	b.n	8001c14 <ADC_Cmd+0x2c>
 8001c08:	687b      	ldr	r3, [r7, #4]
 8001c0a:	689b      	ldr	r3, [r3, #8]
 8001c0c:	f023 0201 	bic.w	r2, r3, #1
 8001c10:	687b      	ldr	r3, [r7, #4]
 8001c12:	609a      	str	r2, [r3, #8]
 8001c14:	bf00      	nop
 8001c16:	370c      	adds	r7, #12
 8001c18:	46bd      	mov	sp, r7
 8001c1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c1e:	4770      	bx	lr

08001c20 <ADC_RegularChannelConfig>:
 8001c20:	b480      	push	{r7}
 8001c22:	b085      	sub	sp, #20
 8001c24:	af00      	add	r7, sp, #0
 8001c26:	6078      	str	r0, [r7, #4]
 8001c28:	4608      	mov	r0, r1
 8001c2a:	4611      	mov	r1, r2
 8001c2c:	461a      	mov	r2, r3
 8001c2e:	4603      	mov	r3, r0
 8001c30:	70fb      	strb	r3, [r7, #3]
 8001c32:	460b      	mov	r3, r1
 8001c34:	70bb      	strb	r3, [r7, #2]
 8001c36:	4613      	mov	r3, r2
 8001c38:	707b      	strb	r3, [r7, #1]
 8001c3a:	2300      	movs	r3, #0
 8001c3c:	60fb      	str	r3, [r7, #12]
 8001c3e:	2300      	movs	r3, #0
 8001c40:	60bb      	str	r3, [r7, #8]
 8001c42:	78fb      	ldrb	r3, [r7, #3]
 8001c44:	2b09      	cmp	r3, #9
 8001c46:	d923      	bls.n	8001c90 <ADC_RegularChannelConfig+0x70>
 8001c48:	687b      	ldr	r3, [r7, #4]
 8001c4a:	68db      	ldr	r3, [r3, #12]
 8001c4c:	60fb      	str	r3, [r7, #12]
 8001c4e:	78fb      	ldrb	r3, [r7, #3]
 8001c50:	f1a3 020a 	sub.w	r2, r3, #10
 8001c54:	4613      	mov	r3, r2
 8001c56:	005b      	lsls	r3, r3, #1
 8001c58:	4413      	add	r3, r2
 8001c5a:	2207      	movs	r2, #7
 8001c5c:	fa02 f303 	lsl.w	r3, r2, r3
 8001c60:	60bb      	str	r3, [r7, #8]
 8001c62:	68bb      	ldr	r3, [r7, #8]
 8001c64:	43db      	mvns	r3, r3
 8001c66:	68fa      	ldr	r2, [r7, #12]
 8001c68:	4013      	ands	r3, r2
 8001c6a:	60fb      	str	r3, [r7, #12]
 8001c6c:	7879      	ldrb	r1, [r7, #1]
 8001c6e:	78fb      	ldrb	r3, [r7, #3]
 8001c70:	f1a3 020a 	sub.w	r2, r3, #10
 8001c74:	4613      	mov	r3, r2
 8001c76:	005b      	lsls	r3, r3, #1
 8001c78:	4413      	add	r3, r2
 8001c7a:	fa01 f303 	lsl.w	r3, r1, r3
 8001c7e:	60bb      	str	r3, [r7, #8]
 8001c80:	68fa      	ldr	r2, [r7, #12]
 8001c82:	68bb      	ldr	r3, [r7, #8]
 8001c84:	4313      	orrs	r3, r2
 8001c86:	60fb      	str	r3, [r7, #12]
 8001c88:	687b      	ldr	r3, [r7, #4]
 8001c8a:	68fa      	ldr	r2, [r7, #12]
 8001c8c:	60da      	str	r2, [r3, #12]
 8001c8e:	e01e      	b.n	8001cce <ADC_RegularChannelConfig+0xae>
 8001c90:	687b      	ldr	r3, [r7, #4]
 8001c92:	691b      	ldr	r3, [r3, #16]
 8001c94:	60fb      	str	r3, [r7, #12]
 8001c96:	78fa      	ldrb	r2, [r7, #3]
 8001c98:	4613      	mov	r3, r2
 8001c9a:	005b      	lsls	r3, r3, #1
 8001c9c:	4413      	add	r3, r2
 8001c9e:	2207      	movs	r2, #7
 8001ca0:	fa02 f303 	lsl.w	r3, r2, r3
 8001ca4:	60bb      	str	r3, [r7, #8]
 8001ca6:	68bb      	ldr	r3, [r7, #8]
 8001ca8:	43db      	mvns	r3, r3
 8001caa:	68fa      	ldr	r2, [r7, #12]
 8001cac:	4013      	ands	r3, r2
 8001cae:	60fb      	str	r3, [r7, #12]
 8001cb0:	7879      	ldrb	r1, [r7, #1]
 8001cb2:	78fa      	ldrb	r2, [r7, #3]
 8001cb4:	4613      	mov	r3, r2
 8001cb6:	005b      	lsls	r3, r3, #1
 8001cb8:	4413      	add	r3, r2
 8001cba:	fa01 f303 	lsl.w	r3, r1, r3
 8001cbe:	60bb      	str	r3, [r7, #8]
 8001cc0:	68fa      	ldr	r2, [r7, #12]
 8001cc2:	68bb      	ldr	r3, [r7, #8]
 8001cc4:	4313      	orrs	r3, r2
 8001cc6:	60fb      	str	r3, [r7, #12]
 8001cc8:	687b      	ldr	r3, [r7, #4]
 8001cca:	68fa      	ldr	r2, [r7, #12]
 8001ccc:	611a      	str	r2, [r3, #16]
 8001cce:	78bb      	ldrb	r3, [r7, #2]
 8001cd0:	2b06      	cmp	r3, #6
 8001cd2:	d821      	bhi.n	8001d18 <ADC_RegularChannelConfig+0xf8>
 8001cd4:	687b      	ldr	r3, [r7, #4]
 8001cd6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001cd8:	60fb      	str	r3, [r7, #12]
 8001cda:	78bb      	ldrb	r3, [r7, #2]
 8001cdc:	1e5a      	subs	r2, r3, #1
 8001cde:	4613      	mov	r3, r2
 8001ce0:	009b      	lsls	r3, r3, #2
 8001ce2:	4413      	add	r3, r2
 8001ce4:	221f      	movs	r2, #31
 8001ce6:	fa02 f303 	lsl.w	r3, r2, r3
 8001cea:	60bb      	str	r3, [r7, #8]
 8001cec:	68bb      	ldr	r3, [r7, #8]
 8001cee:	43db      	mvns	r3, r3
 8001cf0:	68fa      	ldr	r2, [r7, #12]
 8001cf2:	4013      	ands	r3, r2
 8001cf4:	60fb      	str	r3, [r7, #12]
 8001cf6:	78f9      	ldrb	r1, [r7, #3]
 8001cf8:	78bb      	ldrb	r3, [r7, #2]
 8001cfa:	1e5a      	subs	r2, r3, #1
 8001cfc:	4613      	mov	r3, r2
 8001cfe:	009b      	lsls	r3, r3, #2
 8001d00:	4413      	add	r3, r2
 8001d02:	fa01 f303 	lsl.w	r3, r1, r3
 8001d06:	60bb      	str	r3, [r7, #8]
 8001d08:	68fa      	ldr	r2, [r7, #12]
 8001d0a:	68bb      	ldr	r3, [r7, #8]
 8001d0c:	4313      	orrs	r3, r2
 8001d0e:	60fb      	str	r3, [r7, #12]
 8001d10:	687b      	ldr	r3, [r7, #4]
 8001d12:	68fa      	ldr	r2, [r7, #12]
 8001d14:	635a      	str	r2, [r3, #52]	; 0x34
 8001d16:	e047      	b.n	8001da8 <ADC_RegularChannelConfig+0x188>
 8001d18:	78bb      	ldrb	r3, [r7, #2]
 8001d1a:	2b0c      	cmp	r3, #12
 8001d1c:	d821      	bhi.n	8001d62 <ADC_RegularChannelConfig+0x142>
 8001d1e:	687b      	ldr	r3, [r7, #4]
 8001d20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d22:	60fb      	str	r3, [r7, #12]
 8001d24:	78bb      	ldrb	r3, [r7, #2]
 8001d26:	1fda      	subs	r2, r3, #7
 8001d28:	4613      	mov	r3, r2
 8001d2a:	009b      	lsls	r3, r3, #2
 8001d2c:	4413      	add	r3, r2
 8001d2e:	221f      	movs	r2, #31
 8001d30:	fa02 f303 	lsl.w	r3, r2, r3
 8001d34:	60bb      	str	r3, [r7, #8]
 8001d36:	68bb      	ldr	r3, [r7, #8]
 8001d38:	43db      	mvns	r3, r3
 8001d3a:	68fa      	ldr	r2, [r7, #12]
 8001d3c:	4013      	ands	r3, r2
 8001d3e:	60fb      	str	r3, [r7, #12]
 8001d40:	78f9      	ldrb	r1, [r7, #3]
 8001d42:	78bb      	ldrb	r3, [r7, #2]
 8001d44:	1fda      	subs	r2, r3, #7
 8001d46:	4613      	mov	r3, r2
 8001d48:	009b      	lsls	r3, r3, #2
 8001d4a:	4413      	add	r3, r2
 8001d4c:	fa01 f303 	lsl.w	r3, r1, r3
 8001d50:	60bb      	str	r3, [r7, #8]
 8001d52:	68fa      	ldr	r2, [r7, #12]
 8001d54:	68bb      	ldr	r3, [r7, #8]
 8001d56:	4313      	orrs	r3, r2
 8001d58:	60fb      	str	r3, [r7, #12]
 8001d5a:	687b      	ldr	r3, [r7, #4]
 8001d5c:	68fa      	ldr	r2, [r7, #12]
 8001d5e:	631a      	str	r2, [r3, #48]	; 0x30
 8001d60:	e022      	b.n	8001da8 <ADC_RegularChannelConfig+0x188>
 8001d62:	687b      	ldr	r3, [r7, #4]
 8001d64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001d66:	60fb      	str	r3, [r7, #12]
 8001d68:	78bb      	ldrb	r3, [r7, #2]
 8001d6a:	f1a3 020d 	sub.w	r2, r3, #13
 8001d6e:	4613      	mov	r3, r2
 8001d70:	009b      	lsls	r3, r3, #2
 8001d72:	4413      	add	r3, r2
 8001d74:	221f      	movs	r2, #31
 8001d76:	fa02 f303 	lsl.w	r3, r2, r3
 8001d7a:	60bb      	str	r3, [r7, #8]
 8001d7c:	68bb      	ldr	r3, [r7, #8]
 8001d7e:	43db      	mvns	r3, r3
 8001d80:	68fa      	ldr	r2, [r7, #12]
 8001d82:	4013      	ands	r3, r2
 8001d84:	60fb      	str	r3, [r7, #12]
 8001d86:	78f9      	ldrb	r1, [r7, #3]
 8001d88:	78bb      	ldrb	r3, [r7, #2]
 8001d8a:	f1a3 020d 	sub.w	r2, r3, #13
 8001d8e:	4613      	mov	r3, r2
 8001d90:	009b      	lsls	r3, r3, #2
 8001d92:	4413      	add	r3, r2
 8001d94:	fa01 f303 	lsl.w	r3, r1, r3
 8001d98:	60bb      	str	r3, [r7, #8]
 8001d9a:	68fa      	ldr	r2, [r7, #12]
 8001d9c:	68bb      	ldr	r3, [r7, #8]
 8001d9e:	4313      	orrs	r3, r2
 8001da0:	60fb      	str	r3, [r7, #12]
 8001da2:	687b      	ldr	r3, [r7, #4]
 8001da4:	68fa      	ldr	r2, [r7, #12]
 8001da6:	62da      	str	r2, [r3, #44]	; 0x2c
 8001da8:	bf00      	nop
 8001daa:	3714      	adds	r7, #20
 8001dac:	46bd      	mov	sp, r7
 8001dae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001db2:	4770      	bx	lr

08001db4 <ADC_SoftwareStartConv>:
 8001db4:	b480      	push	{r7}
 8001db6:	b083      	sub	sp, #12
 8001db8:	af00      	add	r7, sp, #0
 8001dba:	6078      	str	r0, [r7, #4]
 8001dbc:	687b      	ldr	r3, [r7, #4]
 8001dbe:	689b      	ldr	r3, [r3, #8]
 8001dc0:	f043 4280 	orr.w	r2, r3, #1073741824	; 0x40000000
 8001dc4:	687b      	ldr	r3, [r7, #4]
 8001dc6:	609a      	str	r2, [r3, #8]
 8001dc8:	bf00      	nop
 8001dca:	370c      	adds	r7, #12
 8001dcc:	46bd      	mov	sp, r7
 8001dce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dd2:	4770      	bx	lr

08001dd4 <ADC_EOCOnEachRegularChannelCmd>:
 8001dd4:	b480      	push	{r7}
 8001dd6:	b083      	sub	sp, #12
 8001dd8:	af00      	add	r7, sp, #0
 8001dda:	6078      	str	r0, [r7, #4]
 8001ddc:	460b      	mov	r3, r1
 8001dde:	70fb      	strb	r3, [r7, #3]
 8001de0:	78fb      	ldrb	r3, [r7, #3]
 8001de2:	2b00      	cmp	r3, #0
 8001de4:	d006      	beq.n	8001df4 <ADC_EOCOnEachRegularChannelCmd+0x20>
 8001de6:	687b      	ldr	r3, [r7, #4]
 8001de8:	689b      	ldr	r3, [r3, #8]
 8001dea:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8001dee:	687b      	ldr	r3, [r7, #4]
 8001df0:	609a      	str	r2, [r3, #8]
 8001df2:	e005      	b.n	8001e00 <ADC_EOCOnEachRegularChannelCmd+0x2c>
 8001df4:	687b      	ldr	r3, [r7, #4]
 8001df6:	689b      	ldr	r3, [r3, #8]
 8001df8:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8001dfc:	687b      	ldr	r3, [r7, #4]
 8001dfe:	609a      	str	r2, [r3, #8]
 8001e00:	bf00      	nop
 8001e02:	370c      	adds	r7, #12
 8001e04:	46bd      	mov	sp, r7
 8001e06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e0a:	4770      	bx	lr

08001e0c <ADC_ContinuousModeCmd>:
 8001e0c:	b480      	push	{r7}
 8001e0e:	b083      	sub	sp, #12
 8001e10:	af00      	add	r7, sp, #0
 8001e12:	6078      	str	r0, [r7, #4]
 8001e14:	460b      	mov	r3, r1
 8001e16:	70fb      	strb	r3, [r7, #3]
 8001e18:	78fb      	ldrb	r3, [r7, #3]
 8001e1a:	2b00      	cmp	r3, #0
 8001e1c:	d006      	beq.n	8001e2c <ADC_ContinuousModeCmd+0x20>
 8001e1e:	687b      	ldr	r3, [r7, #4]
 8001e20:	689b      	ldr	r3, [r3, #8]
 8001e22:	f043 0202 	orr.w	r2, r3, #2
 8001e26:	687b      	ldr	r3, [r7, #4]
 8001e28:	609a      	str	r2, [r3, #8]
 8001e2a:	e005      	b.n	8001e38 <ADC_ContinuousModeCmd+0x2c>
 8001e2c:	687b      	ldr	r3, [r7, #4]
 8001e2e:	689b      	ldr	r3, [r3, #8]
 8001e30:	f023 0202 	bic.w	r2, r3, #2
 8001e34:	687b      	ldr	r3, [r7, #4]
 8001e36:	609a      	str	r2, [r3, #8]
 8001e38:	bf00      	nop
 8001e3a:	370c      	adds	r7, #12
 8001e3c:	46bd      	mov	sp, r7
 8001e3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e42:	4770      	bx	lr

08001e44 <ADC_DiscModeChannelCountConfig>:
 8001e44:	b480      	push	{r7}
 8001e46:	b085      	sub	sp, #20
 8001e48:	af00      	add	r7, sp, #0
 8001e4a:	6078      	str	r0, [r7, #4]
 8001e4c:	460b      	mov	r3, r1
 8001e4e:	70fb      	strb	r3, [r7, #3]
 8001e50:	2300      	movs	r3, #0
 8001e52:	60fb      	str	r3, [r7, #12]
 8001e54:	2300      	movs	r3, #0
 8001e56:	60bb      	str	r3, [r7, #8]
 8001e58:	687b      	ldr	r3, [r7, #4]
 8001e5a:	685b      	ldr	r3, [r3, #4]
 8001e5c:	60fb      	str	r3, [r7, #12]
 8001e5e:	68fb      	ldr	r3, [r7, #12]
 8001e60:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8001e64:	60fb      	str	r3, [r7, #12]
 8001e66:	78fb      	ldrb	r3, [r7, #3]
 8001e68:	3b01      	subs	r3, #1
 8001e6a:	60bb      	str	r3, [r7, #8]
 8001e6c:	68bb      	ldr	r3, [r7, #8]
 8001e6e:	035b      	lsls	r3, r3, #13
 8001e70:	68fa      	ldr	r2, [r7, #12]
 8001e72:	4313      	orrs	r3, r2
 8001e74:	60fb      	str	r3, [r7, #12]
 8001e76:	687b      	ldr	r3, [r7, #4]
 8001e78:	68fa      	ldr	r2, [r7, #12]
 8001e7a:	605a      	str	r2, [r3, #4]
 8001e7c:	bf00      	nop
 8001e7e:	3714      	adds	r7, #20
 8001e80:	46bd      	mov	sp, r7
 8001e82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e86:	4770      	bx	lr

08001e88 <ADC_DiscModeCmd>:
 8001e88:	b480      	push	{r7}
 8001e8a:	b083      	sub	sp, #12
 8001e8c:	af00      	add	r7, sp, #0
 8001e8e:	6078      	str	r0, [r7, #4]
 8001e90:	460b      	mov	r3, r1
 8001e92:	70fb      	strb	r3, [r7, #3]
 8001e94:	78fb      	ldrb	r3, [r7, #3]
 8001e96:	2b00      	cmp	r3, #0
 8001e98:	d006      	beq.n	8001ea8 <ADC_DiscModeCmd+0x20>
 8001e9a:	687b      	ldr	r3, [r7, #4]
 8001e9c:	685b      	ldr	r3, [r3, #4]
 8001e9e:	f443 6200 	orr.w	r2, r3, #2048	; 0x800
 8001ea2:	687b      	ldr	r3, [r7, #4]
 8001ea4:	605a      	str	r2, [r3, #4]
 8001ea6:	e005      	b.n	8001eb4 <ADC_DiscModeCmd+0x2c>
 8001ea8:	687b      	ldr	r3, [r7, #4]
 8001eaa:	685b      	ldr	r3, [r3, #4]
 8001eac:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8001eb0:	687b      	ldr	r3, [r7, #4]
 8001eb2:	605a      	str	r2, [r3, #4]
 8001eb4:	bf00      	nop
 8001eb6:	370c      	adds	r7, #12
 8001eb8:	46bd      	mov	sp, r7
 8001eba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ebe:	4770      	bx	lr

08001ec0 <ADC_GetConversionValue>:
 8001ec0:	b480      	push	{r7}
 8001ec2:	b083      	sub	sp, #12
 8001ec4:	af00      	add	r7, sp, #0
 8001ec6:	6078      	str	r0, [r7, #4]
 8001ec8:	687b      	ldr	r3, [r7, #4]
 8001eca:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001ecc:	b29b      	uxth	r3, r3
 8001ece:	4618      	mov	r0, r3
 8001ed0:	370c      	adds	r7, #12
 8001ed2:	46bd      	mov	sp, r7
 8001ed4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ed8:	4770      	bx	lr

08001eda <ADC_GetFlagStatus>:
 8001eda:	b480      	push	{r7}
 8001edc:	b085      	sub	sp, #20
 8001ede:	af00      	add	r7, sp, #0
 8001ee0:	6078      	str	r0, [r7, #4]
 8001ee2:	460b      	mov	r3, r1
 8001ee4:	70fb      	strb	r3, [r7, #3]
 8001ee6:	2300      	movs	r3, #0
 8001ee8:	73fb      	strb	r3, [r7, #15]
 8001eea:	687b      	ldr	r3, [r7, #4]
 8001eec:	681a      	ldr	r2, [r3, #0]
 8001eee:	78fb      	ldrb	r3, [r7, #3]
 8001ef0:	4013      	ands	r3, r2
 8001ef2:	2b00      	cmp	r3, #0
 8001ef4:	d002      	beq.n	8001efc <ADC_GetFlagStatus+0x22>
 8001ef6:	2301      	movs	r3, #1
 8001ef8:	73fb      	strb	r3, [r7, #15]
 8001efa:	e001      	b.n	8001f00 <ADC_GetFlagStatus+0x26>
 8001efc:	2300      	movs	r3, #0
 8001efe:	73fb      	strb	r3, [r7, #15]
 8001f00:	7bfb      	ldrb	r3, [r7, #15]
 8001f02:	4618      	mov	r0, r3
 8001f04:	3714      	adds	r7, #20
 8001f06:	46bd      	mov	sp, r7
 8001f08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f0c:	4770      	bx	lr
	...

08001f10 <I2C_Init>:
 8001f10:	b580      	push	{r7, lr}
 8001f12:	b08a      	sub	sp, #40	; 0x28
 8001f14:	af00      	add	r7, sp, #0
 8001f16:	6078      	str	r0, [r7, #4]
 8001f18:	6039      	str	r1, [r7, #0]
 8001f1a:	2300      	movs	r3, #0
 8001f1c:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001f1e:	2300      	movs	r3, #0
 8001f20:	847b      	strh	r3, [r7, #34]	; 0x22
 8001f22:	2304      	movs	r3, #4
 8001f24:	84bb      	strh	r3, [r7, #36]	; 0x24
 8001f26:	4b57      	ldr	r3, [pc, #348]	; (8002084 <I2C_Init+0x174>)
 8001f28:	61fb      	str	r3, [r7, #28]
 8001f2a:	687b      	ldr	r3, [r7, #4]
 8001f2c:	889b      	ldrh	r3, [r3, #4]
 8001f2e:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001f30:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8001f32:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8001f36:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001f38:	f107 030c 	add.w	r3, r7, #12
 8001f3c:	4618      	mov	r0, r3
 8001f3e:	f7ff fb97 	bl	8001670 <RCC_GetClocksFreq>
 8001f42:	697b      	ldr	r3, [r7, #20]
 8001f44:	61fb      	str	r3, [r7, #28]
 8001f46:	69fb      	ldr	r3, [r7, #28]
 8001f48:	4a4f      	ldr	r2, [pc, #316]	; (8002088 <I2C_Init+0x178>)
 8001f4a:	fba2 2303 	umull	r2, r3, r2, r3
 8001f4e:	0c9b      	lsrs	r3, r3, #18
 8001f50:	847b      	strh	r3, [r7, #34]	; 0x22
 8001f52:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8001f54:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8001f56:	4313      	orrs	r3, r2
 8001f58:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001f5a:	687b      	ldr	r3, [r7, #4]
 8001f5c:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8001f5e:	809a      	strh	r2, [r3, #4]
 8001f60:	687b      	ldr	r3, [r7, #4]
 8001f62:	881b      	ldrh	r3, [r3, #0]
 8001f64:	b29b      	uxth	r3, r3
 8001f66:	f023 0301 	bic.w	r3, r3, #1
 8001f6a:	b29a      	uxth	r2, r3
 8001f6c:	687b      	ldr	r3, [r7, #4]
 8001f6e:	801a      	strh	r2, [r3, #0]
 8001f70:	2300      	movs	r3, #0
 8001f72:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001f74:	683b      	ldr	r3, [r7, #0]
 8001f76:	681b      	ldr	r3, [r3, #0]
 8001f78:	4a44      	ldr	r2, [pc, #272]	; (800208c <I2C_Init+0x17c>)
 8001f7a:	4293      	cmp	r3, r2
 8001f7c:	d815      	bhi.n	8001faa <I2C_Init+0x9a>
 8001f7e:	683b      	ldr	r3, [r7, #0]
 8001f80:	681b      	ldr	r3, [r3, #0]
 8001f82:	005b      	lsls	r3, r3, #1
 8001f84:	69fa      	ldr	r2, [r7, #28]
 8001f86:	fbb2 f3f3 	udiv	r3, r2, r3
 8001f8a:	84bb      	strh	r3, [r7, #36]	; 0x24
 8001f8c:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8001f8e:	2b03      	cmp	r3, #3
 8001f90:	d801      	bhi.n	8001f96 <I2C_Init+0x86>
 8001f92:	2304      	movs	r3, #4
 8001f94:	84bb      	strh	r3, [r7, #36]	; 0x24
 8001f96:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8001f98:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8001f9a:	4313      	orrs	r3, r2
 8001f9c:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001f9e:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8001fa0:	3301      	adds	r3, #1
 8001fa2:	b29a      	uxth	r2, r3
 8001fa4:	687b      	ldr	r3, [r7, #4]
 8001fa6:	841a      	strh	r2, [r3, #32]
 8001fa8:	e040      	b.n	800202c <I2C_Init+0x11c>
 8001faa:	683b      	ldr	r3, [r7, #0]
 8001fac:	88db      	ldrh	r3, [r3, #6]
 8001fae:	f64b 72ff 	movw	r2, #49151	; 0xbfff
 8001fb2:	4293      	cmp	r3, r2
 8001fb4:	d109      	bne.n	8001fca <I2C_Init+0xba>
 8001fb6:	683b      	ldr	r3, [r7, #0]
 8001fb8:	681a      	ldr	r2, [r3, #0]
 8001fba:	4613      	mov	r3, r2
 8001fbc:	005b      	lsls	r3, r3, #1
 8001fbe:	4413      	add	r3, r2
 8001fc0:	69fa      	ldr	r2, [r7, #28]
 8001fc2:	fbb2 f3f3 	udiv	r3, r2, r3
 8001fc6:	84bb      	strh	r3, [r7, #36]	; 0x24
 8001fc8:	e00e      	b.n	8001fe8 <I2C_Init+0xd8>
 8001fca:	683b      	ldr	r3, [r7, #0]
 8001fcc:	681a      	ldr	r2, [r3, #0]
 8001fce:	4613      	mov	r3, r2
 8001fd0:	009b      	lsls	r3, r3, #2
 8001fd2:	4413      	add	r3, r2
 8001fd4:	009a      	lsls	r2, r3, #2
 8001fd6:	4413      	add	r3, r2
 8001fd8:	69fa      	ldr	r2, [r7, #28]
 8001fda:	fbb2 f3f3 	udiv	r3, r2, r3
 8001fde:	84bb      	strh	r3, [r7, #36]	; 0x24
 8001fe0:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8001fe2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001fe6:	84bb      	strh	r3, [r7, #36]	; 0x24
 8001fe8:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8001fea:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001fee:	2b00      	cmp	r3, #0
 8001ff0:	d103      	bne.n	8001ffa <I2C_Init+0xea>
 8001ff2:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8001ff4:	f043 0301 	orr.w	r3, r3, #1
 8001ff8:	84bb      	strh	r3, [r7, #36]	; 0x24
 8001ffa:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8001ffc:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8001ffe:	4313      	orrs	r3, r2
 8002000:	b29b      	uxth	r3, r3
 8002002:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8002006:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800200a:	84fb      	strh	r3, [r7, #38]	; 0x26
 800200c:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 800200e:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8002012:	fb02 f303 	mul.w	r3, r2, r3
 8002016:	4a1e      	ldr	r2, [pc, #120]	; (8002090 <I2C_Init+0x180>)
 8002018:	fb82 1203 	smull	r1, r2, r2, r3
 800201c:	1192      	asrs	r2, r2, #6
 800201e:	17db      	asrs	r3, r3, #31
 8002020:	1ad3      	subs	r3, r2, r3
 8002022:	b29b      	uxth	r3, r3
 8002024:	3301      	adds	r3, #1
 8002026:	b29a      	uxth	r2, r3
 8002028:	687b      	ldr	r3, [r7, #4]
 800202a:	841a      	strh	r2, [r3, #32]
 800202c:	687b      	ldr	r3, [r7, #4]
 800202e:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8002030:	839a      	strh	r2, [r3, #28]
 8002032:	687b      	ldr	r3, [r7, #4]
 8002034:	881b      	ldrh	r3, [r3, #0]
 8002036:	b29b      	uxth	r3, r3
 8002038:	f043 0301 	orr.w	r3, r3, #1
 800203c:	b29a      	uxth	r2, r3
 800203e:	687b      	ldr	r3, [r7, #4]
 8002040:	801a      	strh	r2, [r3, #0]
 8002042:	687b      	ldr	r3, [r7, #4]
 8002044:	881b      	ldrh	r3, [r3, #0]
 8002046:	84fb      	strh	r3, [r7, #38]	; 0x26
 8002048:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800204a:	f423 6381 	bic.w	r3, r3, #1032	; 0x408
 800204e:	f023 0302 	bic.w	r3, r3, #2
 8002052:	84fb      	strh	r3, [r7, #38]	; 0x26
 8002054:	683b      	ldr	r3, [r7, #0]
 8002056:	889a      	ldrh	r2, [r3, #4]
 8002058:	683b      	ldr	r3, [r7, #0]
 800205a:	895b      	ldrh	r3, [r3, #10]
 800205c:	4313      	orrs	r3, r2
 800205e:	b29a      	uxth	r2, r3
 8002060:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8002062:	4313      	orrs	r3, r2
 8002064:	84fb      	strh	r3, [r7, #38]	; 0x26
 8002066:	687b      	ldr	r3, [r7, #4]
 8002068:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 800206a:	801a      	strh	r2, [r3, #0]
 800206c:	683b      	ldr	r3, [r7, #0]
 800206e:	899a      	ldrh	r2, [r3, #12]
 8002070:	683b      	ldr	r3, [r7, #0]
 8002072:	891b      	ldrh	r3, [r3, #8]
 8002074:	4313      	orrs	r3, r2
 8002076:	b29a      	uxth	r2, r3
 8002078:	687b      	ldr	r3, [r7, #4]
 800207a:	811a      	strh	r2, [r3, #8]
 800207c:	bf00      	nop
 800207e:	3728      	adds	r7, #40	; 0x28
 8002080:	46bd      	mov	sp, r7
 8002082:	bd80      	pop	{r7, pc}
 8002084:	007a1200 	.word	0x007a1200
 8002088:	431bde83 	.word	0x431bde83
 800208c:	000186a0 	.word	0x000186a0
 8002090:	10624dd3 	.word	0x10624dd3

08002094 <I2C_Cmd>:
 8002094:	b480      	push	{r7}
 8002096:	b083      	sub	sp, #12
 8002098:	af00      	add	r7, sp, #0
 800209a:	6078      	str	r0, [r7, #4]
 800209c:	460b      	mov	r3, r1
 800209e:	70fb      	strb	r3, [r7, #3]
 80020a0:	78fb      	ldrb	r3, [r7, #3]
 80020a2:	2b00      	cmp	r3, #0
 80020a4:	d008      	beq.n	80020b8 <I2C_Cmd+0x24>
 80020a6:	687b      	ldr	r3, [r7, #4]
 80020a8:	881b      	ldrh	r3, [r3, #0]
 80020aa:	b29b      	uxth	r3, r3
 80020ac:	f043 0301 	orr.w	r3, r3, #1
 80020b0:	b29a      	uxth	r2, r3
 80020b2:	687b      	ldr	r3, [r7, #4]
 80020b4:	801a      	strh	r2, [r3, #0]
 80020b6:	e007      	b.n	80020c8 <I2C_Cmd+0x34>
 80020b8:	687b      	ldr	r3, [r7, #4]
 80020ba:	881b      	ldrh	r3, [r3, #0]
 80020bc:	b29b      	uxth	r3, r3
 80020be:	f023 0301 	bic.w	r3, r3, #1
 80020c2:	b29a      	uxth	r2, r3
 80020c4:	687b      	ldr	r3, [r7, #4]
 80020c6:	801a      	strh	r2, [r3, #0]
 80020c8:	bf00      	nop
 80020ca:	370c      	adds	r7, #12
 80020cc:	46bd      	mov	sp, r7
 80020ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020d2:	4770      	bx	lr

080020d4 <I2C_GenerateSTART>:
 80020d4:	b480      	push	{r7}
 80020d6:	b083      	sub	sp, #12
 80020d8:	af00      	add	r7, sp, #0
 80020da:	6078      	str	r0, [r7, #4]
 80020dc:	460b      	mov	r3, r1
 80020de:	70fb      	strb	r3, [r7, #3]
 80020e0:	78fb      	ldrb	r3, [r7, #3]
 80020e2:	2b00      	cmp	r3, #0
 80020e4:	d008      	beq.n	80020f8 <I2C_GenerateSTART+0x24>
 80020e6:	687b      	ldr	r3, [r7, #4]
 80020e8:	881b      	ldrh	r3, [r3, #0]
 80020ea:	b29b      	uxth	r3, r3
 80020ec:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80020f0:	b29a      	uxth	r2, r3
 80020f2:	687b      	ldr	r3, [r7, #4]
 80020f4:	801a      	strh	r2, [r3, #0]
 80020f6:	e007      	b.n	8002108 <I2C_GenerateSTART+0x34>
 80020f8:	687b      	ldr	r3, [r7, #4]
 80020fa:	881b      	ldrh	r3, [r3, #0]
 80020fc:	b29b      	uxth	r3, r3
 80020fe:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002102:	b29a      	uxth	r2, r3
 8002104:	687b      	ldr	r3, [r7, #4]
 8002106:	801a      	strh	r2, [r3, #0]
 8002108:	bf00      	nop
 800210a:	370c      	adds	r7, #12
 800210c:	46bd      	mov	sp, r7
 800210e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002112:	4770      	bx	lr

08002114 <I2C_GenerateSTOP>:
 8002114:	b480      	push	{r7}
 8002116:	b083      	sub	sp, #12
 8002118:	af00      	add	r7, sp, #0
 800211a:	6078      	str	r0, [r7, #4]
 800211c:	460b      	mov	r3, r1
 800211e:	70fb      	strb	r3, [r7, #3]
 8002120:	78fb      	ldrb	r3, [r7, #3]
 8002122:	2b00      	cmp	r3, #0
 8002124:	d008      	beq.n	8002138 <I2C_GenerateSTOP+0x24>
 8002126:	687b      	ldr	r3, [r7, #4]
 8002128:	881b      	ldrh	r3, [r3, #0]
 800212a:	b29b      	uxth	r3, r3
 800212c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002130:	b29a      	uxth	r2, r3
 8002132:	687b      	ldr	r3, [r7, #4]
 8002134:	801a      	strh	r2, [r3, #0]
 8002136:	e007      	b.n	8002148 <I2C_GenerateSTOP+0x34>
 8002138:	687b      	ldr	r3, [r7, #4]
 800213a:	881b      	ldrh	r3, [r3, #0]
 800213c:	b29b      	uxth	r3, r3
 800213e:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8002142:	b29a      	uxth	r2, r3
 8002144:	687b      	ldr	r3, [r7, #4]
 8002146:	801a      	strh	r2, [r3, #0]
 8002148:	bf00      	nop
 800214a:	370c      	adds	r7, #12
 800214c:	46bd      	mov	sp, r7
 800214e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002152:	4770      	bx	lr

08002154 <I2C_Send7bitAddress>:
 8002154:	b480      	push	{r7}
 8002156:	b083      	sub	sp, #12
 8002158:	af00      	add	r7, sp, #0
 800215a:	6078      	str	r0, [r7, #4]
 800215c:	460b      	mov	r3, r1
 800215e:	70fb      	strb	r3, [r7, #3]
 8002160:	4613      	mov	r3, r2
 8002162:	70bb      	strb	r3, [r7, #2]
 8002164:	78bb      	ldrb	r3, [r7, #2]
 8002166:	2b00      	cmp	r3, #0
 8002168:	d004      	beq.n	8002174 <I2C_Send7bitAddress+0x20>
 800216a:	78fb      	ldrb	r3, [r7, #3]
 800216c:	f043 0301 	orr.w	r3, r3, #1
 8002170:	70fb      	strb	r3, [r7, #3]
 8002172:	e003      	b.n	800217c <I2C_Send7bitAddress+0x28>
 8002174:	78fb      	ldrb	r3, [r7, #3]
 8002176:	f023 0301 	bic.w	r3, r3, #1
 800217a:	70fb      	strb	r3, [r7, #3]
 800217c:	78fb      	ldrb	r3, [r7, #3]
 800217e:	b29a      	uxth	r2, r3
 8002180:	687b      	ldr	r3, [r7, #4]
 8002182:	821a      	strh	r2, [r3, #16]
 8002184:	bf00      	nop
 8002186:	370c      	adds	r7, #12
 8002188:	46bd      	mov	sp, r7
 800218a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800218e:	4770      	bx	lr

08002190 <I2C_AcknowledgeConfig>:
 8002190:	b480      	push	{r7}
 8002192:	b083      	sub	sp, #12
 8002194:	af00      	add	r7, sp, #0
 8002196:	6078      	str	r0, [r7, #4]
 8002198:	460b      	mov	r3, r1
 800219a:	70fb      	strb	r3, [r7, #3]
 800219c:	78fb      	ldrb	r3, [r7, #3]
 800219e:	2b00      	cmp	r3, #0
 80021a0:	d008      	beq.n	80021b4 <I2C_AcknowledgeConfig+0x24>
 80021a2:	687b      	ldr	r3, [r7, #4]
 80021a4:	881b      	ldrh	r3, [r3, #0]
 80021a6:	b29b      	uxth	r3, r3
 80021a8:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80021ac:	b29a      	uxth	r2, r3
 80021ae:	687b      	ldr	r3, [r7, #4]
 80021b0:	801a      	strh	r2, [r3, #0]
 80021b2:	e007      	b.n	80021c4 <I2C_AcknowledgeConfig+0x34>
 80021b4:	687b      	ldr	r3, [r7, #4]
 80021b6:	881b      	ldrh	r3, [r3, #0]
 80021b8:	b29b      	uxth	r3, r3
 80021ba:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80021be:	b29a      	uxth	r2, r3
 80021c0:	687b      	ldr	r3, [r7, #4]
 80021c2:	801a      	strh	r2, [r3, #0]
 80021c4:	bf00      	nop
 80021c6:	370c      	adds	r7, #12
 80021c8:	46bd      	mov	sp, r7
 80021ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021ce:	4770      	bx	lr

080021d0 <I2C_SendData>:
 80021d0:	b480      	push	{r7}
 80021d2:	b083      	sub	sp, #12
 80021d4:	af00      	add	r7, sp, #0
 80021d6:	6078      	str	r0, [r7, #4]
 80021d8:	460b      	mov	r3, r1
 80021da:	70fb      	strb	r3, [r7, #3]
 80021dc:	78fb      	ldrb	r3, [r7, #3]
 80021de:	b29a      	uxth	r2, r3
 80021e0:	687b      	ldr	r3, [r7, #4]
 80021e2:	821a      	strh	r2, [r3, #16]
 80021e4:	bf00      	nop
 80021e6:	370c      	adds	r7, #12
 80021e8:	46bd      	mov	sp, r7
 80021ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021ee:	4770      	bx	lr

080021f0 <I2C_ReceiveData>:
 80021f0:	b480      	push	{r7}
 80021f2:	b083      	sub	sp, #12
 80021f4:	af00      	add	r7, sp, #0
 80021f6:	6078      	str	r0, [r7, #4]
 80021f8:	687b      	ldr	r3, [r7, #4]
 80021fa:	8a1b      	ldrh	r3, [r3, #16]
 80021fc:	b29b      	uxth	r3, r3
 80021fe:	b2db      	uxtb	r3, r3
 8002200:	4618      	mov	r0, r3
 8002202:	370c      	adds	r7, #12
 8002204:	46bd      	mov	sp, r7
 8002206:	f85d 7b04 	ldr.w	r7, [sp], #4
 800220a:	4770      	bx	lr

0800220c <I2C_CheckEvent>:
 800220c:	b480      	push	{r7}
 800220e:	b087      	sub	sp, #28
 8002210:	af00      	add	r7, sp, #0
 8002212:	6078      	str	r0, [r7, #4]
 8002214:	6039      	str	r1, [r7, #0]
 8002216:	2300      	movs	r3, #0
 8002218:	613b      	str	r3, [r7, #16]
 800221a:	2300      	movs	r3, #0
 800221c:	60fb      	str	r3, [r7, #12]
 800221e:	2300      	movs	r3, #0
 8002220:	60bb      	str	r3, [r7, #8]
 8002222:	2300      	movs	r3, #0
 8002224:	75fb      	strb	r3, [r7, #23]
 8002226:	687b      	ldr	r3, [r7, #4]
 8002228:	8a9b      	ldrh	r3, [r3, #20]
 800222a:	b29b      	uxth	r3, r3
 800222c:	60fb      	str	r3, [r7, #12]
 800222e:	687b      	ldr	r3, [r7, #4]
 8002230:	8b1b      	ldrh	r3, [r3, #24]
 8002232:	b29b      	uxth	r3, r3
 8002234:	60bb      	str	r3, [r7, #8]
 8002236:	68bb      	ldr	r3, [r7, #8]
 8002238:	041b      	lsls	r3, r3, #16
 800223a:	60bb      	str	r3, [r7, #8]
 800223c:	68fa      	ldr	r2, [r7, #12]
 800223e:	68bb      	ldr	r3, [r7, #8]
 8002240:	4313      	orrs	r3, r2
 8002242:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8002246:	613b      	str	r3, [r7, #16]
 8002248:	693a      	ldr	r2, [r7, #16]
 800224a:	683b      	ldr	r3, [r7, #0]
 800224c:	4013      	ands	r3, r2
 800224e:	683a      	ldr	r2, [r7, #0]
 8002250:	429a      	cmp	r2, r3
 8002252:	d102      	bne.n	800225a <I2C_CheckEvent+0x4e>
 8002254:	2301      	movs	r3, #1
 8002256:	75fb      	strb	r3, [r7, #23]
 8002258:	e001      	b.n	800225e <I2C_CheckEvent+0x52>
 800225a:	2300      	movs	r3, #0
 800225c:	75fb      	strb	r3, [r7, #23]
 800225e:	7dfb      	ldrb	r3, [r7, #23]
 8002260:	4618      	mov	r0, r3
 8002262:	371c      	adds	r7, #28
 8002264:	46bd      	mov	sp, r7
 8002266:	f85d 7b04 	ldr.w	r7, [sp], #4
 800226a:	4770      	bx	lr

0800226c <I2C_GetFlagStatus>:
 800226c:	b480      	push	{r7}
 800226e:	b087      	sub	sp, #28
 8002270:	af00      	add	r7, sp, #0
 8002272:	6078      	str	r0, [r7, #4]
 8002274:	6039      	str	r1, [r7, #0]
 8002276:	2300      	movs	r3, #0
 8002278:	75fb      	strb	r3, [r7, #23]
 800227a:	2300      	movs	r3, #0
 800227c:	613b      	str	r3, [r7, #16]
 800227e:	2300      	movs	r3, #0
 8002280:	60fb      	str	r3, [r7, #12]
 8002282:	687b      	ldr	r3, [r7, #4]
 8002284:	60fb      	str	r3, [r7, #12]
 8002286:	683b      	ldr	r3, [r7, #0]
 8002288:	0f1b      	lsrs	r3, r3, #28
 800228a:	613b      	str	r3, [r7, #16]
 800228c:	683b      	ldr	r3, [r7, #0]
 800228e:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8002292:	603b      	str	r3, [r7, #0]
 8002294:	693b      	ldr	r3, [r7, #16]
 8002296:	2b00      	cmp	r3, #0
 8002298:	d003      	beq.n	80022a2 <I2C_GetFlagStatus+0x36>
 800229a:	68fb      	ldr	r3, [r7, #12]
 800229c:	3314      	adds	r3, #20
 800229e:	60fb      	str	r3, [r7, #12]
 80022a0:	e005      	b.n	80022ae <I2C_GetFlagStatus+0x42>
 80022a2:	683b      	ldr	r3, [r7, #0]
 80022a4:	0c1b      	lsrs	r3, r3, #16
 80022a6:	603b      	str	r3, [r7, #0]
 80022a8:	68fb      	ldr	r3, [r7, #12]
 80022aa:	3318      	adds	r3, #24
 80022ac:	60fb      	str	r3, [r7, #12]
 80022ae:	68fb      	ldr	r3, [r7, #12]
 80022b0:	681a      	ldr	r2, [r3, #0]
 80022b2:	683b      	ldr	r3, [r7, #0]
 80022b4:	4013      	ands	r3, r2
 80022b6:	2b00      	cmp	r3, #0
 80022b8:	d002      	beq.n	80022c0 <I2C_GetFlagStatus+0x54>
 80022ba:	2301      	movs	r3, #1
 80022bc:	75fb      	strb	r3, [r7, #23]
 80022be:	e001      	b.n	80022c4 <I2C_GetFlagStatus+0x58>
 80022c0:	2300      	movs	r3, #0
 80022c2:	75fb      	strb	r3, [r7, #23]
 80022c4:	7dfb      	ldrb	r3, [r7, #23]
 80022c6:	4618      	mov	r0, r3
 80022c8:	371c      	adds	r7, #28
 80022ca:	46bd      	mov	sp, r7
 80022cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022d0:	4770      	bx	lr
	...

080022d4 <NVIC_SetPriority>:
 80022d4:	b480      	push	{r7}
 80022d6:	b083      	sub	sp, #12
 80022d8:	af00      	add	r7, sp, #0
 80022da:	4603      	mov	r3, r0
 80022dc:	6039      	str	r1, [r7, #0]
 80022de:	71fb      	strb	r3, [r7, #7]
 80022e0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80022e4:	2b00      	cmp	r3, #0
 80022e6:	da0b      	bge.n	8002300 <NVIC_SetPriority+0x2c>
 80022e8:	683b      	ldr	r3, [r7, #0]
 80022ea:	b2da      	uxtb	r2, r3
 80022ec:	490c      	ldr	r1, [pc, #48]	; (8002320 <NVIC_SetPriority+0x4c>)
 80022ee:	79fb      	ldrb	r3, [r7, #7]
 80022f0:	f003 030f 	and.w	r3, r3, #15
 80022f4:	3b04      	subs	r3, #4
 80022f6:	0112      	lsls	r2, r2, #4
 80022f8:	b2d2      	uxtb	r2, r2
 80022fa:	440b      	add	r3, r1
 80022fc:	761a      	strb	r2, [r3, #24]
 80022fe:	e009      	b.n	8002314 <NVIC_SetPriority+0x40>
 8002300:	683b      	ldr	r3, [r7, #0]
 8002302:	b2da      	uxtb	r2, r3
 8002304:	4907      	ldr	r1, [pc, #28]	; (8002324 <NVIC_SetPriority+0x50>)
 8002306:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800230a:	0112      	lsls	r2, r2, #4
 800230c:	b2d2      	uxtb	r2, r2
 800230e:	440b      	add	r3, r1
 8002310:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8002314:	bf00      	nop
 8002316:	370c      	adds	r7, #12
 8002318:	46bd      	mov	sp, r7
 800231a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800231e:	4770      	bx	lr
 8002320:	e000ed00 	.word	0xe000ed00
 8002324:	e000e100 	.word	0xe000e100

08002328 <SysTick_Config>:
 8002328:	b580      	push	{r7, lr}
 800232a:	b082      	sub	sp, #8
 800232c:	af00      	add	r7, sp, #0
 800232e:	6078      	str	r0, [r7, #4]
 8002330:	687b      	ldr	r3, [r7, #4]
 8002332:	3b01      	subs	r3, #1
 8002334:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8002338:	d301      	bcc.n	800233e <SysTick_Config+0x16>
 800233a:	2301      	movs	r3, #1
 800233c:	e00f      	b.n	800235e <SysTick_Config+0x36>
 800233e:	4a0a      	ldr	r2, [pc, #40]	; (8002368 <SysTick_Config+0x40>)
 8002340:	687b      	ldr	r3, [r7, #4]
 8002342:	3b01      	subs	r3, #1
 8002344:	6053      	str	r3, [r2, #4]
 8002346:	210f      	movs	r1, #15
 8002348:	f04f 30ff 	mov.w	r0, #4294967295
 800234c:	f7ff ffc2 	bl	80022d4 <NVIC_SetPriority>
 8002350:	4b05      	ldr	r3, [pc, #20]	; (8002368 <SysTick_Config+0x40>)
 8002352:	2200      	movs	r2, #0
 8002354:	609a      	str	r2, [r3, #8]
 8002356:	4b04      	ldr	r3, [pc, #16]	; (8002368 <SysTick_Config+0x40>)
 8002358:	2207      	movs	r2, #7
 800235a:	601a      	str	r2, [r3, #0]
 800235c:	2300      	movs	r3, #0
 800235e:	4618      	mov	r0, r3
 8002360:	3708      	adds	r7, #8
 8002362:	46bd      	mov	sp, r7
 8002364:	bd80      	pop	{r7, pc}
 8002366:	bf00      	nop
 8002368:	e000e010 	.word	0xe000e010

0800236c <TimerInit>:
 800236c:	b580      	push	{r7, lr}
 800236e:	b084      	sub	sp, #16
 8002370:	af00      	add	r7, sp, #0
 8002372:	463b      	mov	r3, r7
 8002374:	4618      	mov	r0, r3
 8002376:	f7ff f97b 	bl	8001670 <RCC_GetClocksFreq>
 800237a:	683b      	ldr	r3, [r7, #0]
 800237c:	4a0a      	ldr	r2, [pc, #40]	; (80023a8 <TimerInit+0x3c>)
 800237e:	fba2 2303 	umull	r2, r3, r2, r3
 8002382:	099b      	lsrs	r3, r3, #6
 8002384:	4618      	mov	r0, r3
 8002386:	f7ff ffcf 	bl	8002328 <SysTick_Config>
 800238a:	2101      	movs	r1, #1
 800238c:	f04f 30ff 	mov.w	r0, #4294967295
 8002390:	f7ff ffa0 	bl	80022d4 <NVIC_SetPriority>
 8002394:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8002398:	2100      	movs	r1, #0
 800239a:	4804      	ldr	r0, [pc, #16]	; (80023ac <TimerInit+0x40>)
 800239c:	f001 ffde 	bl	800435c <memsetl>
 80023a0:	bf00      	nop
 80023a2:	3710      	adds	r7, #16
 80023a4:	46bd      	mov	sp, r7
 80023a6:	bd80      	pop	{r7, pc}
 80023a8:	10624dd3 	.word	0x10624dd3
 80023ac:	200001ec 	.word	0x200001ec

080023b0 <TimerStart>:
 80023b0:	b590      	push	{r4, r7, lr}
 80023b2:	b087      	sub	sp, #28
 80023b4:	af00      	add	r7, sp, #0
 80023b6:	60f8      	str	r0, [r7, #12]
 80023b8:	60b9      	str	r1, [r7, #8]
 80023ba:	603b      	str	r3, [r7, #0]
 80023bc:	4613      	mov	r3, r2
 80023be:	71fb      	strb	r3, [r7, #7]
 80023c0:	2300      	movs	r3, #0
 80023c2:	75fb      	strb	r3, [r7, #23]
 80023c4:	e04c      	b.n	8002460 <TimerStart+0xb0>
 80023c6:	7dfa      	ldrb	r2, [r7, #23]
 80023c8:	4929      	ldr	r1, [pc, #164]	; (8002470 <TimerStart+0xc0>)
 80023ca:	4613      	mov	r3, r2
 80023cc:	005b      	lsls	r3, r3, #1
 80023ce:	4413      	add	r3, r2
 80023d0:	00db      	lsls	r3, r3, #3
 80023d2:	440b      	add	r3, r1
 80023d4:	3310      	adds	r3, #16
 80023d6:	681b      	ldr	r3, [r3, #0]
 80023d8:	2b00      	cmp	r3, #0
 80023da:	d13e      	bne.n	800245a <TimerStart+0xaa>
 80023dc:	7dfa      	ldrb	r2, [r7, #23]
 80023de:	4924      	ldr	r1, [pc, #144]	; (8002470 <TimerStart+0xc0>)
 80023e0:	4613      	mov	r3, r2
 80023e2:	005b      	lsls	r3, r3, #1
 80023e4:	4413      	add	r3, r2
 80023e6:	00db      	lsls	r3, r3, #3
 80023e8:	440b      	add	r3, r1
 80023ea:	68fa      	ldr	r2, [r7, #12]
 80023ec:	601a      	str	r2, [r3, #0]
 80023ee:	7dfa      	ldrb	r2, [r7, #23]
 80023f0:	491f      	ldr	r1, [pc, #124]	; (8002470 <TimerStart+0xc0>)
 80023f2:	4613      	mov	r3, r2
 80023f4:	005b      	lsls	r3, r3, #1
 80023f6:	4413      	add	r3, r2
 80023f8:	00db      	lsls	r3, r3, #3
 80023fa:	440b      	add	r3, r1
 80023fc:	3310      	adds	r3, #16
 80023fe:	683a      	ldr	r2, [r7, #0]
 8002400:	601a      	str	r2, [r3, #0]
 8002402:	7dfa      	ldrb	r2, [r7, #23]
 8002404:	491a      	ldr	r1, [pc, #104]	; (8002470 <TimerStart+0xc0>)
 8002406:	4613      	mov	r3, r2
 8002408:	005b      	lsls	r3, r3, #1
 800240a:	4413      	add	r3, r2
 800240c:	00db      	lsls	r3, r3, #3
 800240e:	440b      	add	r3, r1
 8002410:	330c      	adds	r3, #12
 8002412:	79fa      	ldrb	r2, [r7, #7]
 8002414:	701a      	strb	r2, [r3, #0]
 8002416:	7dfa      	ldrb	r2, [r7, #23]
 8002418:	4915      	ldr	r1, [pc, #84]	; (8002470 <TimerStart+0xc0>)
 800241a:	4613      	mov	r3, r2
 800241c:	005b      	lsls	r3, r3, #1
 800241e:	4413      	add	r3, r2
 8002420:	00db      	lsls	r3, r3, #3
 8002422:	440b      	add	r3, r1
 8002424:	3314      	adds	r3, #20
 8002426:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8002428:	601a      	str	r2, [r3, #0]
 800242a:	7dfc      	ldrb	r4, [r7, #23]
 800242c:	f000 f872 	bl	8002514 <GetMilSecTick>
 8002430:	4601      	mov	r1, r0
 8002432:	4a0f      	ldr	r2, [pc, #60]	; (8002470 <TimerStart+0xc0>)
 8002434:	4623      	mov	r3, r4
 8002436:	005b      	lsls	r3, r3, #1
 8002438:	4423      	add	r3, r4
 800243a:	00db      	lsls	r3, r3, #3
 800243c:	4413      	add	r3, r2
 800243e:	3304      	adds	r3, #4
 8002440:	6019      	str	r1, [r3, #0]
 8002442:	7dfa      	ldrb	r2, [r7, #23]
 8002444:	490a      	ldr	r1, [pc, #40]	; (8002470 <TimerStart+0xc0>)
 8002446:	4613      	mov	r3, r2
 8002448:	005b      	lsls	r3, r3, #1
 800244a:	4413      	add	r3, r2
 800244c:	00db      	lsls	r3, r3, #3
 800244e:	440b      	add	r3, r1
 8002450:	3308      	adds	r3, #8
 8002452:	68ba      	ldr	r2, [r7, #8]
 8002454:	601a      	str	r2, [r3, #0]
 8002456:	7dfb      	ldrb	r3, [r7, #23]
 8002458:	e006      	b.n	8002468 <TimerStart+0xb8>
 800245a:	7dfb      	ldrb	r3, [r7, #23]
 800245c:	3301      	adds	r3, #1
 800245e:	75fb      	strb	r3, [r7, #23]
 8002460:	7dfb      	ldrb	r3, [r7, #23]
 8002462:	2b0f      	cmp	r3, #15
 8002464:	d9af      	bls.n	80023c6 <TimerStart+0x16>
 8002466:	23ff      	movs	r3, #255	; 0xff
 8002468:	4618      	mov	r0, r3
 800246a:	371c      	adds	r7, #28
 800246c:	46bd      	mov	sp, r7
 800246e:	bd90      	pop	{r4, r7, pc}
 8002470:	200001ec 	.word	0x200001ec

08002474 <TimerStop>:
 8002474:	b480      	push	{r7}
 8002476:	b083      	sub	sp, #12
 8002478:	af00      	add	r7, sp, #0
 800247a:	4603      	mov	r3, r0
 800247c:	71fb      	strb	r3, [r7, #7]
 800247e:	79fb      	ldrb	r3, [r7, #7]
 8002480:	2b0f      	cmp	r3, #15
 8002482:	d80a      	bhi.n	800249a <TimerStop+0x26>
 8002484:	79fa      	ldrb	r2, [r7, #7]
 8002486:	4922      	ldr	r1, [pc, #136]	; (8002510 <TimerStop+0x9c>)
 8002488:	4613      	mov	r3, r2
 800248a:	005b      	lsls	r3, r3, #1
 800248c:	4413      	add	r3, r2
 800248e:	00db      	lsls	r3, r3, #3
 8002490:	440b      	add	r3, r1
 8002492:	3310      	adds	r3, #16
 8002494:	681b      	ldr	r3, [r3, #0]
 8002496:	2b00      	cmp	r3, #0
 8002498:	d101      	bne.n	800249e <TimerStop+0x2a>
 800249a:	2300      	movs	r3, #0
 800249c:	e031      	b.n	8002502 <TimerStop+0x8e>
 800249e:	79fa      	ldrb	r2, [r7, #7]
 80024a0:	491b      	ldr	r1, [pc, #108]	; (8002510 <TimerStop+0x9c>)
 80024a2:	4613      	mov	r3, r2
 80024a4:	005b      	lsls	r3, r3, #1
 80024a6:	4413      	add	r3, r2
 80024a8:	00db      	lsls	r3, r3, #3
 80024aa:	440b      	add	r3, r1
 80024ac:	2200      	movs	r2, #0
 80024ae:	601a      	str	r2, [r3, #0]
 80024b0:	79fa      	ldrb	r2, [r7, #7]
 80024b2:	4917      	ldr	r1, [pc, #92]	; (8002510 <TimerStop+0x9c>)
 80024b4:	4613      	mov	r3, r2
 80024b6:	005b      	lsls	r3, r3, #1
 80024b8:	4413      	add	r3, r2
 80024ba:	00db      	lsls	r3, r3, #3
 80024bc:	440b      	add	r3, r1
 80024be:	3310      	adds	r3, #16
 80024c0:	2200      	movs	r2, #0
 80024c2:	601a      	str	r2, [r3, #0]
 80024c4:	79fa      	ldrb	r2, [r7, #7]
 80024c6:	4912      	ldr	r1, [pc, #72]	; (8002510 <TimerStop+0x9c>)
 80024c8:	4613      	mov	r3, r2
 80024ca:	005b      	lsls	r3, r3, #1
 80024cc:	4413      	add	r3, r2
 80024ce:	00db      	lsls	r3, r3, #3
 80024d0:	440b      	add	r3, r1
 80024d2:	330c      	adds	r3, #12
 80024d4:	2200      	movs	r2, #0
 80024d6:	701a      	strb	r2, [r3, #0]
 80024d8:	79fa      	ldrb	r2, [r7, #7]
 80024da:	490d      	ldr	r1, [pc, #52]	; (8002510 <TimerStop+0x9c>)
 80024dc:	4613      	mov	r3, r2
 80024de:	005b      	lsls	r3, r3, #1
 80024e0:	4413      	add	r3, r2
 80024e2:	00db      	lsls	r3, r3, #3
 80024e4:	440b      	add	r3, r1
 80024e6:	3308      	adds	r3, #8
 80024e8:	2200      	movs	r2, #0
 80024ea:	601a      	str	r2, [r3, #0]
 80024ec:	79fa      	ldrb	r2, [r7, #7]
 80024ee:	4908      	ldr	r1, [pc, #32]	; (8002510 <TimerStop+0x9c>)
 80024f0:	4613      	mov	r3, r2
 80024f2:	005b      	lsls	r3, r3, #1
 80024f4:	4413      	add	r3, r2
 80024f6:	00db      	lsls	r3, r3, #3
 80024f8:	440b      	add	r3, r1
 80024fa:	3304      	adds	r3, #4
 80024fc:	2200      	movs	r2, #0
 80024fe:	601a      	str	r2, [r3, #0]
 8002500:	2301      	movs	r3, #1
 8002502:	4618      	mov	r0, r3
 8002504:	370c      	adds	r7, #12
 8002506:	46bd      	mov	sp, r7
 8002508:	f85d 7b04 	ldr.w	r7, [sp], #4
 800250c:	4770      	bx	lr
 800250e:	bf00      	nop
 8002510:	200001ec 	.word	0x200001ec

08002514 <GetMilSecTick>:
 8002514:	b480      	push	{r7}
 8002516:	af00      	add	r7, sp, #0
 8002518:	4b03      	ldr	r3, [pc, #12]	; (8002528 <GetMilSecTick+0x14>)
 800251a:	681b      	ldr	r3, [r3, #0]
 800251c:	4618      	mov	r0, r3
 800251e:	46bd      	mov	sp, r7
 8002520:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002524:	4770      	bx	lr
 8002526:	bf00      	nop
 8002528:	2000036c 	.word	0x2000036c

0800252c <processTimerScheduler>:
 800252c:	b580      	push	{r7, lr}
 800252e:	b084      	sub	sp, #16
 8002530:	af00      	add	r7, sp, #0
 8002532:	2300      	movs	r3, #0
 8002534:	73fb      	strb	r3, [r7, #15]
 8002536:	e068      	b.n	800260a <processTimerScheduler+0xde>
 8002538:	7bfa      	ldrb	r2, [r7, #15]
 800253a:	4937      	ldr	r1, [pc, #220]	; (8002618 <processTimerScheduler+0xec>)
 800253c:	4613      	mov	r3, r2
 800253e:	005b      	lsls	r3, r3, #1
 8002540:	4413      	add	r3, r2
 8002542:	00db      	lsls	r3, r3, #3
 8002544:	440b      	add	r3, r1
 8002546:	3310      	adds	r3, #16
 8002548:	681b      	ldr	r3, [r3, #0]
 800254a:	2b00      	cmp	r3, #0
 800254c:	d05a      	beq.n	8002604 <processTimerScheduler+0xd8>
 800254e:	7bfb      	ldrb	r3, [r7, #15]
 8002550:	4618      	mov	r0, r3
 8002552:	f000 f863 	bl	800261c <TimeExpired>
 8002556:	4603      	mov	r3, r0
 8002558:	2b00      	cmp	r3, #0
 800255a:	d053      	beq.n	8002604 <processTimerScheduler+0xd8>
 800255c:	7bfa      	ldrb	r2, [r7, #15]
 800255e:	492e      	ldr	r1, [pc, #184]	; (8002618 <processTimerScheduler+0xec>)
 8002560:	4613      	mov	r3, r2
 8002562:	005b      	lsls	r3, r3, #1
 8002564:	4413      	add	r3, r2
 8002566:	00db      	lsls	r3, r3, #3
 8002568:	440b      	add	r3, r1
 800256a:	3310      	adds	r3, #16
 800256c:	681b      	ldr	r3, [r3, #0]
 800256e:	60bb      	str	r3, [r7, #8]
 8002570:	7bfa      	ldrb	r2, [r7, #15]
 8002572:	4929      	ldr	r1, [pc, #164]	; (8002618 <processTimerScheduler+0xec>)
 8002574:	4613      	mov	r3, r2
 8002576:	005b      	lsls	r3, r3, #1
 8002578:	4413      	add	r3, r2
 800257a:	00db      	lsls	r3, r3, #3
 800257c:	440b      	add	r3, r1
 800257e:	3314      	adds	r3, #20
 8002580:	681b      	ldr	r3, [r3, #0]
 8002582:	607b      	str	r3, [r7, #4]
 8002584:	7bfa      	ldrb	r2, [r7, #15]
 8002586:	4924      	ldr	r1, [pc, #144]	; (8002618 <processTimerScheduler+0xec>)
 8002588:	4613      	mov	r3, r2
 800258a:	005b      	lsls	r3, r3, #1
 800258c:	4413      	add	r3, r2
 800258e:	00db      	lsls	r3, r3, #3
 8002590:	440b      	add	r3, r1
 8002592:	330c      	adds	r3, #12
 8002594:	781b      	ldrb	r3, [r3, #0]
 8002596:	b2db      	uxtb	r3, r3
 8002598:	2bff      	cmp	r3, #255	; 0xff
 800259a:	d020      	beq.n	80025de <processTimerScheduler+0xb2>
 800259c:	7bfa      	ldrb	r2, [r7, #15]
 800259e:	491e      	ldr	r1, [pc, #120]	; (8002618 <processTimerScheduler+0xec>)
 80025a0:	4613      	mov	r3, r2
 80025a2:	005b      	lsls	r3, r3, #1
 80025a4:	4413      	add	r3, r2
 80025a6:	00db      	lsls	r3, r3, #3
 80025a8:	440b      	add	r3, r1
 80025aa:	330c      	adds	r3, #12
 80025ac:	781b      	ldrb	r3, [r3, #0]
 80025ae:	b2db      	uxtb	r3, r3
 80025b0:	2b00      	cmp	r3, #0
 80025b2:	d014      	beq.n	80025de <processTimerScheduler+0xb2>
 80025b4:	7bfa      	ldrb	r2, [r7, #15]
 80025b6:	4918      	ldr	r1, [pc, #96]	; (8002618 <processTimerScheduler+0xec>)
 80025b8:	4613      	mov	r3, r2
 80025ba:	005b      	lsls	r3, r3, #1
 80025bc:	4413      	add	r3, r2
 80025be:	00db      	lsls	r3, r3, #3
 80025c0:	440b      	add	r3, r1
 80025c2:	330c      	adds	r3, #12
 80025c4:	781b      	ldrb	r3, [r3, #0]
 80025c6:	b2db      	uxtb	r3, r3
 80025c8:	3b01      	subs	r3, #1
 80025ca:	b2d8      	uxtb	r0, r3
 80025cc:	4912      	ldr	r1, [pc, #72]	; (8002618 <processTimerScheduler+0xec>)
 80025ce:	4613      	mov	r3, r2
 80025d0:	005b      	lsls	r3, r3, #1
 80025d2:	4413      	add	r3, r2
 80025d4:	00db      	lsls	r3, r3, #3
 80025d6:	440b      	add	r3, r1
 80025d8:	330c      	adds	r3, #12
 80025da:	4602      	mov	r2, r0
 80025dc:	701a      	strb	r2, [r3, #0]
 80025de:	7bfa      	ldrb	r2, [r7, #15]
 80025e0:	490d      	ldr	r1, [pc, #52]	; (8002618 <processTimerScheduler+0xec>)
 80025e2:	4613      	mov	r3, r2
 80025e4:	005b      	lsls	r3, r3, #1
 80025e6:	4413      	add	r3, r2
 80025e8:	00db      	lsls	r3, r3, #3
 80025ea:	440b      	add	r3, r1
 80025ec:	330c      	adds	r3, #12
 80025ee:	781b      	ldrb	r3, [r3, #0]
 80025f0:	b2db      	uxtb	r3, r3
 80025f2:	2b00      	cmp	r3, #0
 80025f4:	d103      	bne.n	80025fe <processTimerScheduler+0xd2>
 80025f6:	7bfb      	ldrb	r3, [r7, #15]
 80025f8:	4618      	mov	r0, r3
 80025fa:	f7ff ff3b 	bl	8002474 <TimerStop>
 80025fe:	68bb      	ldr	r3, [r7, #8]
 8002600:	6878      	ldr	r0, [r7, #4]
 8002602:	4798      	blx	r3
 8002604:	7bfb      	ldrb	r3, [r7, #15]
 8002606:	3301      	adds	r3, #1
 8002608:	73fb      	strb	r3, [r7, #15]
 800260a:	7bfb      	ldrb	r3, [r7, #15]
 800260c:	2b0f      	cmp	r3, #15
 800260e:	d993      	bls.n	8002538 <processTimerScheduler+0xc>
 8002610:	bf00      	nop
 8002612:	3710      	adds	r7, #16
 8002614:	46bd      	mov	sp, r7
 8002616:	bd80      	pop	{r7, pc}
 8002618:	200001ec 	.word	0x200001ec

0800261c <TimeExpired>:
 800261c:	b580      	push	{r7, lr}
 800261e:	b084      	sub	sp, #16
 8002620:	af00      	add	r7, sp, #0
 8002622:	4603      	mov	r3, r0
 8002624:	71fb      	strb	r3, [r7, #7]
 8002626:	2300      	movs	r3, #0
 8002628:	60fb      	str	r3, [r7, #12]
 800262a:	b672      	cpsid	i
 800262c:	f7ff ff72 	bl	8002514 <GetMilSecTick>
 8002630:	60b8      	str	r0, [r7, #8]
 8002632:	79fb      	ldrb	r3, [r7, #7]
 8002634:	2b0f      	cmp	r3, #15
 8002636:	d80a      	bhi.n	800264e <TimeExpired+0x32>
 8002638:	79fa      	ldrb	r2, [r7, #7]
 800263a:	492a      	ldr	r1, [pc, #168]	; (80026e4 <TimeExpired+0xc8>)
 800263c:	4613      	mov	r3, r2
 800263e:	005b      	lsls	r3, r3, #1
 8002640:	4413      	add	r3, r2
 8002642:	00db      	lsls	r3, r3, #3
 8002644:	440b      	add	r3, r1
 8002646:	3310      	adds	r3, #16
 8002648:	681b      	ldr	r3, [r3, #0]
 800264a:	2b00      	cmp	r3, #0
 800264c:	d102      	bne.n	8002654 <TimeExpired+0x38>
 800264e:	b662      	cpsie	i
 8002650:	2300      	movs	r3, #0
 8002652:	e042      	b.n	80026da <TimeExpired+0xbe>
 8002654:	79fa      	ldrb	r2, [r7, #7]
 8002656:	4923      	ldr	r1, [pc, #140]	; (80026e4 <TimeExpired+0xc8>)
 8002658:	4613      	mov	r3, r2
 800265a:	005b      	lsls	r3, r3, #1
 800265c:	4413      	add	r3, r2
 800265e:	00db      	lsls	r3, r3, #3
 8002660:	440b      	add	r3, r1
 8002662:	3304      	adds	r3, #4
 8002664:	681b      	ldr	r3, [r3, #0]
 8002666:	68ba      	ldr	r2, [r7, #8]
 8002668:	429a      	cmp	r2, r3
 800266a:	d30c      	bcc.n	8002686 <TimeExpired+0x6a>
 800266c:	79fa      	ldrb	r2, [r7, #7]
 800266e:	491d      	ldr	r1, [pc, #116]	; (80026e4 <TimeExpired+0xc8>)
 8002670:	4613      	mov	r3, r2
 8002672:	005b      	lsls	r3, r3, #1
 8002674:	4413      	add	r3, r2
 8002676:	00db      	lsls	r3, r3, #3
 8002678:	440b      	add	r3, r1
 800267a:	3304      	adds	r3, #4
 800267c:	681b      	ldr	r3, [r3, #0]
 800267e:	68ba      	ldr	r2, [r7, #8]
 8002680:	1ad3      	subs	r3, r2, r3
 8002682:	60fb      	str	r3, [r7, #12]
 8002684:	e00e      	b.n	80026a4 <TimeExpired+0x88>
 8002686:	79fa      	ldrb	r2, [r7, #7]
 8002688:	4916      	ldr	r1, [pc, #88]	; (80026e4 <TimeExpired+0xc8>)
 800268a:	4613      	mov	r3, r2
 800268c:	005b      	lsls	r3, r3, #1
 800268e:	4413      	add	r3, r2
 8002690:	00db      	lsls	r3, r3, #3
 8002692:	440b      	add	r3, r1
 8002694:	3304      	adds	r3, #4
 8002696:	681a      	ldr	r2, [r3, #0]
 8002698:	68bb      	ldr	r3, [r7, #8]
 800269a:	1ad3      	subs	r3, r2, r3
 800269c:	60fb      	str	r3, [r7, #12]
 800269e:	68fb      	ldr	r3, [r7, #12]
 80026a0:	43db      	mvns	r3, r3
 80026a2:	60fb      	str	r3, [r7, #12]
 80026a4:	79fa      	ldrb	r2, [r7, #7]
 80026a6:	490f      	ldr	r1, [pc, #60]	; (80026e4 <TimeExpired+0xc8>)
 80026a8:	4613      	mov	r3, r2
 80026aa:	005b      	lsls	r3, r3, #1
 80026ac:	4413      	add	r3, r2
 80026ae:	00db      	lsls	r3, r3, #3
 80026b0:	440b      	add	r3, r1
 80026b2:	3308      	adds	r3, #8
 80026b4:	681b      	ldr	r3, [r3, #0]
 80026b6:	68fa      	ldr	r2, [r7, #12]
 80026b8:	429a      	cmp	r2, r3
 80026ba:	d202      	bcs.n	80026c2 <TimeExpired+0xa6>
 80026bc:	b662      	cpsie	i
 80026be:	2300      	movs	r3, #0
 80026c0:	e00b      	b.n	80026da <TimeExpired+0xbe>
 80026c2:	79fa      	ldrb	r2, [r7, #7]
 80026c4:	4907      	ldr	r1, [pc, #28]	; (80026e4 <TimeExpired+0xc8>)
 80026c6:	4613      	mov	r3, r2
 80026c8:	005b      	lsls	r3, r3, #1
 80026ca:	4413      	add	r3, r2
 80026cc:	00db      	lsls	r3, r3, #3
 80026ce:	440b      	add	r3, r1
 80026d0:	3304      	adds	r3, #4
 80026d2:	68ba      	ldr	r2, [r7, #8]
 80026d4:	601a      	str	r2, [r3, #0]
 80026d6:	b662      	cpsie	i
 80026d8:	2301      	movs	r3, #1
 80026da:	4618      	mov	r0, r3
 80026dc:	3710      	adds	r7, #16
 80026de:	46bd      	mov	sp, r7
 80026e0:	bd80      	pop	{r7, pc}
 80026e2:	bf00      	nop
 80026e4:	200001ec 	.word	0x200001ec

080026e8 <SysTick_Handler>:
 80026e8:	b480      	push	{r7}
 80026ea:	af00      	add	r7, sp, #0
 80026ec:	4b04      	ldr	r3, [pc, #16]	; (8002700 <SysTick_Handler+0x18>)
 80026ee:	681b      	ldr	r3, [r3, #0]
 80026f0:	3301      	adds	r3, #1
 80026f2:	4a03      	ldr	r2, [pc, #12]	; (8002700 <SysTick_Handler+0x18>)
 80026f4:	6013      	str	r3, [r2, #0]
 80026f6:	bf00      	nop
 80026f8:	46bd      	mov	sp, r7
 80026fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026fe:	4770      	bx	lr
 8002700:	2000036c 	.word	0x2000036c

08002704 <TemHumSensor_Init>:
 8002704:	b580      	push	{r7, lr}
 8002706:	af00      	add	r7, sp, #0
 8002708:	f000 f802 	bl	8002710 <i2c_config>
 800270c:	bf00      	nop
 800270e:	bd80      	pop	{r7, pc}

08002710 <i2c_config>:
 8002710:	b580      	push	{r7, lr}
 8002712:	b086      	sub	sp, #24
 8002714:	af00      	add	r7, sp, #0
 8002716:	2101      	movs	r1, #1
 8002718:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
 800271c:	f7ff f876 	bl	800180c <RCC_APB1PeriphClockCmd>
 8002720:	4b1d      	ldr	r3, [pc, #116]	; (8002798 <i2c_config+0x88>)
 8002722:	60bb      	str	r3, [r7, #8]
 8002724:	2300      	movs	r3, #0
 8002726:	81bb      	strh	r3, [r7, #12]
 8002728:	f64b 73ff 	movw	r3, #49151	; 0xbfff
 800272c:	81fb      	strh	r3, [r7, #14]
 800272e:	2300      	movs	r3, #0
 8002730:	823b      	strh	r3, [r7, #16]
 8002732:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002736:	827b      	strh	r3, [r7, #18]
 8002738:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 800273c:	82bb      	strh	r3, [r7, #20]
 800273e:	f107 0308 	add.w	r3, r7, #8
 8002742:	4619      	mov	r1, r3
 8002744:	4815      	ldr	r0, [pc, #84]	; (800279c <i2c_config+0x8c>)
 8002746:	f7ff fbe3 	bl	8001f10 <I2C_Init>
 800274a:	2101      	movs	r1, #1
 800274c:	4813      	ldr	r0, [pc, #76]	; (800279c <i2c_config+0x8c>)
 800274e:	f7ff fca1 	bl	8002094 <I2C_Cmd>
 8002752:	2101      	movs	r1, #1
 8002754:	2002      	movs	r0, #2
 8002756:	f7ff f839 	bl	80017cc <RCC_AHB1PeriphClockCmd>
 800275a:	f44f 7340 	mov.w	r3, #768	; 0x300
 800275e:	603b      	str	r3, [r7, #0]
 8002760:	2302      	movs	r3, #2
 8002762:	713b      	strb	r3, [r7, #4]
 8002764:	2302      	movs	r3, #2
 8002766:	717b      	strb	r3, [r7, #5]
 8002768:	2301      	movs	r3, #1
 800276a:	71bb      	strb	r3, [r7, #6]
 800276c:	2300      	movs	r3, #0
 800276e:	71fb      	strb	r3, [r7, #7]
 8002770:	463b      	mov	r3, r7
 8002772:	4619      	mov	r1, r3
 8002774:	480a      	ldr	r0, [pc, #40]	; (80027a0 <i2c_config+0x90>)
 8002776:	f7fe fe8b 	bl	8001490 <GPIO_Init>
 800277a:	2204      	movs	r2, #4
 800277c:	2108      	movs	r1, #8
 800277e:	4808      	ldr	r0, [pc, #32]	; (80027a0 <i2c_config+0x90>)
 8002780:	f7fe ff2d 	bl	80015de <GPIO_PinAFConfig>
 8002784:	2204      	movs	r2, #4
 8002786:	2109      	movs	r1, #9
 8002788:	4805      	ldr	r0, [pc, #20]	; (80027a0 <i2c_config+0x90>)
 800278a:	f7fe ff28 	bl	80015de <GPIO_PinAFConfig>
 800278e:	bf00      	nop
 8002790:	3718      	adds	r7, #24
 8002792:	46bd      	mov	sp, r7
 8002794:	bd80      	pop	{r7, pc}
 8002796:	bf00      	nop
 8002798:	00061a80 	.word	0x00061a80
 800279c:	40005400 	.word	0x40005400
 80027a0:	40020400 	.word	0x40020400

080027a4 <USART2_IRQHandler>:
 80027a4:	b580      	push	{r7, lr}
 80027a6:	b082      	sub	sp, #8
 80027a8:	af00      	add	r7, sp, #0
 80027aa:	b672      	cpsid	i
 80027ac:	f240 5125 	movw	r1, #1317	; 0x525
 80027b0:	480e      	ldr	r0, [pc, #56]	; (80027ec <USART2_IRQHandler+0x48>)
 80027b2:	f001 fdfc 	bl	80043ae <USART_GetITStatus>
 80027b6:	4603      	mov	r3, r0
 80027b8:	2b01      	cmp	r3, #1
 80027ba:	d112      	bne.n	80027e2 <USART2_IRQHandler+0x3e>
 80027bc:	4b0c      	ldr	r3, [pc, #48]	; (80027f0 <USART2_IRQHandler+0x4c>)
 80027be:	681b      	ldr	r3, [r3, #0]
 80027c0:	607b      	str	r3, [r7, #4]
 80027c2:	480a      	ldr	r0, [pc, #40]	; (80027ec <USART2_IRQHandler+0x48>)
 80027c4:	f001 fde3 	bl	800438e <USART_ReceiveData>
 80027c8:	4603      	mov	r3, r0
 80027ca:	b2db      	uxtb	r3, r3
 80027cc:	70fb      	strb	r3, [r7, #3]
 80027ce:	1cfb      	adds	r3, r7, #3
 80027d0:	4619      	mov	r1, r3
 80027d2:	6878      	ldr	r0, [r7, #4]
 80027d4:	f001 fd32 	bl	800423c <bufEnDat>
 80027d8:	f240 5125 	movw	r1, #1317	; 0x525
 80027dc:	4803      	ldr	r0, [pc, #12]	; (80027ec <USART2_IRQHandler+0x48>)
 80027de:	f001 fe41 	bl	8004464 <USART_ClearITPendingBit>
 80027e2:	b662      	cpsie	i
 80027e4:	bf00      	nop
 80027e6:	3708      	adds	r7, #8
 80027e8:	46bd      	mov	sp, r7
 80027ea:	bd80      	pop	{r7, pc}
 80027ec:	40004400 	.word	0x40004400
 80027f0:	20000370 	.word	0x20000370

080027f4 <delayMicroseconds>:
 80027f4:	b480      	push	{r7}
 80027f6:	b083      	sub	sp, #12
 80027f8:	af00      	add	r7, sp, #0
 80027fa:	6078      	str	r0, [r7, #4]
 80027fc:	bf00      	nop
 80027fe:	370c      	adds	r7, #12
 8002800:	46bd      	mov	sp, r7
 8002802:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002806:	4770      	bx	lr

08002808 <ucg_gpio_init>:
 8002808:	b580      	push	{r7, lr}
 800280a:	b082      	sub	sp, #8
 800280c:	af00      	add	r7, sp, #0
 800280e:	2101      	movs	r1, #1
 8002810:	2007      	movs	r0, #7
 8002812:	f7fe ffdb 	bl	80017cc <RCC_AHB1PeriphClockCmd>
 8002816:	2301      	movs	r3, #1
 8002818:	713b      	strb	r3, [r7, #4]
 800281a:	2303      	movs	r3, #3
 800281c:	717b      	strb	r3, [r7, #5]
 800281e:	2300      	movs	r3, #0
 8002820:	71bb      	strb	r3, [r7, #6]
 8002822:	2300      	movs	r3, #0
 8002824:	71fb      	strb	r3, [r7, #7]
 8002826:	f44f 7368 	mov.w	r3, #928	; 0x3a0
 800282a:	603b      	str	r3, [r7, #0]
 800282c:	463b      	mov	r3, r7
 800282e:	4619      	mov	r1, r3
 8002830:	480a      	ldr	r0, [pc, #40]	; (800285c <ucg_gpio_init+0x54>)
 8002832:	f7fe fe2d 	bl	8001490 <GPIO_Init>
 8002836:	f44f 6388 	mov.w	r3, #1088	; 0x440
 800283a:	603b      	str	r3, [r7, #0]
 800283c:	463b      	mov	r3, r7
 800283e:	4619      	mov	r1, r3
 8002840:	4807      	ldr	r0, [pc, #28]	; (8002860 <ucg_gpio_init+0x58>)
 8002842:	f7fe fe25 	bl	8001490 <GPIO_Init>
 8002846:	2380      	movs	r3, #128	; 0x80
 8002848:	603b      	str	r3, [r7, #0]
 800284a:	463b      	mov	r3, r7
 800284c:	4619      	mov	r1, r3
 800284e:	4805      	ldr	r0, [pc, #20]	; (8002864 <ucg_gpio_init+0x5c>)
 8002850:	f7fe fe1e 	bl	8001490 <GPIO_Init>
 8002854:	bf00      	nop
 8002856:	3708      	adds	r7, #8
 8002858:	46bd      	mov	sp, r7
 800285a:	bd80      	pop	{r7, pc}
 800285c:	40020000 	.word	0x40020000
 8002860:	40020400 	.word	0x40020400
 8002864:	40020800 	.word	0x40020800

08002868 <ucg_com_arduino_send_generic_SW_SPI>:
 8002868:	b580      	push	{r7, lr}
 800286a:	b084      	sub	sp, #16
 800286c:	af00      	add	r7, sp, #0
 800286e:	6078      	str	r0, [r7, #4]
 8002870:	460b      	mov	r3, r1
 8002872:	70fb      	strb	r3, [r7, #3]
 8002874:	2308      	movs	r3, #8
 8002876:	73fb      	strb	r3, [r7, #15]
 8002878:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800287c:	2b00      	cmp	r3, #0
 800287e:	da05      	bge.n	800288c <ucg_com_arduino_send_generic_SW_SPI+0x24>
 8002880:	2201      	movs	r2, #1
 8002882:	2180      	movs	r1, #128	; 0x80
 8002884:	4814      	ldr	r0, [pc, #80]	; (80028d8 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8002886:	f7fe fe92 	bl	80015ae <GPIO_WriteBit>
 800288a:	e004      	b.n	8002896 <ucg_com_arduino_send_generic_SW_SPI+0x2e>
 800288c:	2200      	movs	r2, #0
 800288e:	2180      	movs	r1, #128	; 0x80
 8002890:	4811      	ldr	r0, [pc, #68]	; (80028d8 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8002892:	f7fe fe8c 	bl	80015ae <GPIO_WriteBit>
 8002896:	2001      	movs	r0, #1
 8002898:	f7ff ffac 	bl	80027f4 <delayMicroseconds>
 800289c:	2201      	movs	r2, #1
 800289e:	2120      	movs	r1, #32
 80028a0:	480d      	ldr	r0, [pc, #52]	; (80028d8 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 80028a2:	f7fe fe84 	bl	80015ae <GPIO_WriteBit>
 80028a6:	2001      	movs	r0, #1
 80028a8:	f7ff ffa4 	bl	80027f4 <delayMicroseconds>
 80028ac:	7bfb      	ldrb	r3, [r7, #15]
 80028ae:	3b01      	subs	r3, #1
 80028b0:	73fb      	strb	r3, [r7, #15]
 80028b2:	2200      	movs	r2, #0
 80028b4:	2120      	movs	r1, #32
 80028b6:	4808      	ldr	r0, [pc, #32]	; (80028d8 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 80028b8:	f7fe fe79 	bl	80015ae <GPIO_WriteBit>
 80028bc:	2001      	movs	r0, #1
 80028be:	f7ff ff99 	bl	80027f4 <delayMicroseconds>
 80028c2:	78fb      	ldrb	r3, [r7, #3]
 80028c4:	005b      	lsls	r3, r3, #1
 80028c6:	70fb      	strb	r3, [r7, #3]
 80028c8:	7bfb      	ldrb	r3, [r7, #15]
 80028ca:	2b00      	cmp	r3, #0
 80028cc:	d1d4      	bne.n	8002878 <ucg_com_arduino_send_generic_SW_SPI+0x10>
 80028ce:	bf00      	nop
 80028d0:	3710      	adds	r7, #16
 80028d2:	46bd      	mov	sp, r7
 80028d4:	bd80      	pop	{r7, pc}
 80028d6:	bf00      	nop
 80028d8:	40020000 	.word	0x40020000

080028dc <ucg_com_arduino_generic_SW_SPI>:
 80028dc:	b580      	push	{r7, lr}
 80028de:	b084      	sub	sp, #16
 80028e0:	af00      	add	r7, sp, #0
 80028e2:	60f8      	str	r0, [r7, #12]
 80028e4:	607b      	str	r3, [r7, #4]
 80028e6:	460b      	mov	r3, r1
 80028e8:	817b      	strh	r3, [r7, #10]
 80028ea:	4613      	mov	r3, r2
 80028ec:	813b      	strh	r3, [r7, #8]
 80028ee:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80028f2:	3b0a      	subs	r3, #10
 80028f4:	2b0b      	cmp	r3, #11
 80028f6:	f200 80dc 	bhi.w	8002ab2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80028fa:	a201      	add	r2, pc, #4	; (adr r2, 8002900 <ucg_com_arduino_generic_SW_SPI+0x24>)
 80028fc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002900:	08002931 	.word	0x08002931
 8002904:	08002ab3 	.word	0x08002ab3
 8002908:	08002983 	.word	0x08002983
 800290c:	0800298d 	.word	0x0800298d
 8002910:	0800299d 	.word	0x0800299d
 8002914:	080029ad 	.word	0x080029ad
 8002918:	080029bf 	.word	0x080029bf
 800291c:	080029df 	.word	0x080029df
 8002920:	08002a07 	.word	0x08002a07
 8002924:	08002a3d 	.word	0x08002a3d
 8002928:	08002a5b 	.word	0x08002a5b
 800292c:	08002aab 	.word	0x08002aab
 8002930:	f7ff ff6a 	bl	8002808 <ucg_gpio_init>
 8002934:	2201      	movs	r2, #1
 8002936:	2180      	movs	r1, #128	; 0x80
 8002938:	4860      	ldr	r0, [pc, #384]	; (8002abc <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 800293a:	f7fe fe38 	bl	80015ae <GPIO_WriteBit>
 800293e:	2201      	movs	r2, #1
 8002940:	2140      	movs	r1, #64	; 0x40
 8002942:	485f      	ldr	r0, [pc, #380]	; (8002ac0 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 8002944:	f7fe fe33 	bl	80015ae <GPIO_WriteBit>
 8002948:	2201      	movs	r2, #1
 800294a:	2180      	movs	r1, #128	; 0x80
 800294c:	485d      	ldr	r0, [pc, #372]	; (8002ac4 <ucg_com_arduino_generic_SW_SPI+0x1e8>)
 800294e:	f7fe fe2e 	bl	80015ae <GPIO_WriteBit>
 8002952:	2201      	movs	r2, #1
 8002954:	f44f 7100 	mov.w	r1, #512	; 0x200
 8002958:	4858      	ldr	r0, [pc, #352]	; (8002abc <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 800295a:	f7fe fe28 	bl	80015ae <GPIO_WriteBit>
 800295e:	2200      	movs	r2, #0
 8002960:	2120      	movs	r1, #32
 8002962:	4856      	ldr	r0, [pc, #344]	; (8002abc <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8002964:	f7fe fe23 	bl	80015ae <GPIO_WriteBit>
 8002968:	2201      	movs	r2, #1
 800296a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800296e:	4854      	ldr	r0, [pc, #336]	; (8002ac0 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 8002970:	f7fe fe1d 	bl	80015ae <GPIO_WriteBit>
 8002974:	2201      	movs	r2, #1
 8002976:	f44f 7180 	mov.w	r1, #256	; 0x100
 800297a:	4850      	ldr	r0, [pc, #320]	; (8002abc <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 800297c:	f7fe fe17 	bl	80015ae <GPIO_WriteBit>
 8002980:	e097      	b.n	8002ab2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002982:	893b      	ldrh	r3, [r7, #8]
 8002984:	4618      	mov	r0, r3
 8002986:	f7ff ff35 	bl	80027f4 <delayMicroseconds>
 800298a:	e092      	b.n	8002ab2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 800298c:	893b      	ldrh	r3, [r7, #8]
 800298e:	b2db      	uxtb	r3, r3
 8002990:	461a      	mov	r2, r3
 8002992:	2180      	movs	r1, #128	; 0x80
 8002994:	484b      	ldr	r0, [pc, #300]	; (8002ac4 <ucg_com_arduino_generic_SW_SPI+0x1e8>)
 8002996:	f7fe fe0a 	bl	80015ae <GPIO_WriteBit>
 800299a:	e08a      	b.n	8002ab2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 800299c:	893b      	ldrh	r3, [r7, #8]
 800299e:	b2db      	uxtb	r3, r3
 80029a0:	461a      	mov	r2, r3
 80029a2:	2140      	movs	r1, #64	; 0x40
 80029a4:	4846      	ldr	r0, [pc, #280]	; (8002ac0 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 80029a6:	f7fe fe02 	bl	80015ae <GPIO_WriteBit>
 80029aa:	e082      	b.n	8002ab2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80029ac:	893b      	ldrh	r3, [r7, #8]
 80029ae:	b2db      	uxtb	r3, r3
 80029b0:	461a      	mov	r2, r3
 80029b2:	f44f 7100 	mov.w	r1, #512	; 0x200
 80029b6:	4841      	ldr	r0, [pc, #260]	; (8002abc <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 80029b8:	f7fe fdf9 	bl	80015ae <GPIO_WriteBit>
 80029bc:	e079      	b.n	8002ab2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80029be:	893b      	ldrh	r3, [r7, #8]
 80029c0:	b2db      	uxtb	r3, r3
 80029c2:	4619      	mov	r1, r3
 80029c4:	68f8      	ldr	r0, [r7, #12]
 80029c6:	f7ff ff4f 	bl	8002868 <ucg_com_arduino_send_generic_SW_SPI>
 80029ca:	e072      	b.n	8002ab2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80029cc:	687b      	ldr	r3, [r7, #4]
 80029ce:	781b      	ldrb	r3, [r3, #0]
 80029d0:	4619      	mov	r1, r3
 80029d2:	68f8      	ldr	r0, [r7, #12]
 80029d4:	f7ff ff48 	bl	8002868 <ucg_com_arduino_send_generic_SW_SPI>
 80029d8:	893b      	ldrh	r3, [r7, #8]
 80029da:	3b01      	subs	r3, #1
 80029dc:	813b      	strh	r3, [r7, #8]
 80029de:	893b      	ldrh	r3, [r7, #8]
 80029e0:	2b00      	cmp	r3, #0
 80029e2:	d1f3      	bne.n	80029cc <ucg_com_arduino_generic_SW_SPI+0xf0>
 80029e4:	e065      	b.n	8002ab2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80029e6:	687b      	ldr	r3, [r7, #4]
 80029e8:	781b      	ldrb	r3, [r3, #0]
 80029ea:	4619      	mov	r1, r3
 80029ec:	68f8      	ldr	r0, [r7, #12]
 80029ee:	f7ff ff3b 	bl	8002868 <ucg_com_arduino_send_generic_SW_SPI>
 80029f2:	687b      	ldr	r3, [r7, #4]
 80029f4:	3301      	adds	r3, #1
 80029f6:	781b      	ldrb	r3, [r3, #0]
 80029f8:	4619      	mov	r1, r3
 80029fa:	68f8      	ldr	r0, [r7, #12]
 80029fc:	f7ff ff34 	bl	8002868 <ucg_com_arduino_send_generic_SW_SPI>
 8002a00:	893b      	ldrh	r3, [r7, #8]
 8002a02:	3b01      	subs	r3, #1
 8002a04:	813b      	strh	r3, [r7, #8]
 8002a06:	893b      	ldrh	r3, [r7, #8]
 8002a08:	2b00      	cmp	r3, #0
 8002a0a:	d1ec      	bne.n	80029e6 <ucg_com_arduino_generic_SW_SPI+0x10a>
 8002a0c:	e051      	b.n	8002ab2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002a0e:	687b      	ldr	r3, [r7, #4]
 8002a10:	781b      	ldrb	r3, [r3, #0]
 8002a12:	4619      	mov	r1, r3
 8002a14:	68f8      	ldr	r0, [r7, #12]
 8002a16:	f7ff ff27 	bl	8002868 <ucg_com_arduino_send_generic_SW_SPI>
 8002a1a:	687b      	ldr	r3, [r7, #4]
 8002a1c:	3301      	adds	r3, #1
 8002a1e:	781b      	ldrb	r3, [r3, #0]
 8002a20:	4619      	mov	r1, r3
 8002a22:	68f8      	ldr	r0, [r7, #12]
 8002a24:	f7ff ff20 	bl	8002868 <ucg_com_arduino_send_generic_SW_SPI>
 8002a28:	687b      	ldr	r3, [r7, #4]
 8002a2a:	3302      	adds	r3, #2
 8002a2c:	781b      	ldrb	r3, [r3, #0]
 8002a2e:	4619      	mov	r1, r3
 8002a30:	68f8      	ldr	r0, [r7, #12]
 8002a32:	f7ff ff19 	bl	8002868 <ucg_com_arduino_send_generic_SW_SPI>
 8002a36:	893b      	ldrh	r3, [r7, #8]
 8002a38:	3b01      	subs	r3, #1
 8002a3a:	813b      	strh	r3, [r7, #8]
 8002a3c:	893b      	ldrh	r3, [r7, #8]
 8002a3e:	2b00      	cmp	r3, #0
 8002a40:	d1e5      	bne.n	8002a0e <ucg_com_arduino_generic_SW_SPI+0x132>
 8002a42:	e036      	b.n	8002ab2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002a44:	687b      	ldr	r3, [r7, #4]
 8002a46:	1c5a      	adds	r2, r3, #1
 8002a48:	607a      	str	r2, [r7, #4]
 8002a4a:	781b      	ldrb	r3, [r3, #0]
 8002a4c:	4619      	mov	r1, r3
 8002a4e:	68f8      	ldr	r0, [r7, #12]
 8002a50:	f7ff ff0a 	bl	8002868 <ucg_com_arduino_send_generic_SW_SPI>
 8002a54:	893b      	ldrh	r3, [r7, #8]
 8002a56:	3b01      	subs	r3, #1
 8002a58:	813b      	strh	r3, [r7, #8]
 8002a5a:	893b      	ldrh	r3, [r7, #8]
 8002a5c:	2b00      	cmp	r3, #0
 8002a5e:	d1f1      	bne.n	8002a44 <ucg_com_arduino_generic_SW_SPI+0x168>
 8002a60:	e027      	b.n	8002ab2 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002a62:	687b      	ldr	r3, [r7, #4]
 8002a64:	781b      	ldrb	r3, [r3, #0]
 8002a66:	2b00      	cmp	r3, #0
 8002a68:	d010      	beq.n	8002a8c <ucg_com_arduino_generic_SW_SPI+0x1b0>
 8002a6a:	687b      	ldr	r3, [r7, #4]
 8002a6c:	781b      	ldrb	r3, [r3, #0]
 8002a6e:	2b01      	cmp	r3, #1
 8002a70:	d106      	bne.n	8002a80 <ucg_com_arduino_generic_SW_SPI+0x1a4>
 8002a72:	2200      	movs	r2, #0
 8002a74:	f44f 7100 	mov.w	r1, #512	; 0x200
 8002a78:	4810      	ldr	r0, [pc, #64]	; (8002abc <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8002a7a:	f7fe fd98 	bl	80015ae <GPIO_WriteBit>
 8002a7e:	e005      	b.n	8002a8c <ucg_com_arduino_generic_SW_SPI+0x1b0>
 8002a80:	2201      	movs	r2, #1
 8002a82:	f44f 7100 	mov.w	r1, #512	; 0x200
 8002a86:	480d      	ldr	r0, [pc, #52]	; (8002abc <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8002a88:	f7fe fd91 	bl	80015ae <GPIO_WriteBit>
 8002a8c:	687b      	ldr	r3, [r7, #4]
 8002a8e:	3301      	adds	r3, #1
 8002a90:	607b      	str	r3, [r7, #4]
 8002a92:	687b      	ldr	r3, [r7, #4]
 8002a94:	781b      	ldrb	r3, [r3, #0]
 8002a96:	4619      	mov	r1, r3
 8002a98:	68f8      	ldr	r0, [r7, #12]
 8002a9a:	f7ff fee5 	bl	8002868 <ucg_com_arduino_send_generic_SW_SPI>
 8002a9e:	687b      	ldr	r3, [r7, #4]
 8002aa0:	3301      	adds	r3, #1
 8002aa2:	607b      	str	r3, [r7, #4]
 8002aa4:	893b      	ldrh	r3, [r7, #8]
 8002aa6:	3b01      	subs	r3, #1
 8002aa8:	813b      	strh	r3, [r7, #8]
 8002aaa:	893b      	ldrh	r3, [r7, #8]
 8002aac:	2b00      	cmp	r3, #0
 8002aae:	d1d8      	bne.n	8002a62 <ucg_com_arduino_generic_SW_SPI+0x186>
 8002ab0:	bf00      	nop
 8002ab2:	2301      	movs	r3, #1
 8002ab4:	4618      	mov	r0, r3
 8002ab6:	3710      	adds	r7, #16
 8002ab8:	46bd      	mov	sp, r7
 8002aba:	bd80      	pop	{r7, pc}
 8002abc:	40020000 	.word	0x40020000
 8002ac0:	40020400 	.word	0x40020400
 8002ac4:	40020800 	.word	0x40020800

08002ac8 <Ucglib4WireSWSPI_begin>:
 8002ac8:	b580      	push	{r7, lr}
 8002aca:	b082      	sub	sp, #8
 8002acc:	af00      	add	r7, sp, #0
 8002ace:	6078      	str	r0, [r7, #4]
 8002ad0:	460b      	mov	r3, r1
 8002ad2:	70fb      	strb	r3, [r7, #3]
 8002ad4:	4b07      	ldr	r3, [pc, #28]	; (8002af4 <Ucglib4WireSWSPI_begin+0x2c>)
 8002ad6:	4a08      	ldr	r2, [pc, #32]	; (8002af8 <Ucglib4WireSWSPI_begin+0x30>)
 8002ad8:	4908      	ldr	r1, [pc, #32]	; (8002afc <Ucglib4WireSWSPI_begin+0x34>)
 8002ada:	6878      	ldr	r0, [r7, #4]
 8002adc:	f001 f9a2 	bl	8003e24 <ucg_Init>
 8002ae0:	78fb      	ldrb	r3, [r7, #3]
 8002ae2:	4619      	mov	r1, r3
 8002ae4:	6878      	ldr	r0, [r7, #4]
 8002ae6:	f000 ff86 	bl	80039f6 <ucg_SetFontMode>
 8002aea:	bf00      	nop
 8002aec:	3708      	adds	r7, #8
 8002aee:	46bd      	mov	sp, r7
 8002af0:	bd80      	pop	{r7, pc}
 8002af2:	bf00      	nop
 8002af4:	080028dd 	.word	0x080028dd
 8002af8:	08003135 	.word	0x08003135
 8002afc:	0800325d 	.word	0x0800325d

08002b00 <ucg_DrawBox>:
 8002b00:	b580      	push	{r7, lr}
 8002b02:	b084      	sub	sp, #16
 8002b04:	af00      	add	r7, sp, #0
 8002b06:	60f8      	str	r0, [r7, #12]
 8002b08:	4608      	mov	r0, r1
 8002b0a:	4611      	mov	r1, r2
 8002b0c:	461a      	mov	r2, r3
 8002b0e:	4603      	mov	r3, r0
 8002b10:	817b      	strh	r3, [r7, #10]
 8002b12:	460b      	mov	r3, r1
 8002b14:	813b      	strh	r3, [r7, #8]
 8002b16:	4613      	mov	r3, r2
 8002b18:	80fb      	strh	r3, [r7, #6]
 8002b1a:	e014      	b.n	8002b46 <ucg_DrawBox+0x46>
 8002b1c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002b20:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8002b24:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8002b28:	68f8      	ldr	r0, [r7, #12]
 8002b2a:	f001 f9ed 	bl	8003f08 <ucg_DrawHLine>
 8002b2e:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 8002b32:	b29b      	uxth	r3, r3
 8002b34:	3b01      	subs	r3, #1
 8002b36:	b29b      	uxth	r3, r3
 8002b38:	833b      	strh	r3, [r7, #24]
 8002b3a:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 8002b3e:	b29b      	uxth	r3, r3
 8002b40:	3301      	adds	r3, #1
 8002b42:	b29b      	uxth	r3, r3
 8002b44:	813b      	strh	r3, [r7, #8]
 8002b46:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 8002b4a:	2b00      	cmp	r3, #0
 8002b4c:	dce6      	bgt.n	8002b1c <ucg_DrawBox+0x1c>
 8002b4e:	bf00      	nop
 8002b50:	3710      	adds	r7, #16
 8002b52:	46bd      	mov	sp, r7
 8002b54:	bd80      	pop	{r7, pc}

08002b56 <ucg_ClearScreen>:
 8002b56:	b580      	push	{r7, lr}
 8002b58:	b084      	sub	sp, #16
 8002b5a:	af02      	add	r7, sp, #8
 8002b5c:	6078      	str	r0, [r7, #4]
 8002b5e:	2300      	movs	r3, #0
 8002b60:	9300      	str	r3, [sp, #0]
 8002b62:	2300      	movs	r3, #0
 8002b64:	2200      	movs	r2, #0
 8002b66:	2100      	movs	r1, #0
 8002b68:	6878      	ldr	r0, [r7, #4]
 8002b6a:	f001 f9ec 	bl	8003f46 <ucg_SetColor>
 8002b6e:	6878      	ldr	r0, [r7, #4]
 8002b70:	f000 fb3b 	bl	80031ea <ucg_SetMaxClipRange>
 8002b74:	687b      	ldr	r3, [r7, #4]
 8002b76:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8002b7a:	687b      	ldr	r3, [r7, #4]
 8002b7c:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8002b80:	9300      	str	r3, [sp, #0]
 8002b82:	4613      	mov	r3, r2
 8002b84:	2200      	movs	r2, #0
 8002b86:	2100      	movs	r1, #0
 8002b88:	6878      	ldr	r0, [r7, #4]
 8002b8a:	f7ff ffb9 	bl	8002b00 <ucg_DrawBox>
 8002b8e:	23ff      	movs	r3, #255	; 0xff
 8002b90:	9300      	str	r3, [sp, #0]
 8002b92:	23ff      	movs	r3, #255	; 0xff
 8002b94:	22ff      	movs	r2, #255	; 0xff
 8002b96:	2100      	movs	r1, #0
 8002b98:	6878      	ldr	r0, [r7, #4]
 8002b9a:	f001 f9d4 	bl	8003f46 <ucg_SetColor>
 8002b9e:	bf00      	nop
 8002ba0:	3708      	adds	r7, #8
 8002ba2:	46bd      	mov	sp, r7
 8002ba4:	bd80      	pop	{r7, pc}

08002ba6 <ucg_ccs_init>:
 8002ba6:	b480      	push	{r7}
 8002ba8:	b083      	sub	sp, #12
 8002baa:	af00      	add	r7, sp, #0
 8002bac:	6078      	str	r0, [r7, #4]
 8002bae:	4608      	mov	r0, r1
 8002bb0:	4611      	mov	r1, r2
 8002bb2:	461a      	mov	r2, r3
 8002bb4:	4603      	mov	r3, r0
 8002bb6:	70fb      	strb	r3, [r7, #3]
 8002bb8:	460b      	mov	r3, r1
 8002bba:	70bb      	strb	r3, [r7, #2]
 8002bbc:	4613      	mov	r3, r2
 8002bbe:	803b      	strh	r3, [r7, #0]
 8002bc0:	687b      	ldr	r3, [r7, #4]
 8002bc2:	78fa      	ldrb	r2, [r7, #3]
 8002bc4:	705a      	strb	r2, [r3, #1]
 8002bc6:	78bb      	ldrb	r3, [r7, #2]
 8002bc8:	b29a      	uxth	r2, r3
 8002bca:	78fb      	ldrb	r3, [r7, #3]
 8002bcc:	b29b      	uxth	r3, r3
 8002bce:	1ad3      	subs	r3, r2, r3
 8002bd0:	b29b      	uxth	r3, r3
 8002bd2:	b21a      	sxth	r2, r3
 8002bd4:	687b      	ldr	r3, [r7, #4]
 8002bd6:	809a      	strh	r2, [r3, #4]
 8002bd8:	883b      	ldrh	r3, [r7, #0]
 8002bda:	3b01      	subs	r3, #1
 8002bdc:	b29b      	uxth	r3, r3
 8002bde:	b21a      	sxth	r2, r3
 8002be0:	687b      	ldr	r3, [r7, #4]
 8002be2:	811a      	strh	r2, [r3, #8]
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	2201      	movs	r2, #1
 8002be8:	805a      	strh	r2, [r3, #2]
 8002bea:	687b      	ldr	r3, [r7, #4]
 8002bec:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8002bf0:	461a      	mov	r2, r3
 8002bf2:	687b      	ldr	r3, [r7, #4]
 8002bf4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002bf8:	fb92 f3f3 	sdiv	r3, r2, r3
 8002bfc:	b21a      	sxth	r2, r3
 8002bfe:	687b      	ldr	r3, [r7, #4]
 8002c00:	80da      	strh	r2, [r3, #6]
 8002c02:	687b      	ldr	r3, [r7, #4]
 8002c04:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8002c08:	2b00      	cmp	r3, #0
 8002c0a:	da0c      	bge.n	8002c26 <ucg_ccs_init+0x80>
 8002c0c:	687b      	ldr	r3, [r7, #4]
 8002c0e:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8002c12:	b29b      	uxth	r3, r3
 8002c14:	425b      	negs	r3, r3
 8002c16:	b29b      	uxth	r3, r3
 8002c18:	b21a      	sxth	r2, r3
 8002c1a:	687b      	ldr	r3, [r7, #4]
 8002c1c:	809a      	strh	r2, [r3, #4]
 8002c1e:	687b      	ldr	r3, [r7, #4]
 8002c20:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002c24:	805a      	strh	r2, [r3, #2]
 8002c26:	687b      	ldr	r3, [r7, #4]
 8002c28:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8002c2c:	687a      	ldr	r2, [r7, #4]
 8002c2e:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8002c32:	fb93 f1f2 	sdiv	r1, r3, r2
 8002c36:	fb02 f201 	mul.w	r2, r2, r1
 8002c3a:	1a9b      	subs	r3, r3, r2
 8002c3c:	b21a      	sxth	r2, r3
 8002c3e:	687b      	ldr	r3, [r7, #4]
 8002c40:	815a      	strh	r2, [r3, #10]
 8002c42:	687b      	ldr	r3, [r7, #4]
 8002c44:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002c48:	0fda      	lsrs	r2, r3, #31
 8002c4a:	4413      	add	r3, r2
 8002c4c:	105b      	asrs	r3, r3, #1
 8002c4e:	b21a      	sxth	r2, r3
 8002c50:	687b      	ldr	r3, [r7, #4]
 8002c52:	819a      	strh	r2, [r3, #12]
 8002c54:	687b      	ldr	r3, [r7, #4]
 8002c56:	78fa      	ldrb	r2, [r7, #3]
 8002c58:	701a      	strb	r2, [r3, #0]
 8002c5a:	bf00      	nop
 8002c5c:	370c      	adds	r7, #12
 8002c5e:	46bd      	mov	sp, r7
 8002c60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c64:	4770      	bx	lr

08002c66 <ucg_ccs_step>:
 8002c66:	b480      	push	{r7}
 8002c68:	b083      	sub	sp, #12
 8002c6a:	af00      	add	r7, sp, #0
 8002c6c:	6078      	str	r0, [r7, #4]
 8002c6e:	687b      	ldr	r3, [r7, #4]
 8002c70:	781a      	ldrb	r2, [r3, #0]
 8002c72:	687b      	ldr	r3, [r7, #4]
 8002c74:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8002c78:	b2db      	uxtb	r3, r3
 8002c7a:	4413      	add	r3, r2
 8002c7c:	b2da      	uxtb	r2, r3
 8002c7e:	687b      	ldr	r3, [r7, #4]
 8002c80:	701a      	strb	r2, [r3, #0]
 8002c82:	687b      	ldr	r3, [r7, #4]
 8002c84:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 8002c88:	b29a      	uxth	r2, r3
 8002c8a:	687b      	ldr	r3, [r7, #4]
 8002c8c:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8002c90:	b29b      	uxth	r3, r3
 8002c92:	4413      	add	r3, r2
 8002c94:	b29b      	uxth	r3, r3
 8002c96:	b21a      	sxth	r2, r3
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	819a      	strh	r2, [r3, #12]
 8002c9c:	687b      	ldr	r3, [r7, #4]
 8002c9e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8002ca2:	687b      	ldr	r3, [r7, #4]
 8002ca4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002ca8:	429a      	cmp	r2, r3
 8002caa:	db16      	blt.n	8002cda <ucg_ccs_step+0x74>
 8002cac:	687b      	ldr	r3, [r7, #4]
 8002cae:	781a      	ldrb	r2, [r3, #0]
 8002cb0:	687b      	ldr	r3, [r7, #4]
 8002cb2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8002cb6:	b2db      	uxtb	r3, r3
 8002cb8:	4413      	add	r3, r2
 8002cba:	b2da      	uxtb	r2, r3
 8002cbc:	687b      	ldr	r3, [r7, #4]
 8002cbe:	701a      	strb	r2, [r3, #0]
 8002cc0:	687b      	ldr	r3, [r7, #4]
 8002cc2:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 8002cc6:	b29a      	uxth	r2, r3
 8002cc8:	687b      	ldr	r3, [r7, #4]
 8002cca:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002cce:	b29b      	uxth	r3, r3
 8002cd0:	1ad3      	subs	r3, r2, r3
 8002cd2:	b29b      	uxth	r3, r3
 8002cd4:	b21a      	sxth	r2, r3
 8002cd6:	687b      	ldr	r3, [r7, #4]
 8002cd8:	819a      	strh	r2, [r3, #12]
 8002cda:	bf00      	nop
 8002cdc:	370c      	adds	r7, #12
 8002cde:	46bd      	mov	sp, r7
 8002ce0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ce4:	4770      	bx	lr

08002ce6 <ucg_ccs_seek>:
 8002ce6:	b480      	push	{r7}
 8002ce8:	b085      	sub	sp, #20
 8002cea:	af00      	add	r7, sp, #0
 8002cec:	6078      	str	r0, [r7, #4]
 8002cee:	460b      	mov	r3, r1
 8002cf0:	807b      	strh	r3, [r7, #2]
 8002cf2:	687b      	ldr	r3, [r7, #4]
 8002cf4:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8002cf8:	b2da      	uxtb	r2, r3
 8002cfa:	687b      	ldr	r3, [r7, #4]
 8002cfc:	701a      	strb	r2, [r3, #0]
 8002cfe:	687b      	ldr	r3, [r7, #4]
 8002d00:	781a      	ldrb	r2, [r3, #0]
 8002d02:	887b      	ldrh	r3, [r7, #2]
 8002d04:	b2db      	uxtb	r3, r3
 8002d06:	fb12 f303 	smulbb	r3, r2, r3
 8002d0a:	b2da      	uxtb	r2, r3
 8002d0c:	687b      	ldr	r3, [r7, #4]
 8002d0e:	701a      	strb	r2, [r3, #0]
 8002d10:	687b      	ldr	r3, [r7, #4]
 8002d12:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8002d16:	b29a      	uxth	r2, r3
 8002d18:	887b      	ldrh	r3, [r7, #2]
 8002d1a:	fb12 f303 	smulbb	r3, r2, r3
 8002d1e:	b29a      	uxth	r2, r3
 8002d20:	687b      	ldr	r3, [r7, #4]
 8002d22:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002d26:	0fd9      	lsrs	r1, r3, #31
 8002d28:	440b      	add	r3, r1
 8002d2a:	105b      	asrs	r3, r3, #1
 8002d2c:	b21b      	sxth	r3, r3
 8002d2e:	b29b      	uxth	r3, r3
 8002d30:	4413      	add	r3, r2
 8002d32:	b29b      	uxth	r3, r3
 8002d34:	81fb      	strh	r3, [r7, #14]
 8002d36:	687b      	ldr	r3, [r7, #4]
 8002d38:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8002d3c:	2b00      	cmp	r3, #0
 8002d3e:	db0e      	blt.n	8002d5e <ucg_ccs_seek+0x78>
 8002d40:	687b      	ldr	r3, [r7, #4]
 8002d42:	781a      	ldrb	r2, [r3, #0]
 8002d44:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002d48:	6879      	ldr	r1, [r7, #4]
 8002d4a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8002d4e:	fb93 f3f1 	sdiv	r3, r3, r1
 8002d52:	b2db      	uxtb	r3, r3
 8002d54:	4413      	add	r3, r2
 8002d56:	b2da      	uxtb	r2, r3
 8002d58:	687b      	ldr	r3, [r7, #4]
 8002d5a:	701a      	strb	r2, [r3, #0]
 8002d5c:	e00d      	b.n	8002d7a <ucg_ccs_seek+0x94>
 8002d5e:	687b      	ldr	r3, [r7, #4]
 8002d60:	781a      	ldrb	r2, [r3, #0]
 8002d62:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002d66:	6879      	ldr	r1, [r7, #4]
 8002d68:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8002d6c:	fb93 f3f1 	sdiv	r3, r3, r1
 8002d70:	b2db      	uxtb	r3, r3
 8002d72:	1ad3      	subs	r3, r2, r3
 8002d74:	b2da      	uxtb	r2, r3
 8002d76:	687b      	ldr	r3, [r7, #4]
 8002d78:	701a      	strb	r2, [r3, #0]
 8002d7a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002d7e:	687a      	ldr	r2, [r7, #4]
 8002d80:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8002d84:	fb93 f1f2 	sdiv	r1, r3, r2
 8002d88:	fb02 f201 	mul.w	r2, r2, r1
 8002d8c:	1a9b      	subs	r3, r3, r2
 8002d8e:	b21a      	sxth	r2, r3
 8002d90:	687b      	ldr	r3, [r7, #4]
 8002d92:	819a      	strh	r2, [r3, #12]
 8002d94:	687b      	ldr	r3, [r7, #4]
 8002d96:	781a      	ldrb	r2, [r3, #0]
 8002d98:	687b      	ldr	r3, [r7, #4]
 8002d9a:	785b      	ldrb	r3, [r3, #1]
 8002d9c:	4413      	add	r3, r2
 8002d9e:	b2da      	uxtb	r2, r3
 8002da0:	687b      	ldr	r3, [r7, #4]
 8002da2:	701a      	strb	r2, [r3, #0]
 8002da4:	bf00      	nop
 8002da6:	3714      	adds	r7, #20
 8002da8:	46bd      	mov	sp, r7
 8002daa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002dae:	4770      	bx	lr

08002db0 <ucg_dev_default_cb>:
 8002db0:	b580      	push	{r7, lr}
 8002db2:	b084      	sub	sp, #16
 8002db4:	af00      	add	r7, sp, #0
 8002db6:	60f8      	str	r0, [r7, #12]
 8002db8:	460b      	mov	r3, r1
 8002dba:	607a      	str	r2, [r7, #4]
 8002dbc:	817b      	strh	r3, [r7, #10]
 8002dbe:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002dc2:	2b0c      	cmp	r3, #12
 8002dc4:	d00a      	beq.n	8002ddc <ucg_dev_default_cb+0x2c>
 8002dc6:	2b17      	cmp	r3, #23
 8002dc8:	d10f      	bne.n	8002dea <ucg_dev_default_cb+0x3a>
 8002dca:	68fb      	ldr	r3, [r7, #12]
 8002dcc:	68db      	ldr	r3, [r3, #12]
 8002dce:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8002dd2:	687a      	ldr	r2, [r7, #4]
 8002dd4:	68f8      	ldr	r0, [r7, #12]
 8002dd6:	4798      	blx	r3
 8002dd8:	4603      	mov	r3, r0
 8002dda:	e007      	b.n	8002dec <ucg_dev_default_cb+0x3c>
 8002ddc:	68fb      	ldr	r3, [r7, #12]
 8002dde:	687a      	ldr	r2, [r7, #4]
 8002de0:	3370      	adds	r3, #112	; 0x70
 8002de2:	6810      	ldr	r0, [r2, #0]
 8002de4:	6851      	ldr	r1, [r2, #4]
 8002de6:	c303      	stmia	r3!, {r0, r1}
 8002de8:	bf00      	nop
 8002dea:	2301      	movs	r3, #1
 8002dec:	4618      	mov	r0, r3
 8002dee:	3710      	adds	r7, #16
 8002df0:	46bd      	mov	sp, r7
 8002df2:	bd80      	pop	{r7, pc}

08002df4 <ucg_ext_none>:
 8002df4:	b480      	push	{r7}
 8002df6:	b085      	sub	sp, #20
 8002df8:	af00      	add	r7, sp, #0
 8002dfa:	60f8      	str	r0, [r7, #12]
 8002dfc:	460b      	mov	r3, r1
 8002dfe:	607a      	str	r2, [r7, #4]
 8002e00:	817b      	strh	r3, [r7, #10]
 8002e02:	2301      	movs	r3, #1
 8002e04:	4618      	mov	r0, r3
 8002e06:	3714      	adds	r7, #20
 8002e08:	46bd      	mov	sp, r7
 8002e0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e0e:	4770      	bx	lr

08002e10 <ucg_handle_st7735_l90fx>:
 8002e10:	b590      	push	{r4, r7, lr}
 8002e12:	b085      	sub	sp, #20
 8002e14:	af00      	add	r7, sp, #0
 8002e16:	6078      	str	r0, [r7, #4]
 8002e18:	6878      	ldr	r0, [r7, #4]
 8002e1a:	f001 fbdd 	bl	80045d8 <ucg_clip_l90fx>
 8002e1e:	4603      	mov	r3, r0
 8002e20:	2b00      	cmp	r3, #0
 8002e22:	d053      	beq.n	8002ecc <ucg_handle_st7735_l90fx+0xbc>
 8002e24:	687b      	ldr	r3, [r7, #4]
 8002e26:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 8002e2a:	2b01      	cmp	r3, #1
 8002e2c:	d008      	beq.n	8002e40 <ucg_handle_st7735_l90fx+0x30>
 8002e2e:	2b02      	cmp	r3, #2
 8002e30:	d00b      	beq.n	8002e4a <ucg_handle_st7735_l90fx+0x3a>
 8002e32:	2b00      	cmp	r3, #0
 8002e34:	d11b      	bne.n	8002e6e <ucg_handle_st7735_l90fx+0x5e>
 8002e36:	4928      	ldr	r1, [pc, #160]	; (8002ed8 <ucg_handle_st7735_l90fx+0xc8>)
 8002e38:	6878      	ldr	r0, [r7, #4]
 8002e3a:	f001 fefb 	bl	8004c34 <ucg_com_SendCmdSeq>
 8002e3e:	e028      	b.n	8002e92 <ucg_handle_st7735_l90fx+0x82>
 8002e40:	4926      	ldr	r1, [pc, #152]	; (8002edc <ucg_handle_st7735_l90fx+0xcc>)
 8002e42:	6878      	ldr	r0, [r7, #4]
 8002e44:	f001 fef6 	bl	8004c34 <ucg_com_SendCmdSeq>
 8002e48:	e023      	b.n	8002e92 <ucg_handle_st7735_l90fx+0x82>
 8002e4a:	687b      	ldr	r3, [r7, #4]
 8002e4c:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8002e4e:	81fb      	strh	r3, [r7, #14]
 8002e50:	89fb      	ldrh	r3, [r7, #14]
 8002e52:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 8002e56:	b29b      	uxth	r3, r3
 8002e58:	b21a      	sxth	r2, r3
 8002e5a:	687b      	ldr	r3, [r7, #4]
 8002e5c:	849a      	strh	r2, [r3, #36]	; 0x24
 8002e5e:	4920      	ldr	r1, [pc, #128]	; (8002ee0 <ucg_handle_st7735_l90fx+0xd0>)
 8002e60:	6878      	ldr	r0, [r7, #4]
 8002e62:	f001 fee7 	bl	8004c34 <ucg_com_SendCmdSeq>
 8002e66:	687b      	ldr	r3, [r7, #4]
 8002e68:	89fa      	ldrh	r2, [r7, #14]
 8002e6a:	849a      	strh	r2, [r3, #36]	; 0x24
 8002e6c:	e011      	b.n	8002e92 <ucg_handle_st7735_l90fx+0x82>
 8002e6e:	687b      	ldr	r3, [r7, #4]
 8002e70:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002e72:	81fb      	strh	r3, [r7, #14]
 8002e74:	89fb      	ldrh	r3, [r7, #14]
 8002e76:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 8002e7a:	b29b      	uxth	r3, r3
 8002e7c:	b21a      	sxth	r2, r3
 8002e7e:	687b      	ldr	r3, [r7, #4]
 8002e80:	84da      	strh	r2, [r3, #38]	; 0x26
 8002e82:	4918      	ldr	r1, [pc, #96]	; (8002ee4 <ucg_handle_st7735_l90fx+0xd4>)
 8002e84:	6878      	ldr	r0, [r7, #4]
 8002e86:	f001 fed5 	bl	8004c34 <ucg_com_SendCmdSeq>
 8002e8a:	687b      	ldr	r3, [r7, #4]
 8002e8c:	89fa      	ldrh	r2, [r7, #14]
 8002e8e:	84da      	strh	r2, [r3, #38]	; 0x26
 8002e90:	bf00      	nop
 8002e92:	687b      	ldr	r3, [r7, #4]
 8002e94:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8002e98:	723b      	strb	r3, [r7, #8]
 8002e9a:	687b      	ldr	r3, [r7, #4]
 8002e9c:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8002ea0:	727b      	strb	r3, [r7, #9]
 8002ea2:	687b      	ldr	r3, [r7, #4]
 8002ea4:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 8002ea8:	72bb      	strb	r3, [r7, #10]
 8002eaa:	687b      	ldr	r3, [r7, #4]
 8002eac:	69dc      	ldr	r4, [r3, #28]
 8002eae:	687b      	ldr	r3, [r7, #4]
 8002eb0:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8002eb4:	b29a      	uxth	r2, r3
 8002eb6:	f107 0308 	add.w	r3, r7, #8
 8002eba:	2113      	movs	r1, #19
 8002ebc:	6878      	ldr	r0, [r7, #4]
 8002ebe:	47a0      	blx	r4
 8002ec0:	2101      	movs	r1, #1
 8002ec2:	6878      	ldr	r0, [r7, #4]
 8002ec4:	f001 fe02 	bl	8004acc <ucg_com_SetCSLineStatus>
 8002ec8:	2301      	movs	r3, #1
 8002eca:	e000      	b.n	8002ece <ucg_handle_st7735_l90fx+0xbe>
 8002ecc:	2300      	movs	r3, #0
 8002ece:	4618      	mov	r0, r3
 8002ed0:	3714      	adds	r7, #20
 8002ed2:	46bd      	mov	sp, r7
 8002ed4:	bd90      	pop	{r4, r7, pc}
 8002ed6:	bf00      	nop
 8002ed8:	0800588c 	.word	0x0800588c
 8002edc:	080058ac 	.word	0x080058ac
 8002ee0:	080058d0 	.word	0x080058d0
 8002ee4:	080058f4 	.word	0x080058f4

08002ee8 <ucg_handle_st7735_l90se>:
 8002ee8:	b590      	push	{r4, r7, lr}
 8002eea:	b087      	sub	sp, #28
 8002eec:	af00      	add	r7, sp, #0
 8002eee:	6078      	str	r0, [r7, #4]
 8002ef0:	2300      	movs	r3, #0
 8002ef2:	75fb      	strb	r3, [r7, #23]
 8002ef4:	e01a      	b.n	8002f2c <ucg_handle_st7735_l90se+0x44>
 8002ef6:	687b      	ldr	r3, [r7, #4]
 8002ef8:	f103 0146 	add.w	r1, r3, #70	; 0x46
 8002efc:	7dfa      	ldrb	r2, [r7, #23]
 8002efe:	4613      	mov	r3, r2
 8002f00:	00db      	lsls	r3, r3, #3
 8002f02:	1a9b      	subs	r3, r3, r2
 8002f04:	005b      	lsls	r3, r3, #1
 8002f06:	18c8      	adds	r0, r1, r3
 8002f08:	7dfb      	ldrb	r3, [r7, #23]
 8002f0a:	687a      	ldr	r2, [r7, #4]
 8002f0c:	4413      	add	r3, r2
 8002f0e:	f893 103a 	ldrb.w	r1, [r3, #58]	; 0x3a
 8002f12:	7dfb      	ldrb	r3, [r7, #23]
 8002f14:	687a      	ldr	r2, [r7, #4]
 8002f16:	4413      	add	r3, r2
 8002f18:	f893 203d 	ldrb.w	r2, [r3, #61]	; 0x3d
 8002f1c:	687b      	ldr	r3, [r7, #4]
 8002f1e:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8002f22:	f7ff fe40 	bl	8002ba6 <ucg_ccs_init>
 8002f26:	7dfb      	ldrb	r3, [r7, #23]
 8002f28:	3301      	adds	r3, #1
 8002f2a:	75fb      	strb	r3, [r7, #23]
 8002f2c:	7dfb      	ldrb	r3, [r7, #23]
 8002f2e:	2b02      	cmp	r3, #2
 8002f30:	d9e1      	bls.n	8002ef6 <ucg_handle_st7735_l90se+0xe>
 8002f32:	6878      	ldr	r0, [r7, #4]
 8002f34:	f001 fcd0 	bl	80048d8 <ucg_clip_l90se>
 8002f38:	4603      	mov	r3, r0
 8002f3a:	2b00      	cmp	r3, #0
 8002f3c:	d071      	beq.n	8003022 <ucg_handle_st7735_l90se+0x13a>
 8002f3e:	687b      	ldr	r3, [r7, #4]
 8002f40:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 8002f44:	2b01      	cmp	r3, #1
 8002f46:	d008      	beq.n	8002f5a <ucg_handle_st7735_l90se+0x72>
 8002f48:	2b02      	cmp	r3, #2
 8002f4a:	d00b      	beq.n	8002f64 <ucg_handle_st7735_l90se+0x7c>
 8002f4c:	2b00      	cmp	r3, #0
 8002f4e:	d11b      	bne.n	8002f88 <ucg_handle_st7735_l90se+0xa0>
 8002f50:	4936      	ldr	r1, [pc, #216]	; (800302c <ucg_handle_st7735_l90se+0x144>)
 8002f52:	6878      	ldr	r0, [r7, #4]
 8002f54:	f001 fe6e 	bl	8004c34 <ucg_com_SendCmdSeq>
 8002f58:	e028      	b.n	8002fac <ucg_handle_st7735_l90se+0xc4>
 8002f5a:	4935      	ldr	r1, [pc, #212]	; (8003030 <ucg_handle_st7735_l90se+0x148>)
 8002f5c:	6878      	ldr	r0, [r7, #4]
 8002f5e:	f001 fe69 	bl	8004c34 <ucg_com_SendCmdSeq>
 8002f62:	e023      	b.n	8002fac <ucg_handle_st7735_l90se+0xc4>
 8002f64:	687b      	ldr	r3, [r7, #4]
 8002f66:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8002f68:	827b      	strh	r3, [r7, #18]
 8002f6a:	8a7b      	ldrh	r3, [r7, #18]
 8002f6c:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 8002f70:	b29b      	uxth	r3, r3
 8002f72:	b21a      	sxth	r2, r3
 8002f74:	687b      	ldr	r3, [r7, #4]
 8002f76:	849a      	strh	r2, [r3, #36]	; 0x24
 8002f78:	492e      	ldr	r1, [pc, #184]	; (8003034 <ucg_handle_st7735_l90se+0x14c>)
 8002f7a:	6878      	ldr	r0, [r7, #4]
 8002f7c:	f001 fe5a 	bl	8004c34 <ucg_com_SendCmdSeq>
 8002f80:	687b      	ldr	r3, [r7, #4]
 8002f82:	8a7a      	ldrh	r2, [r7, #18]
 8002f84:	849a      	strh	r2, [r3, #36]	; 0x24
 8002f86:	e011      	b.n	8002fac <ucg_handle_st7735_l90se+0xc4>
 8002f88:	687b      	ldr	r3, [r7, #4]
 8002f8a:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002f8c:	827b      	strh	r3, [r7, #18]
 8002f8e:	8a7b      	ldrh	r3, [r7, #18]
 8002f90:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 8002f94:	b29b      	uxth	r3, r3
 8002f96:	b21a      	sxth	r2, r3
 8002f98:	687b      	ldr	r3, [r7, #4]
 8002f9a:	84da      	strh	r2, [r3, #38]	; 0x26
 8002f9c:	4926      	ldr	r1, [pc, #152]	; (8003038 <ucg_handle_st7735_l90se+0x150>)
 8002f9e:	6878      	ldr	r0, [r7, #4]
 8002fa0:	f001 fe48 	bl	8004c34 <ucg_com_SendCmdSeq>
 8002fa4:	687b      	ldr	r3, [r7, #4]
 8002fa6:	8a7a      	ldrh	r2, [r7, #18]
 8002fa8:	84da      	strh	r2, [r3, #38]	; 0x26
 8002faa:	bf00      	nop
 8002fac:	2300      	movs	r3, #0
 8002fae:	82bb      	strh	r3, [r7, #20]
 8002fb0:	e02a      	b.n	8003008 <ucg_handle_st7735_l90se+0x120>
 8002fb2:	687b      	ldr	r3, [r7, #4]
 8002fb4:	f893 3046 	ldrb.w	r3, [r3, #70]	; 0x46
 8002fb8:	733b      	strb	r3, [r7, #12]
 8002fba:	687b      	ldr	r3, [r7, #4]
 8002fbc:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 8002fc0:	737b      	strb	r3, [r7, #13]
 8002fc2:	687b      	ldr	r3, [r7, #4]
 8002fc4:	f893 3062 	ldrb.w	r3, [r3, #98]	; 0x62
 8002fc8:	73bb      	strb	r3, [r7, #14]
 8002fca:	687b      	ldr	r3, [r7, #4]
 8002fcc:	69dc      	ldr	r4, [r3, #28]
 8002fce:	f107 030c 	add.w	r3, r7, #12
 8002fd2:	2201      	movs	r2, #1
 8002fd4:	2113      	movs	r1, #19
 8002fd6:	6878      	ldr	r0, [r7, #4]
 8002fd8:	47a0      	blx	r4
 8002fda:	687b      	ldr	r3, [r7, #4]
 8002fdc:	3346      	adds	r3, #70	; 0x46
 8002fde:	4618      	mov	r0, r3
 8002fe0:	f7ff fe41 	bl	8002c66 <ucg_ccs_step>
 8002fe4:	687b      	ldr	r3, [r7, #4]
 8002fe6:	3346      	adds	r3, #70	; 0x46
 8002fe8:	330e      	adds	r3, #14
 8002fea:	4618      	mov	r0, r3
 8002fec:	f7ff fe3b 	bl	8002c66 <ucg_ccs_step>
 8002ff0:	687b      	ldr	r3, [r7, #4]
 8002ff2:	3346      	adds	r3, #70	; 0x46
 8002ff4:	331c      	adds	r3, #28
 8002ff6:	4618      	mov	r0, r3
 8002ff8:	f7ff fe35 	bl	8002c66 <ucg_ccs_step>
 8002ffc:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 8003000:	b29b      	uxth	r3, r3
 8003002:	3301      	adds	r3, #1
 8003004:	b29b      	uxth	r3, r3
 8003006:	82bb      	strh	r3, [r7, #20]
 8003008:	687b      	ldr	r3, [r7, #4]
 800300a:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 800300e:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 8003012:	429a      	cmp	r2, r3
 8003014:	dbcd      	blt.n	8002fb2 <ucg_handle_st7735_l90se+0xca>
 8003016:	2101      	movs	r1, #1
 8003018:	6878      	ldr	r0, [r7, #4]
 800301a:	f001 fd57 	bl	8004acc <ucg_com_SetCSLineStatus>
 800301e:	2301      	movs	r3, #1
 8003020:	e000      	b.n	8003024 <ucg_handle_st7735_l90se+0x13c>
 8003022:	2300      	movs	r3, #0
 8003024:	4618      	mov	r0, r3
 8003026:	371c      	adds	r7, #28
 8003028:	46bd      	mov	sp, r7
 800302a:	bd90      	pop	{r4, r7, pc}
 800302c:	0800588c 	.word	0x0800588c
 8003030:	080058ac 	.word	0x080058ac
 8003034:	080058d0 	.word	0x080058d0
 8003038:	080058f4 	.word	0x080058f4

0800303c <ucg_dev_ic_st7735_18>:
 800303c:	b590      	push	{r4, r7, lr}
 800303e:	b087      	sub	sp, #28
 8003040:	af00      	add	r7, sp, #0
 8003042:	60f8      	str	r0, [r7, #12]
 8003044:	460b      	mov	r3, r1
 8003046:	607a      	str	r2, [r7, #4]
 8003048:	817b      	strh	r3, [r7, #10]
 800304a:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800304e:	3b0a      	subs	r3, #10
 8003050:	2b0b      	cmp	r3, #11
 8003052:	d85f      	bhi.n	8003114 <ucg_dev_ic_st7735_18+0xd8>
 8003054:	a201      	add	r2, pc, #4	; (adr r2, 800305c <ucg_dev_ic_st7735_18+0x20>)
 8003056:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800305a:	bf00      	nop
 800305c:	0800308d 	.word	0x0800308d
 8003060:	080030a7 	.word	0x080030a7
 8003064:	08003115 	.word	0x08003115
 8003068:	08003115 	.word	0x08003115
 800306c:	08003115 	.word	0x08003115
 8003070:	080030b3 	.word	0x080030b3
 8003074:	08003115 	.word	0x08003115
 8003078:	08003115 	.word	0x08003115
 800307c:	08003115 	.word	0x08003115
 8003080:	08003115 	.word	0x08003115
 8003084:	080030c3 	.word	0x080030c3
 8003088:	0800310b 	.word	0x0800310b
 800308c:	68fb      	ldr	r3, [r7, #12]
 800308e:	2202      	movs	r2, #2
 8003090:	841a      	strh	r2, [r3, #32]
 8003092:	68fb      	ldr	r3, [r7, #12]
 8003094:	2201      	movs	r2, #1
 8003096:	845a      	strh	r2, [r3, #34]	; 0x22
 8003098:	2242      	movs	r2, #66	; 0x42
 800309a:	2164      	movs	r1, #100	; 0x64
 800309c:	68f8      	ldr	r0, [r7, #12]
 800309e:	f001 fc64 	bl	800496a <ucg_com_PowerUp>
 80030a2:	4603      	mov	r3, r0
 80030a4:	e03e      	b.n	8003124 <ucg_dev_ic_st7735_18+0xe8>
 80030a6:	4921      	ldr	r1, [pc, #132]	; (800312c <ucg_dev_ic_st7735_18+0xf0>)
 80030a8:	68f8      	ldr	r0, [r7, #12]
 80030aa:	f001 fdc3 	bl	8004c34 <ucg_com_SendCmdSeq>
 80030ae:	2301      	movs	r3, #1
 80030b0:	e038      	b.n	8003124 <ucg_dev_ic_st7735_18+0xe8>
 80030b2:	687b      	ldr	r3, [r7, #4]
 80030b4:	2280      	movs	r2, #128	; 0x80
 80030b6:	801a      	strh	r2, [r3, #0]
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	2280      	movs	r2, #128	; 0x80
 80030bc:	805a      	strh	r2, [r3, #2]
 80030be:	2301      	movs	r3, #1
 80030c0:	e030      	b.n	8003124 <ucg_dev_ic_st7735_18+0xe8>
 80030c2:	68f8      	ldr	r0, [r7, #12]
 80030c4:	f001 fa6f 	bl	80045a6 <ucg_clip_is_pixel_visible>
 80030c8:	4603      	mov	r3, r0
 80030ca:	2b00      	cmp	r3, #0
 80030cc:	d01b      	beq.n	8003106 <ucg_dev_ic_st7735_18+0xca>
 80030ce:	4918      	ldr	r1, [pc, #96]	; (8003130 <ucg_dev_ic_st7735_18+0xf4>)
 80030d0:	68f8      	ldr	r0, [r7, #12]
 80030d2:	f001 fdaf 	bl	8004c34 <ucg_com_SendCmdSeq>
 80030d6:	68fb      	ldr	r3, [r7, #12]
 80030d8:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80030dc:	753b      	strb	r3, [r7, #20]
 80030de:	68fb      	ldr	r3, [r7, #12]
 80030e0:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 80030e4:	757b      	strb	r3, [r7, #21]
 80030e6:	68fb      	ldr	r3, [r7, #12]
 80030e8:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 80030ec:	75bb      	strb	r3, [r7, #22]
 80030ee:	68fb      	ldr	r3, [r7, #12]
 80030f0:	69dc      	ldr	r4, [r3, #28]
 80030f2:	f107 0314 	add.w	r3, r7, #20
 80030f6:	2201      	movs	r2, #1
 80030f8:	2113      	movs	r1, #19
 80030fa:	68f8      	ldr	r0, [r7, #12]
 80030fc:	47a0      	blx	r4
 80030fe:	2101      	movs	r1, #1
 8003100:	68f8      	ldr	r0, [r7, #12]
 8003102:	f001 fce3 	bl	8004acc <ucg_com_SetCSLineStatus>
 8003106:	2301      	movs	r3, #1
 8003108:	e00c      	b.n	8003124 <ucg_dev_ic_st7735_18+0xe8>
 800310a:	68f8      	ldr	r0, [r7, #12]
 800310c:	f7ff fe80 	bl	8002e10 <ucg_handle_st7735_l90fx>
 8003110:	2301      	movs	r3, #1
 8003112:	e007      	b.n	8003124 <ucg_dev_ic_st7735_18+0xe8>
 8003114:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8003118:	687a      	ldr	r2, [r7, #4]
 800311a:	4619      	mov	r1, r3
 800311c:	68f8      	ldr	r0, [r7, #12]
 800311e:	f7ff fe47 	bl	8002db0 <ucg_dev_default_cb>
 8003122:	4603      	mov	r3, r0
 8003124:	4618      	mov	r0, r3
 8003126:	371c      	adds	r7, #28
 8003128:	46bd      	mov	sp, r7
 800312a:	bd90      	pop	{r4, r7, pc}
 800312c:	08005918 	.word	0x08005918
 8003130:	0800586c 	.word	0x0800586c

08003134 <ucg_ext_st7735_18>:
 8003134:	b580      	push	{r7, lr}
 8003136:	b084      	sub	sp, #16
 8003138:	af00      	add	r7, sp, #0
 800313a:	60f8      	str	r0, [r7, #12]
 800313c:	460b      	mov	r3, r1
 800313e:	607a      	str	r2, [r7, #4]
 8003140:	817b      	strh	r3, [r7, #10]
 8003142:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8003146:	2b17      	cmp	r3, #23
 8003148:	d103      	bne.n	8003152 <ucg_ext_st7735_18+0x1e>
 800314a:	68f8      	ldr	r0, [r7, #12]
 800314c:	f7ff fecc 	bl	8002ee8 <ucg_handle_st7735_l90se>
 8003150:	bf00      	nop
 8003152:	2301      	movs	r3, #1
 8003154:	4618      	mov	r0, r3
 8003156:	3710      	adds	r7, #16
 8003158:	46bd      	mov	sp, r7
 800315a:	bd80      	pop	{r7, pc}

0800315c <ucg_PowerDown>:
 800315c:	b580      	push	{r7, lr}
 800315e:	b082      	sub	sp, #8
 8003160:	af00      	add	r7, sp, #0
 8003162:	6078      	str	r0, [r7, #4]
 8003164:	687b      	ldr	r3, [r7, #4]
 8003166:	781b      	ldrb	r3, [r3, #0]
 8003168:	f003 0301 	and.w	r3, r3, #1
 800316c:	b2db      	uxtb	r3, r3
 800316e:	2b00      	cmp	r3, #0
 8003170:	d00a      	beq.n	8003188 <ucg_PowerDown+0x2c>
 8003172:	687b      	ldr	r3, [r7, #4]
 8003174:	689b      	ldr	r3, [r3, #8]
 8003176:	2200      	movs	r2, #0
 8003178:	210b      	movs	r1, #11
 800317a:	6878      	ldr	r0, [r7, #4]
 800317c:	4798      	blx	r3
 800317e:	687a      	ldr	r2, [r7, #4]
 8003180:	7813      	ldrb	r3, [r2, #0]
 8003182:	f36f 0300 	bfc	r3, #0, #1
 8003186:	7013      	strb	r3, [r2, #0]
 8003188:	bf00      	nop
 800318a:	3708      	adds	r7, #8
 800318c:	46bd      	mov	sp, r7
 800318e:	bd80      	pop	{r7, pc}

08003190 <ucg_PowerUp>:
 8003190:	b580      	push	{r7, lr}
 8003192:	b084      	sub	sp, #16
 8003194:	af00      	add	r7, sp, #0
 8003196:	6078      	str	r0, [r7, #4]
 8003198:	6878      	ldr	r0, [r7, #4]
 800319a:	f7ff ffdf 	bl	800315c <ucg_PowerDown>
 800319e:	687b      	ldr	r3, [r7, #4]
 80031a0:	689b      	ldr	r3, [r3, #8]
 80031a2:	2200      	movs	r2, #0
 80031a4:	210a      	movs	r1, #10
 80031a6:	6878      	ldr	r0, [r7, #4]
 80031a8:	4798      	blx	r3
 80031aa:	4603      	mov	r3, r0
 80031ac:	81fb      	strh	r3, [r7, #14]
 80031ae:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80031b2:	2b00      	cmp	r3, #0
 80031b4:	d004      	beq.n	80031c0 <ucg_PowerUp+0x30>
 80031b6:	687a      	ldr	r2, [r7, #4]
 80031b8:	7813      	ldrb	r3, [r2, #0]
 80031ba:	f043 0301 	orr.w	r3, r3, #1
 80031be:	7013      	strb	r3, [r2, #0]
 80031c0:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80031c4:	4618      	mov	r0, r3
 80031c6:	3710      	adds	r7, #16
 80031c8:	46bd      	mov	sp, r7
 80031ca:	bd80      	pop	{r7, pc}

080031cc <ucg_SetClipBox>:
 80031cc:	b580      	push	{r7, lr}
 80031ce:	b082      	sub	sp, #8
 80031d0:	af00      	add	r7, sp, #0
 80031d2:	6078      	str	r0, [r7, #4]
 80031d4:	6039      	str	r1, [r7, #0]
 80031d6:	687b      	ldr	r3, [r7, #4]
 80031d8:	689b      	ldr	r3, [r3, #8]
 80031da:	683a      	ldr	r2, [r7, #0]
 80031dc:	210c      	movs	r1, #12
 80031de:	6878      	ldr	r0, [r7, #4]
 80031e0:	4798      	blx	r3
 80031e2:	bf00      	nop
 80031e4:	3708      	adds	r7, #8
 80031e6:	46bd      	mov	sp, r7
 80031e8:	bd80      	pop	{r7, pc}

080031ea <ucg_SetMaxClipRange>:
 80031ea:	b580      	push	{r7, lr}
 80031ec:	b084      	sub	sp, #16
 80031ee:	af00      	add	r7, sp, #0
 80031f0:	6078      	str	r0, [r7, #4]
 80031f2:	687a      	ldr	r2, [r7, #4]
 80031f4:	f107 030c 	add.w	r3, r7, #12
 80031f8:	3202      	adds	r2, #2
 80031fa:	6810      	ldr	r0, [r2, #0]
 80031fc:	6018      	str	r0, [r3, #0]
 80031fe:	2300      	movs	r3, #0
 8003200:	813b      	strh	r3, [r7, #8]
 8003202:	2300      	movs	r3, #0
 8003204:	817b      	strh	r3, [r7, #10]
 8003206:	f107 0308 	add.w	r3, r7, #8
 800320a:	4619      	mov	r1, r3
 800320c:	6878      	ldr	r0, [r7, #4]
 800320e:	f7ff ffdd 	bl	80031cc <ucg_SetClipBox>
 8003212:	bf00      	nop
 8003214:	3710      	adds	r7, #16
 8003216:	46bd      	mov	sp, r7
 8003218:	bd80      	pop	{r7, pc}

0800321a <ucg_GetDimension>:
 800321a:	b580      	push	{r7, lr}
 800321c:	b082      	sub	sp, #8
 800321e:	af00      	add	r7, sp, #0
 8003220:	6078      	str	r0, [r7, #4]
 8003222:	687b      	ldr	r3, [r7, #4]
 8003224:	689b      	ldr	r3, [r3, #8]
 8003226:	687a      	ldr	r2, [r7, #4]
 8003228:	3202      	adds	r2, #2
 800322a:	210f      	movs	r1, #15
 800322c:	6878      	ldr	r0, [r7, #4]
 800322e:	4798      	blx	r3
 8003230:	6878      	ldr	r0, [r7, #4]
 8003232:	f7ff ffda 	bl	80031ea <ucg_SetMaxClipRange>
 8003236:	bf00      	nop
 8003238:	3708      	adds	r7, #8
 800323a:	46bd      	mov	sp, r7
 800323c:	bd80      	pop	{r7, pc}

0800323e <ucg_DrawL90FXWithArg>:
 800323e:	b580      	push	{r7, lr}
 8003240:	b082      	sub	sp, #8
 8003242:	af00      	add	r7, sp, #0
 8003244:	6078      	str	r0, [r7, #4]
 8003246:	687b      	ldr	r3, [r7, #4]
 8003248:	689b      	ldr	r3, [r3, #8]
 800324a:	687a      	ldr	r2, [r7, #4]
 800324c:	3224      	adds	r2, #36	; 0x24
 800324e:	2115      	movs	r1, #21
 8003250:	6878      	ldr	r0, [r7, #4]
 8003252:	4798      	blx	r3
 8003254:	bf00      	nop
 8003256:	3708      	adds	r7, #8
 8003258:	46bd      	mov	sp, r7
 800325a:	bd80      	pop	{r7, pc}

0800325c <ucg_dev_st7735_18x128x128>:
 800325c:	b580      	push	{r7, lr}
 800325e:	b084      	sub	sp, #16
 8003260:	af00      	add	r7, sp, #0
 8003262:	60f8      	str	r0, [r7, #12]
 8003264:	460b      	mov	r3, r1
 8003266:	607a      	str	r2, [r7, #4]
 8003268:	817b      	strh	r3, [r7, #10]
 800326a:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800326e:	2b0b      	cmp	r3, #11
 8003270:	d015      	beq.n	800329e <ucg_dev_st7735_18x128x128+0x42>
 8003272:	2b0f      	cmp	r3, #15
 8003274:	d01c      	beq.n	80032b0 <ucg_dev_st7735_18x128x128+0x54>
 8003276:	2b0a      	cmp	r3, #10
 8003278:	d122      	bne.n	80032c0 <ucg_dev_st7735_18x128x128+0x64>
 800327a:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800327e:	687a      	ldr	r2, [r7, #4]
 8003280:	4619      	mov	r1, r3
 8003282:	68f8      	ldr	r0, [r7, #12]
 8003284:	f7ff feda 	bl	800303c <ucg_dev_ic_st7735_18>
 8003288:	4603      	mov	r3, r0
 800328a:	2b00      	cmp	r3, #0
 800328c:	d101      	bne.n	8003292 <ucg_dev_st7735_18x128x128+0x36>
 800328e:	2300      	movs	r3, #0
 8003290:	e01e      	b.n	80032d0 <ucg_dev_st7735_18x128x128+0x74>
 8003292:	4911      	ldr	r1, [pc, #68]	; (80032d8 <ucg_dev_st7735_18x128x128+0x7c>)
 8003294:	68f8      	ldr	r0, [r7, #12]
 8003296:	f001 fccd 	bl	8004c34 <ucg_com_SendCmdSeq>
 800329a:	2301      	movs	r3, #1
 800329c:	e018      	b.n	80032d0 <ucg_dev_st7735_18x128x128+0x74>
 800329e:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80032a2:	687a      	ldr	r2, [r7, #4]
 80032a4:	4619      	mov	r1, r3
 80032a6:	68f8      	ldr	r0, [r7, #12]
 80032a8:	f7ff fec8 	bl	800303c <ucg_dev_ic_st7735_18>
 80032ac:	4603      	mov	r3, r0
 80032ae:	e00f      	b.n	80032d0 <ucg_dev_st7735_18x128x128+0x74>
 80032b0:	687b      	ldr	r3, [r7, #4]
 80032b2:	2280      	movs	r2, #128	; 0x80
 80032b4:	801a      	strh	r2, [r3, #0]
 80032b6:	687b      	ldr	r3, [r7, #4]
 80032b8:	2280      	movs	r2, #128	; 0x80
 80032ba:	805a      	strh	r2, [r3, #2]
 80032bc:	2301      	movs	r3, #1
 80032be:	e007      	b.n	80032d0 <ucg_dev_st7735_18x128x128+0x74>
 80032c0:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80032c4:	687a      	ldr	r2, [r7, #4]
 80032c6:	4619      	mov	r1, r3
 80032c8:	68f8      	ldr	r0, [r7, #12]
 80032ca:	f7ff feb7 	bl	800303c <ucg_dev_ic_st7735_18>
 80032ce:	4603      	mov	r3, r0
 80032d0:	4618      	mov	r0, r3
 80032d2:	3710      	adds	r7, #16
 80032d4:	46bd      	mov	sp, r7
 80032d6:	bd80      	pop	{r7, pc}
 80032d8:	08005920 	.word	0x08005920

080032dc <ucg_font_get_byte>:
 80032dc:	b480      	push	{r7}
 80032de:	b083      	sub	sp, #12
 80032e0:	af00      	add	r7, sp, #0
 80032e2:	6078      	str	r0, [r7, #4]
 80032e4:	460b      	mov	r3, r1
 80032e6:	70fb      	strb	r3, [r7, #3]
 80032e8:	78fb      	ldrb	r3, [r7, #3]
 80032ea:	687a      	ldr	r2, [r7, #4]
 80032ec:	4413      	add	r3, r2
 80032ee:	607b      	str	r3, [r7, #4]
 80032f0:	687b      	ldr	r3, [r7, #4]
 80032f2:	781b      	ldrb	r3, [r3, #0]
 80032f4:	4618      	mov	r0, r3
 80032f6:	370c      	adds	r7, #12
 80032f8:	46bd      	mov	sp, r7
 80032fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032fe:	4770      	bx	lr

08003300 <ucg_font_get_word>:
 8003300:	b480      	push	{r7}
 8003302:	b085      	sub	sp, #20
 8003304:	af00      	add	r7, sp, #0
 8003306:	6078      	str	r0, [r7, #4]
 8003308:	460b      	mov	r3, r1
 800330a:	70fb      	strb	r3, [r7, #3]
 800330c:	78fb      	ldrb	r3, [r7, #3]
 800330e:	687a      	ldr	r2, [r7, #4]
 8003310:	4413      	add	r3, r2
 8003312:	607b      	str	r3, [r7, #4]
 8003314:	687b      	ldr	r3, [r7, #4]
 8003316:	781b      	ldrb	r3, [r3, #0]
 8003318:	81fb      	strh	r3, [r7, #14]
 800331a:	687b      	ldr	r3, [r7, #4]
 800331c:	3301      	adds	r3, #1
 800331e:	607b      	str	r3, [r7, #4]
 8003320:	89fb      	ldrh	r3, [r7, #14]
 8003322:	021b      	lsls	r3, r3, #8
 8003324:	81fb      	strh	r3, [r7, #14]
 8003326:	687b      	ldr	r3, [r7, #4]
 8003328:	781b      	ldrb	r3, [r3, #0]
 800332a:	b29a      	uxth	r2, r3
 800332c:	89fb      	ldrh	r3, [r7, #14]
 800332e:	4413      	add	r3, r2
 8003330:	81fb      	strh	r3, [r7, #14]
 8003332:	89fb      	ldrh	r3, [r7, #14]
 8003334:	4618      	mov	r0, r3
 8003336:	3714      	adds	r7, #20
 8003338:	46bd      	mov	sp, r7
 800333a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800333e:	4770      	bx	lr

08003340 <ucg_read_font_info>:
 8003340:	b580      	push	{r7, lr}
 8003342:	b082      	sub	sp, #8
 8003344:	af00      	add	r7, sp, #0
 8003346:	6078      	str	r0, [r7, #4]
 8003348:	6039      	str	r1, [r7, #0]
 800334a:	2100      	movs	r1, #0
 800334c:	6838      	ldr	r0, [r7, #0]
 800334e:	f7ff ffc5 	bl	80032dc <ucg_font_get_byte>
 8003352:	4603      	mov	r3, r0
 8003354:	461a      	mov	r2, r3
 8003356:	687b      	ldr	r3, [r7, #4]
 8003358:	701a      	strb	r2, [r3, #0]
 800335a:	2101      	movs	r1, #1
 800335c:	6838      	ldr	r0, [r7, #0]
 800335e:	f7ff ffbd 	bl	80032dc <ucg_font_get_byte>
 8003362:	4603      	mov	r3, r0
 8003364:	461a      	mov	r2, r3
 8003366:	687b      	ldr	r3, [r7, #4]
 8003368:	705a      	strb	r2, [r3, #1]
 800336a:	2102      	movs	r1, #2
 800336c:	6838      	ldr	r0, [r7, #0]
 800336e:	f7ff ffb5 	bl	80032dc <ucg_font_get_byte>
 8003372:	4603      	mov	r3, r0
 8003374:	461a      	mov	r2, r3
 8003376:	687b      	ldr	r3, [r7, #4]
 8003378:	709a      	strb	r2, [r3, #2]
 800337a:	2103      	movs	r1, #3
 800337c:	6838      	ldr	r0, [r7, #0]
 800337e:	f7ff ffad 	bl	80032dc <ucg_font_get_byte>
 8003382:	4603      	mov	r3, r0
 8003384:	461a      	mov	r2, r3
 8003386:	687b      	ldr	r3, [r7, #4]
 8003388:	70da      	strb	r2, [r3, #3]
 800338a:	2104      	movs	r1, #4
 800338c:	6838      	ldr	r0, [r7, #0]
 800338e:	f7ff ffa5 	bl	80032dc <ucg_font_get_byte>
 8003392:	4603      	mov	r3, r0
 8003394:	461a      	mov	r2, r3
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	711a      	strb	r2, [r3, #4]
 800339a:	2105      	movs	r1, #5
 800339c:	6838      	ldr	r0, [r7, #0]
 800339e:	f7ff ff9d 	bl	80032dc <ucg_font_get_byte>
 80033a2:	4603      	mov	r3, r0
 80033a4:	461a      	mov	r2, r3
 80033a6:	687b      	ldr	r3, [r7, #4]
 80033a8:	715a      	strb	r2, [r3, #5]
 80033aa:	2106      	movs	r1, #6
 80033ac:	6838      	ldr	r0, [r7, #0]
 80033ae:	f7ff ff95 	bl	80032dc <ucg_font_get_byte>
 80033b2:	4603      	mov	r3, r0
 80033b4:	461a      	mov	r2, r3
 80033b6:	687b      	ldr	r3, [r7, #4]
 80033b8:	719a      	strb	r2, [r3, #6]
 80033ba:	2107      	movs	r1, #7
 80033bc:	6838      	ldr	r0, [r7, #0]
 80033be:	f7ff ff8d 	bl	80032dc <ucg_font_get_byte>
 80033c2:	4603      	mov	r3, r0
 80033c4:	461a      	mov	r2, r3
 80033c6:	687b      	ldr	r3, [r7, #4]
 80033c8:	71da      	strb	r2, [r3, #7]
 80033ca:	2108      	movs	r1, #8
 80033cc:	6838      	ldr	r0, [r7, #0]
 80033ce:	f7ff ff85 	bl	80032dc <ucg_font_get_byte>
 80033d2:	4603      	mov	r3, r0
 80033d4:	461a      	mov	r2, r3
 80033d6:	687b      	ldr	r3, [r7, #4]
 80033d8:	721a      	strb	r2, [r3, #8]
 80033da:	2109      	movs	r1, #9
 80033dc:	6838      	ldr	r0, [r7, #0]
 80033de:	f7ff ff7d 	bl	80032dc <ucg_font_get_byte>
 80033e2:	4603      	mov	r3, r0
 80033e4:	b25a      	sxtb	r2, r3
 80033e6:	687b      	ldr	r3, [r7, #4]
 80033e8:	725a      	strb	r2, [r3, #9]
 80033ea:	210a      	movs	r1, #10
 80033ec:	6838      	ldr	r0, [r7, #0]
 80033ee:	f7ff ff75 	bl	80032dc <ucg_font_get_byte>
 80033f2:	4603      	mov	r3, r0
 80033f4:	b25a      	sxtb	r2, r3
 80033f6:	687b      	ldr	r3, [r7, #4]
 80033f8:	729a      	strb	r2, [r3, #10]
 80033fa:	210b      	movs	r1, #11
 80033fc:	6838      	ldr	r0, [r7, #0]
 80033fe:	f7ff ff6d 	bl	80032dc <ucg_font_get_byte>
 8003402:	4603      	mov	r3, r0
 8003404:	b25a      	sxtb	r2, r3
 8003406:	687b      	ldr	r3, [r7, #4]
 8003408:	72da      	strb	r2, [r3, #11]
 800340a:	210c      	movs	r1, #12
 800340c:	6838      	ldr	r0, [r7, #0]
 800340e:	f7ff ff65 	bl	80032dc <ucg_font_get_byte>
 8003412:	4603      	mov	r3, r0
 8003414:	b25a      	sxtb	r2, r3
 8003416:	687b      	ldr	r3, [r7, #4]
 8003418:	731a      	strb	r2, [r3, #12]
 800341a:	210d      	movs	r1, #13
 800341c:	6838      	ldr	r0, [r7, #0]
 800341e:	f7ff ff5d 	bl	80032dc <ucg_font_get_byte>
 8003422:	4603      	mov	r3, r0
 8003424:	b25a      	sxtb	r2, r3
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	735a      	strb	r2, [r3, #13]
 800342a:	210e      	movs	r1, #14
 800342c:	6838      	ldr	r0, [r7, #0]
 800342e:	f7ff ff55 	bl	80032dc <ucg_font_get_byte>
 8003432:	4603      	mov	r3, r0
 8003434:	b25a      	sxtb	r2, r3
 8003436:	687b      	ldr	r3, [r7, #4]
 8003438:	739a      	strb	r2, [r3, #14]
 800343a:	210f      	movs	r1, #15
 800343c:	6838      	ldr	r0, [r7, #0]
 800343e:	f7ff ff4d 	bl	80032dc <ucg_font_get_byte>
 8003442:	4603      	mov	r3, r0
 8003444:	b25a      	sxtb	r2, r3
 8003446:	687b      	ldr	r3, [r7, #4]
 8003448:	73da      	strb	r2, [r3, #15]
 800344a:	2110      	movs	r1, #16
 800344c:	6838      	ldr	r0, [r7, #0]
 800344e:	f7ff ff45 	bl	80032dc <ucg_font_get_byte>
 8003452:	4603      	mov	r3, r0
 8003454:	b25a      	sxtb	r2, r3
 8003456:	687b      	ldr	r3, [r7, #4]
 8003458:	741a      	strb	r2, [r3, #16]
 800345a:	2111      	movs	r1, #17
 800345c:	6838      	ldr	r0, [r7, #0]
 800345e:	f7ff ff4f 	bl	8003300 <ucg_font_get_word>
 8003462:	4603      	mov	r3, r0
 8003464:	461a      	mov	r2, r3
 8003466:	687b      	ldr	r3, [r7, #4]
 8003468:	825a      	strh	r2, [r3, #18]
 800346a:	2113      	movs	r1, #19
 800346c:	6838      	ldr	r0, [r7, #0]
 800346e:	f7ff ff47 	bl	8003300 <ucg_font_get_word>
 8003472:	4603      	mov	r3, r0
 8003474:	461a      	mov	r2, r3
 8003476:	687b      	ldr	r3, [r7, #4]
 8003478:	829a      	strh	r2, [r3, #20]
 800347a:	bf00      	nop
 800347c:	3708      	adds	r7, #8
 800347e:	46bd      	mov	sp, r7
 8003480:	bd80      	pop	{r7, pc}

08003482 <ucg_font_decode_get_unsigned_bits>:
 8003482:	b480      	push	{r7}
 8003484:	b085      	sub	sp, #20
 8003486:	af00      	add	r7, sp, #0
 8003488:	6078      	str	r0, [r7, #4]
 800348a:	460b      	mov	r3, r1
 800348c:	70fb      	strb	r3, [r7, #3]
 800348e:	687b      	ldr	r3, [r7, #4]
 8003490:	7b1b      	ldrb	r3, [r3, #12]
 8003492:	737b      	strb	r3, [r7, #13]
 8003494:	687b      	ldr	r3, [r7, #4]
 8003496:	681b      	ldr	r3, [r3, #0]
 8003498:	781b      	ldrb	r3, [r3, #0]
 800349a:	73fb      	strb	r3, [r7, #15]
 800349c:	7bfa      	ldrb	r2, [r7, #15]
 800349e:	7b7b      	ldrb	r3, [r7, #13]
 80034a0:	fa42 f303 	asr.w	r3, r2, r3
 80034a4:	73fb      	strb	r3, [r7, #15]
 80034a6:	7b7b      	ldrb	r3, [r7, #13]
 80034a8:	73bb      	strb	r3, [r7, #14]
 80034aa:	7bba      	ldrb	r2, [r7, #14]
 80034ac:	78fb      	ldrb	r3, [r7, #3]
 80034ae:	4413      	add	r3, r2
 80034b0:	73bb      	strb	r3, [r7, #14]
 80034b2:	7bbb      	ldrb	r3, [r7, #14]
 80034b4:	2b07      	cmp	r3, #7
 80034b6:	d91a      	bls.n	80034ee <ucg_font_decode_get_unsigned_bits+0x6c>
 80034b8:	2308      	movs	r3, #8
 80034ba:	733b      	strb	r3, [r7, #12]
 80034bc:	7b3a      	ldrb	r2, [r7, #12]
 80034be:	7b7b      	ldrb	r3, [r7, #13]
 80034c0:	1ad3      	subs	r3, r2, r3
 80034c2:	733b      	strb	r3, [r7, #12]
 80034c4:	687b      	ldr	r3, [r7, #4]
 80034c6:	681b      	ldr	r3, [r3, #0]
 80034c8:	1c5a      	adds	r2, r3, #1
 80034ca:	687b      	ldr	r3, [r7, #4]
 80034cc:	601a      	str	r2, [r3, #0]
 80034ce:	687b      	ldr	r3, [r7, #4]
 80034d0:	681b      	ldr	r3, [r3, #0]
 80034d2:	781b      	ldrb	r3, [r3, #0]
 80034d4:	461a      	mov	r2, r3
 80034d6:	7b3b      	ldrb	r3, [r7, #12]
 80034d8:	fa02 f303 	lsl.w	r3, r2, r3
 80034dc:	b25a      	sxtb	r2, r3
 80034de:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80034e2:	4313      	orrs	r3, r2
 80034e4:	b25b      	sxtb	r3, r3
 80034e6:	73fb      	strb	r3, [r7, #15]
 80034e8:	7bbb      	ldrb	r3, [r7, #14]
 80034ea:	3b08      	subs	r3, #8
 80034ec:	73bb      	strb	r3, [r7, #14]
 80034ee:	78fb      	ldrb	r3, [r7, #3]
 80034f0:	f04f 32ff 	mov.w	r2, #4294967295
 80034f4:	fa02 f303 	lsl.w	r3, r2, r3
 80034f8:	b2db      	uxtb	r3, r3
 80034fa:	43db      	mvns	r3, r3
 80034fc:	b2da      	uxtb	r2, r3
 80034fe:	7bfb      	ldrb	r3, [r7, #15]
 8003500:	4013      	ands	r3, r2
 8003502:	73fb      	strb	r3, [r7, #15]
 8003504:	687b      	ldr	r3, [r7, #4]
 8003506:	7bba      	ldrb	r2, [r7, #14]
 8003508:	731a      	strb	r2, [r3, #12]
 800350a:	7bfb      	ldrb	r3, [r7, #15]
 800350c:	4618      	mov	r0, r3
 800350e:	3714      	adds	r7, #20
 8003510:	46bd      	mov	sp, r7
 8003512:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003516:	4770      	bx	lr

08003518 <ucg_font_decode_get_signed_bits>:
 8003518:	b580      	push	{r7, lr}
 800351a:	b084      	sub	sp, #16
 800351c:	af00      	add	r7, sp, #0
 800351e:	6078      	str	r0, [r7, #4]
 8003520:	460b      	mov	r3, r1
 8003522:	70fb      	strb	r3, [r7, #3]
 8003524:	78fb      	ldrb	r3, [r7, #3]
 8003526:	4619      	mov	r1, r3
 8003528:	6878      	ldr	r0, [r7, #4]
 800352a:	f7ff ffaa 	bl	8003482 <ucg_font_decode_get_unsigned_bits>
 800352e:	4603      	mov	r3, r0
 8003530:	73fb      	strb	r3, [r7, #15]
 8003532:	2301      	movs	r3, #1
 8003534:	73bb      	strb	r3, [r7, #14]
 8003536:	78fb      	ldrb	r3, [r7, #3]
 8003538:	3b01      	subs	r3, #1
 800353a:	70fb      	strb	r3, [r7, #3]
 800353c:	f997 200e 	ldrsb.w	r2, [r7, #14]
 8003540:	78fb      	ldrb	r3, [r7, #3]
 8003542:	fa02 f303 	lsl.w	r3, r2, r3
 8003546:	73bb      	strb	r3, [r7, #14]
 8003548:	7bfa      	ldrb	r2, [r7, #15]
 800354a:	7bbb      	ldrb	r3, [r7, #14]
 800354c:	1ad3      	subs	r3, r2, r3
 800354e:	b2db      	uxtb	r3, r3
 8003550:	73fb      	strb	r3, [r7, #15]
 8003552:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003556:	4618      	mov	r0, r3
 8003558:	3710      	adds	r7, #16
 800355a:	46bd      	mov	sp, r7
 800355c:	bd80      	pop	{r7, pc}

0800355e <ucg_add_vector_y>:
 800355e:	b490      	push	{r4, r7}
 8003560:	b082      	sub	sp, #8
 8003562:	af00      	add	r7, sp, #0
 8003564:	4604      	mov	r4, r0
 8003566:	4608      	mov	r0, r1
 8003568:	4611      	mov	r1, r2
 800356a:	461a      	mov	r2, r3
 800356c:	4623      	mov	r3, r4
 800356e:	80fb      	strh	r3, [r7, #6]
 8003570:	4603      	mov	r3, r0
 8003572:	717b      	strb	r3, [r7, #5]
 8003574:	460b      	mov	r3, r1
 8003576:	713b      	strb	r3, [r7, #4]
 8003578:	4613      	mov	r3, r2
 800357a:	70fb      	strb	r3, [r7, #3]
 800357c:	78fb      	ldrb	r3, [r7, #3]
 800357e:	2b01      	cmp	r3, #1
 8003580:	d00b      	beq.n	800359a <ucg_add_vector_y+0x3c>
 8003582:	2b02      	cmp	r3, #2
 8003584:	d011      	beq.n	80035aa <ucg_add_vector_y+0x4c>
 8003586:	2b00      	cmp	r3, #0
 8003588:	d117      	bne.n	80035ba <ucg_add_vector_y+0x5c>
 800358a:	f997 3004 	ldrsb.w	r3, [r7, #4]
 800358e:	b29a      	uxth	r2, r3
 8003590:	88fb      	ldrh	r3, [r7, #6]
 8003592:	4413      	add	r3, r2
 8003594:	b29b      	uxth	r3, r3
 8003596:	80fb      	strh	r3, [r7, #6]
 8003598:	e017      	b.n	80035ca <ucg_add_vector_y+0x6c>
 800359a:	f997 3005 	ldrsb.w	r3, [r7, #5]
 800359e:	b29a      	uxth	r2, r3
 80035a0:	88fb      	ldrh	r3, [r7, #6]
 80035a2:	4413      	add	r3, r2
 80035a4:	b29b      	uxth	r3, r3
 80035a6:	80fb      	strh	r3, [r7, #6]
 80035a8:	e00f      	b.n	80035ca <ucg_add_vector_y+0x6c>
 80035aa:	88fa      	ldrh	r2, [r7, #6]
 80035ac:	f997 3004 	ldrsb.w	r3, [r7, #4]
 80035b0:	b29b      	uxth	r3, r3
 80035b2:	1ad3      	subs	r3, r2, r3
 80035b4:	b29b      	uxth	r3, r3
 80035b6:	80fb      	strh	r3, [r7, #6]
 80035b8:	e007      	b.n	80035ca <ucg_add_vector_y+0x6c>
 80035ba:	88fa      	ldrh	r2, [r7, #6]
 80035bc:	f997 3005 	ldrsb.w	r3, [r7, #5]
 80035c0:	b29b      	uxth	r3, r3
 80035c2:	1ad3      	subs	r3, r2, r3
 80035c4:	b29b      	uxth	r3, r3
 80035c6:	80fb      	strh	r3, [r7, #6]
 80035c8:	bf00      	nop
 80035ca:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80035ce:	4618      	mov	r0, r3
 80035d0:	3708      	adds	r7, #8
 80035d2:	46bd      	mov	sp, r7
 80035d4:	bc90      	pop	{r4, r7}
 80035d6:	4770      	bx	lr

080035d8 <ucg_add_vector_x>:
 80035d8:	b490      	push	{r4, r7}
 80035da:	b082      	sub	sp, #8
 80035dc:	af00      	add	r7, sp, #0
 80035de:	4604      	mov	r4, r0
 80035e0:	4608      	mov	r0, r1
 80035e2:	4611      	mov	r1, r2
 80035e4:	461a      	mov	r2, r3
 80035e6:	4623      	mov	r3, r4
 80035e8:	80fb      	strh	r3, [r7, #6]
 80035ea:	4603      	mov	r3, r0
 80035ec:	717b      	strb	r3, [r7, #5]
 80035ee:	460b      	mov	r3, r1
 80035f0:	713b      	strb	r3, [r7, #4]
 80035f2:	4613      	mov	r3, r2
 80035f4:	70fb      	strb	r3, [r7, #3]
 80035f6:	78fb      	ldrb	r3, [r7, #3]
 80035f8:	2b01      	cmp	r3, #1
 80035fa:	d00b      	beq.n	8003614 <ucg_add_vector_x+0x3c>
 80035fc:	2b02      	cmp	r3, #2
 80035fe:	d011      	beq.n	8003624 <ucg_add_vector_x+0x4c>
 8003600:	2b00      	cmp	r3, #0
 8003602:	d117      	bne.n	8003634 <ucg_add_vector_x+0x5c>
 8003604:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8003608:	b29a      	uxth	r2, r3
 800360a:	88fb      	ldrh	r3, [r7, #6]
 800360c:	4413      	add	r3, r2
 800360e:	b29b      	uxth	r3, r3
 8003610:	80fb      	strh	r3, [r7, #6]
 8003612:	e017      	b.n	8003644 <ucg_add_vector_x+0x6c>
 8003614:	88fa      	ldrh	r2, [r7, #6]
 8003616:	f997 3004 	ldrsb.w	r3, [r7, #4]
 800361a:	b29b      	uxth	r3, r3
 800361c:	1ad3      	subs	r3, r2, r3
 800361e:	b29b      	uxth	r3, r3
 8003620:	80fb      	strh	r3, [r7, #6]
 8003622:	e00f      	b.n	8003644 <ucg_add_vector_x+0x6c>
 8003624:	88fa      	ldrh	r2, [r7, #6]
 8003626:	f997 3005 	ldrsb.w	r3, [r7, #5]
 800362a:	b29b      	uxth	r3, r3
 800362c:	1ad3      	subs	r3, r2, r3
 800362e:	b29b      	uxth	r3, r3
 8003630:	80fb      	strh	r3, [r7, #6]
 8003632:	e007      	b.n	8003644 <ucg_add_vector_x+0x6c>
 8003634:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8003638:	b29a      	uxth	r2, r3
 800363a:	88fb      	ldrh	r3, [r7, #6]
 800363c:	4413      	add	r3, r2
 800363e:	b29b      	uxth	r3, r3
 8003640:	80fb      	strh	r3, [r7, #6]
 8003642:	bf00      	nop
 8003644:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003648:	4618      	mov	r0, r3
 800364a:	3708      	adds	r7, #8
 800364c:	46bd      	mov	sp, r7
 800364e:	bc90      	pop	{r4, r7}
 8003650:	4770      	bx	lr

08003652 <ucg_font_decode_len>:
 8003652:	b590      	push	{r4, r7, lr}
 8003654:	b089      	sub	sp, #36	; 0x24
 8003656:	af02      	add	r7, sp, #8
 8003658:	6078      	str	r0, [r7, #4]
 800365a:	460b      	mov	r3, r1
 800365c:	70fb      	strb	r3, [r7, #3]
 800365e:	4613      	mov	r3, r2
 8003660:	70bb      	strb	r3, [r7, #2]
 8003662:	687b      	ldr	r3, [r7, #4]
 8003664:	3380      	adds	r3, #128	; 0x80
 8003666:	613b      	str	r3, [r7, #16]
 8003668:	78fb      	ldrb	r3, [r7, #3]
 800366a:	75fb      	strb	r3, [r7, #23]
 800366c:	693b      	ldr	r3, [r7, #16]
 800366e:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8003672:	757b      	strb	r3, [r7, #21]
 8003674:	693b      	ldr	r3, [r7, #16]
 8003676:	f993 3009 	ldrsb.w	r3, [r3, #9]
 800367a:	753b      	strb	r3, [r7, #20]
 800367c:	693b      	ldr	r3, [r7, #16]
 800367e:	f993 300a 	ldrsb.w	r3, [r3, #10]
 8003682:	73fb      	strb	r3, [r7, #15]
 8003684:	7bfa      	ldrb	r2, [r7, #15]
 8003686:	7d7b      	ldrb	r3, [r7, #21]
 8003688:	1ad3      	subs	r3, r2, r3
 800368a:	73fb      	strb	r3, [r7, #15]
 800368c:	7bfb      	ldrb	r3, [r7, #15]
 800368e:	75bb      	strb	r3, [r7, #22]
 8003690:	7dfa      	ldrb	r2, [r7, #23]
 8003692:	7bfb      	ldrb	r3, [r7, #15]
 8003694:	429a      	cmp	r2, r3
 8003696:	d201      	bcs.n	800369c <ucg_font_decode_len+0x4a>
 8003698:	7dfb      	ldrb	r3, [r7, #23]
 800369a:	75bb      	strb	r3, [r7, #22]
 800369c:	693b      	ldr	r3, [r7, #16]
 800369e:	889b      	ldrh	r3, [r3, #4]
 80036a0:	81bb      	strh	r3, [r7, #12]
 80036a2:	693b      	ldr	r3, [r7, #16]
 80036a4:	88db      	ldrh	r3, [r3, #6]
 80036a6:	817b      	strh	r3, [r7, #10]
 80036a8:	f997 1015 	ldrsb.w	r1, [r7, #21]
 80036ac:	f997 2014 	ldrsb.w	r2, [r7, #20]
 80036b0:	693b      	ldr	r3, [r7, #16]
 80036b2:	7b9b      	ldrb	r3, [r3, #14]
 80036b4:	f9b7 000c 	ldrsh.w	r0, [r7, #12]
 80036b8:	f7ff ff8e 	bl	80035d8 <ucg_add_vector_x>
 80036bc:	4603      	mov	r3, r0
 80036be:	81bb      	strh	r3, [r7, #12]
 80036c0:	f997 1015 	ldrsb.w	r1, [r7, #21]
 80036c4:	f997 2014 	ldrsb.w	r2, [r7, #20]
 80036c8:	693b      	ldr	r3, [r7, #16]
 80036ca:	7b9b      	ldrb	r3, [r3, #14]
 80036cc:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 80036d0:	f7ff ff45 	bl	800355e <ucg_add_vector_y>
 80036d4:	4603      	mov	r3, r0
 80036d6:	817b      	strh	r3, [r7, #10]
 80036d8:	78bb      	ldrb	r3, [r7, #2]
 80036da:	2b00      	cmp	r3, #0
 80036dc:	d011      	beq.n	8003702 <ucg_font_decode_len+0xb0>
 80036de:	7dbb      	ldrb	r3, [r7, #22]
 80036e0:	b21c      	sxth	r4, r3
 80036e2:	693b      	ldr	r3, [r7, #16]
 80036e4:	7b9b      	ldrb	r3, [r3, #14]
 80036e6:	b21b      	sxth	r3, r3
 80036e8:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 80036ec:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 80036f0:	2200      	movs	r2, #0
 80036f2:	9201      	str	r2, [sp, #4]
 80036f4:	9300      	str	r3, [sp, #0]
 80036f6:	4623      	mov	r3, r4
 80036f8:	4602      	mov	r2, r0
 80036fa:	6878      	ldr	r0, [r7, #4]
 80036fc:	f000 fbc0 	bl	8003e80 <ucg_Draw90Line>
 8003700:	e014      	b.n	800372c <ucg_font_decode_len+0xda>
 8003702:	693b      	ldr	r3, [r7, #16]
 8003704:	7b5b      	ldrb	r3, [r3, #13]
 8003706:	2b00      	cmp	r3, #0
 8003708:	d110      	bne.n	800372c <ucg_font_decode_len+0xda>
 800370a:	7dbb      	ldrb	r3, [r7, #22]
 800370c:	b21c      	sxth	r4, r3
 800370e:	693b      	ldr	r3, [r7, #16]
 8003710:	7b9b      	ldrb	r3, [r3, #14]
 8003712:	b21b      	sxth	r3, r3
 8003714:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 8003718:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 800371c:	2201      	movs	r2, #1
 800371e:	9201      	str	r2, [sp, #4]
 8003720:	9300      	str	r3, [sp, #0]
 8003722:	4623      	mov	r3, r4
 8003724:	4602      	mov	r2, r0
 8003726:	6878      	ldr	r0, [r7, #4]
 8003728:	f000 fbaa 	bl	8003e80 <ucg_Draw90Line>
 800372c:	7dfa      	ldrb	r2, [r7, #23]
 800372e:	7bfb      	ldrb	r3, [r7, #15]
 8003730:	429a      	cmp	r2, r3
 8003732:	d309      	bcc.n	8003748 <ucg_font_decode_len+0xf6>
 8003734:	7dfa      	ldrb	r2, [r7, #23]
 8003736:	7bfb      	ldrb	r3, [r7, #15]
 8003738:	1ad3      	subs	r3, r2, r3
 800373a:	75fb      	strb	r3, [r7, #23]
 800373c:	2300      	movs	r3, #0
 800373e:	757b      	strb	r3, [r7, #21]
 8003740:	7d3b      	ldrb	r3, [r7, #20]
 8003742:	3301      	adds	r3, #1
 8003744:	753b      	strb	r3, [r7, #20]
 8003746:	e799      	b.n	800367c <ucg_font_decode_len+0x2a>
 8003748:	bf00      	nop
 800374a:	7d7a      	ldrb	r2, [r7, #21]
 800374c:	7dfb      	ldrb	r3, [r7, #23]
 800374e:	4413      	add	r3, r2
 8003750:	757b      	strb	r3, [r7, #21]
 8003752:	f997 2015 	ldrsb.w	r2, [r7, #21]
 8003756:	693b      	ldr	r3, [r7, #16]
 8003758:	721a      	strb	r2, [r3, #8]
 800375a:	f997 2014 	ldrsb.w	r2, [r7, #20]
 800375e:	693b      	ldr	r3, [r7, #16]
 8003760:	725a      	strb	r2, [r3, #9]
 8003762:	bf00      	nop
 8003764:	371c      	adds	r7, #28
 8003766:	46bd      	mov	sp, r7
 8003768:	bd90      	pop	{r4, r7, pc}

0800376a <ucg_font_setup_decode>:
 800376a:	b580      	push	{r7, lr}
 800376c:	b084      	sub	sp, #16
 800376e:	af00      	add	r7, sp, #0
 8003770:	6078      	str	r0, [r7, #4]
 8003772:	6039      	str	r1, [r7, #0]
 8003774:	687b      	ldr	r3, [r7, #4]
 8003776:	3380      	adds	r3, #128	; 0x80
 8003778:	60fb      	str	r3, [r7, #12]
 800377a:	68fb      	ldr	r3, [r7, #12]
 800377c:	683a      	ldr	r2, [r7, #0]
 800377e:	601a      	str	r2, [r3, #0]
 8003780:	68fb      	ldr	r3, [r7, #12]
 8003782:	2200      	movs	r2, #0
 8003784:	731a      	strb	r2, [r3, #12]
 8003786:	68fb      	ldr	r3, [r7, #12]
 8003788:	681b      	ldr	r3, [r3, #0]
 800378a:	1c5a      	adds	r2, r3, #1
 800378c:	68fb      	ldr	r3, [r7, #12]
 800378e:	601a      	str	r2, [r3, #0]
 8003790:	68fb      	ldr	r3, [r7, #12]
 8003792:	681b      	ldr	r3, [r3, #0]
 8003794:	1c5a      	adds	r2, r3, #1
 8003796:	68fb      	ldr	r3, [r7, #12]
 8003798:	601a      	str	r2, [r3, #0]
 800379a:	687b      	ldr	r3, [r7, #4]
 800379c:	f893 3094 	ldrb.w	r3, [r3, #148]	; 0x94
 80037a0:	4619      	mov	r1, r3
 80037a2:	68f8      	ldr	r0, [r7, #12]
 80037a4:	f7ff fe6d 	bl	8003482 <ucg_font_decode_get_unsigned_bits>
 80037a8:	4603      	mov	r3, r0
 80037aa:	b25a      	sxtb	r2, r3
 80037ac:	68fb      	ldr	r3, [r7, #12]
 80037ae:	729a      	strb	r2, [r3, #10]
 80037b0:	687b      	ldr	r3, [r7, #4]
 80037b2:	f893 3095 	ldrb.w	r3, [r3, #149]	; 0x95
 80037b6:	4619      	mov	r1, r3
 80037b8:	68f8      	ldr	r0, [r7, #12]
 80037ba:	f7ff fe62 	bl	8003482 <ucg_font_decode_get_unsigned_bits>
 80037be:	4603      	mov	r3, r0
 80037c0:	b25a      	sxtb	r2, r3
 80037c2:	68fb      	ldr	r3, [r7, #12]
 80037c4:	72da      	strb	r2, [r3, #11]
 80037c6:	bf00      	nop
 80037c8:	3710      	adds	r7, #16
 80037ca:	46bd      	mov	sp, r7
 80037cc:	bd80      	pop	{r7, pc}

080037ce <ucg_font_decode_glyph>:
 80037ce:	b580      	push	{r7, lr}
 80037d0:	b084      	sub	sp, #16
 80037d2:	af00      	add	r7, sp, #0
 80037d4:	6078      	str	r0, [r7, #4]
 80037d6:	6039      	str	r1, [r7, #0]
 80037d8:	6839      	ldr	r1, [r7, #0]
 80037da:	6878      	ldr	r0, [r7, #4]
 80037dc:	f7ff ffc5 	bl	800376a <ucg_font_setup_decode>
 80037e0:	687b      	ldr	r3, [r7, #4]
 80037e2:	f893 308b 	ldrb.w	r3, [r3, #139]	; 0x8b
 80037e6:	73fb      	strb	r3, [r7, #15]
 80037e8:	687b      	ldr	r3, [r7, #4]
 80037ea:	f103 0280 	add.w	r2, r3, #128	; 0x80
 80037ee:	687b      	ldr	r3, [r7, #4]
 80037f0:	f893 3096 	ldrb.w	r3, [r3, #150]	; 0x96
 80037f4:	4619      	mov	r1, r3
 80037f6:	4610      	mov	r0, r2
 80037f8:	f7ff fe8e 	bl	8003518 <ucg_font_decode_get_signed_bits>
 80037fc:	4603      	mov	r3, r0
 80037fe:	73bb      	strb	r3, [r7, #14]
 8003800:	687b      	ldr	r3, [r7, #4]
 8003802:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8003806:	687b      	ldr	r3, [r7, #4]
 8003808:	f893 3097 	ldrb.w	r3, [r3, #151]	; 0x97
 800380c:	4619      	mov	r1, r3
 800380e:	4610      	mov	r0, r2
 8003810:	f7ff fe82 	bl	8003518 <ucg_font_decode_get_signed_bits>
 8003814:	4603      	mov	r3, r0
 8003816:	737b      	strb	r3, [r7, #13]
 8003818:	687b      	ldr	r3, [r7, #4]
 800381a:	f103 0280 	add.w	r2, r3, #128	; 0x80
 800381e:	687b      	ldr	r3, [r7, #4]
 8003820:	f893 3098 	ldrb.w	r3, [r3, #152]	; 0x98
 8003824:	4619      	mov	r1, r3
 8003826:	4610      	mov	r0, r2
 8003828:	f7ff fe76 	bl	8003518 <ucg_font_decode_get_signed_bits>
 800382c:	4603      	mov	r3, r0
 800382e:	733b      	strb	r3, [r7, #12]
 8003830:	687b      	ldr	r3, [r7, #4]
 8003832:	f993 308a 	ldrsb.w	r3, [r3, #138]	; 0x8a
 8003836:	2b00      	cmp	r3, #0
 8003838:	dd69      	ble.n	800390e <ucg_font_decode_glyph+0x140>
 800383a:	687b      	ldr	r3, [r7, #4]
 800383c:	f9b3 0084 	ldrsh.w	r0, [r3, #132]	; 0x84
 8003840:	7bfa      	ldrb	r2, [r7, #15]
 8003842:	7b7b      	ldrb	r3, [r7, #13]
 8003844:	4413      	add	r3, r2
 8003846:	b2db      	uxtb	r3, r3
 8003848:	425b      	negs	r3, r3
 800384a:	b2db      	uxtb	r3, r3
 800384c:	b25a      	sxtb	r2, r3
 800384e:	687b      	ldr	r3, [r7, #4]
 8003850:	f893 308e 	ldrb.w	r3, [r3, #142]	; 0x8e
 8003854:	f997 100e 	ldrsb.w	r1, [r7, #14]
 8003858:	f7ff febe 	bl	80035d8 <ucg_add_vector_x>
 800385c:	4603      	mov	r3, r0
 800385e:	461a      	mov	r2, r3
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	f8a3 2084 	strh.w	r2, [r3, #132]	; 0x84
 8003866:	687b      	ldr	r3, [r7, #4]
 8003868:	f9b3 0086 	ldrsh.w	r0, [r3, #134]	; 0x86
 800386c:	7bfa      	ldrb	r2, [r7, #15]
 800386e:	7b7b      	ldrb	r3, [r7, #13]
 8003870:	4413      	add	r3, r2
 8003872:	b2db      	uxtb	r3, r3
 8003874:	425b      	negs	r3, r3
 8003876:	b2db      	uxtb	r3, r3
 8003878:	b25a      	sxtb	r2, r3
 800387a:	687b      	ldr	r3, [r7, #4]
 800387c:	f893 308e 	ldrb.w	r3, [r3, #142]	; 0x8e
 8003880:	f997 100e 	ldrsb.w	r1, [r7, #14]
 8003884:	f7ff fe6b 	bl	800355e <ucg_add_vector_y>
 8003888:	4603      	mov	r3, r0
 800388a:	461a      	mov	r2, r3
 800388c:	687b      	ldr	r3, [r7, #4]
 800388e:	f8a3 2086 	strh.w	r2, [r3, #134]	; 0x86
 8003892:	687b      	ldr	r3, [r7, #4]
 8003894:	2200      	movs	r2, #0
 8003896:	f883 2088 	strb.w	r2, [r3, #136]	; 0x88
 800389a:	687b      	ldr	r3, [r7, #4]
 800389c:	2200      	movs	r2, #0
 800389e:	f883 2089 	strb.w	r2, [r3, #137]	; 0x89
 80038a2:	687b      	ldr	r3, [r7, #4]
 80038a4:	f103 0280 	add.w	r2, r3, #128	; 0x80
 80038a8:	687b      	ldr	r3, [r7, #4]
 80038aa:	f893 3092 	ldrb.w	r3, [r3, #146]	; 0x92
 80038ae:	4619      	mov	r1, r3
 80038b0:	4610      	mov	r0, r2
 80038b2:	f7ff fde6 	bl	8003482 <ucg_font_decode_get_unsigned_bits>
 80038b6:	4603      	mov	r3, r0
 80038b8:	72fb      	strb	r3, [r7, #11]
 80038ba:	687b      	ldr	r3, [r7, #4]
 80038bc:	f103 0280 	add.w	r2, r3, #128	; 0x80
 80038c0:	687b      	ldr	r3, [r7, #4]
 80038c2:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 80038c6:	4619      	mov	r1, r3
 80038c8:	4610      	mov	r0, r2
 80038ca:	f7ff fdda 	bl	8003482 <ucg_font_decode_get_unsigned_bits>
 80038ce:	4603      	mov	r3, r0
 80038d0:	72bb      	strb	r3, [r7, #10]
 80038d2:	7afb      	ldrb	r3, [r7, #11]
 80038d4:	2200      	movs	r2, #0
 80038d6:	4619      	mov	r1, r3
 80038d8:	6878      	ldr	r0, [r7, #4]
 80038da:	f7ff feba 	bl	8003652 <ucg_font_decode_len>
 80038de:	7abb      	ldrb	r3, [r7, #10]
 80038e0:	2201      	movs	r2, #1
 80038e2:	4619      	mov	r1, r3
 80038e4:	6878      	ldr	r0, [r7, #4]
 80038e6:	f7ff feb4 	bl	8003652 <ucg_font_decode_len>
 80038ea:	687b      	ldr	r3, [r7, #4]
 80038ec:	3380      	adds	r3, #128	; 0x80
 80038ee:	2101      	movs	r1, #1
 80038f0:	4618      	mov	r0, r3
 80038f2:	f7ff fdc6 	bl	8003482 <ucg_font_decode_get_unsigned_bits>
 80038f6:	4603      	mov	r3, r0
 80038f8:	2b00      	cmp	r3, #0
 80038fa:	d1ea      	bne.n	80038d2 <ucg_font_decode_glyph+0x104>
 80038fc:	687b      	ldr	r3, [r7, #4]
 80038fe:	f993 3089 	ldrsb.w	r3, [r3, #137]	; 0x89
 8003902:	f997 200f 	ldrsb.w	r2, [r7, #15]
 8003906:	429a      	cmp	r2, r3
 8003908:	dd00      	ble.n	800390c <ucg_font_decode_glyph+0x13e>
 800390a:	e7ca      	b.n	80038a2 <ucg_font_decode_glyph+0xd4>
 800390c:	bf00      	nop
 800390e:	f997 300c 	ldrsb.w	r3, [r7, #12]
 8003912:	4618      	mov	r0, r3
 8003914:	3710      	adds	r7, #16
 8003916:	46bd      	mov	sp, r7
 8003918:	bd80      	pop	{r7, pc}

0800391a <ucg_font_get_glyph_data>:
 800391a:	b480      	push	{r7}
 800391c:	b085      	sub	sp, #20
 800391e:	af00      	add	r7, sp, #0
 8003920:	6078      	str	r0, [r7, #4]
 8003922:	460b      	mov	r3, r1
 8003924:	70fb      	strb	r3, [r7, #3]
 8003926:	687b      	ldr	r3, [r7, #4]
 8003928:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800392a:	60fb      	str	r3, [r7, #12]
 800392c:	68fb      	ldr	r3, [r7, #12]
 800392e:	3315      	adds	r3, #21
 8003930:	60fb      	str	r3, [r7, #12]
 8003932:	78fb      	ldrb	r3, [r7, #3]
 8003934:	2b60      	cmp	r3, #96	; 0x60
 8003936:	d907      	bls.n	8003948 <ucg_font_get_glyph_data+0x2e>
 8003938:	687b      	ldr	r3, [r7, #4]
 800393a:	f8b3 30a4 	ldrh.w	r3, [r3, #164]	; 0xa4
 800393e:	461a      	mov	r2, r3
 8003940:	68fb      	ldr	r3, [r7, #12]
 8003942:	4413      	add	r3, r2
 8003944:	60fb      	str	r3, [r7, #12]
 8003946:	e009      	b.n	800395c <ucg_font_get_glyph_data+0x42>
 8003948:	78fb      	ldrb	r3, [r7, #3]
 800394a:	2b40      	cmp	r3, #64	; 0x40
 800394c:	d906      	bls.n	800395c <ucg_font_get_glyph_data+0x42>
 800394e:	687b      	ldr	r3, [r7, #4]
 8003950:	f8b3 30a2 	ldrh.w	r3, [r3, #162]	; 0xa2
 8003954:	461a      	mov	r2, r3
 8003956:	68fb      	ldr	r3, [r7, #12]
 8003958:	4413      	add	r3, r2
 800395a:	60fb      	str	r3, [r7, #12]
 800395c:	68fb      	ldr	r3, [r7, #12]
 800395e:	3301      	adds	r3, #1
 8003960:	781b      	ldrb	r3, [r3, #0]
 8003962:	2b00      	cmp	r3, #0
 8003964:	d00e      	beq.n	8003984 <ucg_font_get_glyph_data+0x6a>
 8003966:	68fb      	ldr	r3, [r7, #12]
 8003968:	781b      	ldrb	r3, [r3, #0]
 800396a:	78fa      	ldrb	r2, [r7, #3]
 800396c:	429a      	cmp	r2, r3
 800396e:	d101      	bne.n	8003974 <ucg_font_get_glyph_data+0x5a>
 8003970:	68fb      	ldr	r3, [r7, #12]
 8003972:	e009      	b.n	8003988 <ucg_font_get_glyph_data+0x6e>
 8003974:	68fb      	ldr	r3, [r7, #12]
 8003976:	3301      	adds	r3, #1
 8003978:	781b      	ldrb	r3, [r3, #0]
 800397a:	461a      	mov	r2, r3
 800397c:	68fb      	ldr	r3, [r7, #12]
 800397e:	4413      	add	r3, r2
 8003980:	60fb      	str	r3, [r7, #12]
 8003982:	e7eb      	b.n	800395c <ucg_font_get_glyph_data+0x42>
 8003984:	bf00      	nop
 8003986:	2300      	movs	r3, #0
 8003988:	4618      	mov	r0, r3
 800398a:	3714      	adds	r7, #20
 800398c:	46bd      	mov	sp, r7
 800398e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003992:	4770      	bx	lr

08003994 <ucg_font_draw_glyph>:
 8003994:	b580      	push	{r7, lr}
 8003996:	b086      	sub	sp, #24
 8003998:	af00      	add	r7, sp, #0
 800399a:	60f8      	str	r0, [r7, #12]
 800399c:	4608      	mov	r0, r1
 800399e:	4611      	mov	r1, r2
 80039a0:	461a      	mov	r2, r3
 80039a2:	4603      	mov	r3, r0
 80039a4:	817b      	strh	r3, [r7, #10]
 80039a6:	460b      	mov	r3, r1
 80039a8:	813b      	strh	r3, [r7, #8]
 80039aa:	4613      	mov	r3, r2
 80039ac:	71fb      	strb	r3, [r7, #7]
 80039ae:	2300      	movs	r3, #0
 80039b0:	82fb      	strh	r3, [r7, #22]
 80039b2:	68fb      	ldr	r3, [r7, #12]
 80039b4:	897a      	ldrh	r2, [r7, #10]
 80039b6:	f8a3 2084 	strh.w	r2, [r3, #132]	; 0x84
 80039ba:	68fb      	ldr	r3, [r7, #12]
 80039bc:	893a      	ldrh	r2, [r7, #8]
 80039be:	f8a3 2086 	strh.w	r2, [r3, #134]	; 0x86
 80039c2:	68fb      	ldr	r3, [r7, #12]
 80039c4:	79fa      	ldrb	r2, [r7, #7]
 80039c6:	f883 208e 	strb.w	r2, [r3, #142]	; 0x8e
 80039ca:	f897 3020 	ldrb.w	r3, [r7, #32]
 80039ce:	4619      	mov	r1, r3
 80039d0:	68f8      	ldr	r0, [r7, #12]
 80039d2:	f7ff ffa2 	bl	800391a <ucg_font_get_glyph_data>
 80039d6:	6138      	str	r0, [r7, #16]
 80039d8:	693b      	ldr	r3, [r7, #16]
 80039da:	2b00      	cmp	r3, #0
 80039dc:	d005      	beq.n	80039ea <ucg_font_draw_glyph+0x56>
 80039de:	6939      	ldr	r1, [r7, #16]
 80039e0:	68f8      	ldr	r0, [r7, #12]
 80039e2:	f7ff fef4 	bl	80037ce <ucg_font_decode_glyph>
 80039e6:	4603      	mov	r3, r0
 80039e8:	82fb      	strh	r3, [r7, #22]
 80039ea:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 80039ee:	4618      	mov	r0, r3
 80039f0:	3718      	adds	r7, #24
 80039f2:	46bd      	mov	sp, r7
 80039f4:	bd80      	pop	{r7, pc}

080039f6 <ucg_SetFontMode>:
 80039f6:	b480      	push	{r7}
 80039f8:	b083      	sub	sp, #12
 80039fa:	af00      	add	r7, sp, #0
 80039fc:	6078      	str	r0, [r7, #4]
 80039fe:	460b      	mov	r3, r1
 8003a00:	70fb      	strb	r3, [r7, #3]
 8003a02:	687b      	ldr	r3, [r7, #4]
 8003a04:	78fa      	ldrb	r2, [r7, #3]
 8003a06:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
 8003a0a:	bf00      	nop
 8003a0c:	370c      	adds	r7, #12
 8003a0e:	46bd      	mov	sp, r7
 8003a10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a14:	4770      	bx	lr
	...

08003a18 <ucg_DrawGlyph>:
 8003a18:	b580      	push	{r7, lr}
 8003a1a:	b086      	sub	sp, #24
 8003a1c:	af02      	add	r7, sp, #8
 8003a1e:	60f8      	str	r0, [r7, #12]
 8003a20:	4608      	mov	r0, r1
 8003a22:	4611      	mov	r1, r2
 8003a24:	461a      	mov	r2, r3
 8003a26:	4603      	mov	r3, r0
 8003a28:	817b      	strh	r3, [r7, #10]
 8003a2a:	460b      	mov	r3, r1
 8003a2c:	813b      	strh	r3, [r7, #8]
 8003a2e:	4613      	mov	r3, r2
 8003a30:	71fb      	strb	r3, [r7, #7]
 8003a32:	79fb      	ldrb	r3, [r7, #7]
 8003a34:	2b03      	cmp	r3, #3
 8003a36:	d837      	bhi.n	8003aa8 <ucg_DrawGlyph+0x90>
 8003a38:	a201      	add	r2, pc, #4	; (adr r2, 8003a40 <ucg_DrawGlyph+0x28>)
 8003a3a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003a3e:	bf00      	nop
 8003a40:	08003a51 	.word	0x08003a51
 8003a44:	08003a67 	.word	0x08003a67
 8003a48:	08003a7d 	.word	0x08003a7d
 8003a4c:	08003a93 	.word	0x08003a93
 8003a50:	68fb      	ldr	r3, [r7, #12]
 8003a52:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8003a54:	68f8      	ldr	r0, [r7, #12]
 8003a56:	4798      	blx	r3
 8003a58:	4603      	mov	r3, r0
 8003a5a:	b29a      	uxth	r2, r3
 8003a5c:	893b      	ldrh	r3, [r7, #8]
 8003a5e:	4413      	add	r3, r2
 8003a60:	b29b      	uxth	r3, r3
 8003a62:	813b      	strh	r3, [r7, #8]
 8003a64:	e020      	b.n	8003aa8 <ucg_DrawGlyph+0x90>
 8003a66:	68fb      	ldr	r3, [r7, #12]
 8003a68:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8003a6a:	68f8      	ldr	r0, [r7, #12]
 8003a6c:	4798      	blx	r3
 8003a6e:	4603      	mov	r3, r0
 8003a70:	897a      	ldrh	r2, [r7, #10]
 8003a72:	b29b      	uxth	r3, r3
 8003a74:	1ad3      	subs	r3, r2, r3
 8003a76:	b29b      	uxth	r3, r3
 8003a78:	817b      	strh	r3, [r7, #10]
 8003a7a:	e015      	b.n	8003aa8 <ucg_DrawGlyph+0x90>
 8003a7c:	68fb      	ldr	r3, [r7, #12]
 8003a7e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8003a80:	68f8      	ldr	r0, [r7, #12]
 8003a82:	4798      	blx	r3
 8003a84:	4603      	mov	r3, r0
 8003a86:	893a      	ldrh	r2, [r7, #8]
 8003a88:	b29b      	uxth	r3, r3
 8003a8a:	1ad3      	subs	r3, r2, r3
 8003a8c:	b29b      	uxth	r3, r3
 8003a8e:	813b      	strh	r3, [r7, #8]
 8003a90:	e00a      	b.n	8003aa8 <ucg_DrawGlyph+0x90>
 8003a92:	68fb      	ldr	r3, [r7, #12]
 8003a94:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8003a96:	68f8      	ldr	r0, [r7, #12]
 8003a98:	4798      	blx	r3
 8003a9a:	4603      	mov	r3, r0
 8003a9c:	b29a      	uxth	r2, r3
 8003a9e:	897b      	ldrh	r3, [r7, #10]
 8003aa0:	4413      	add	r3, r2
 8003aa2:	b29b      	uxth	r3, r3
 8003aa4:	817b      	strh	r3, [r7, #10]
 8003aa6:	bf00      	nop
 8003aa8:	79f8      	ldrb	r0, [r7, #7]
 8003aaa:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8003aae:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8003ab2:	7e3b      	ldrb	r3, [r7, #24]
 8003ab4:	9300      	str	r3, [sp, #0]
 8003ab6:	4603      	mov	r3, r0
 8003ab8:	68f8      	ldr	r0, [r7, #12]
 8003aba:	f7ff ff6b 	bl	8003994 <ucg_font_draw_glyph>
 8003abe:	4603      	mov	r3, r0
 8003ac0:	4618      	mov	r0, r3
 8003ac2:	3710      	adds	r7, #16
 8003ac4:	46bd      	mov	sp, r7
 8003ac6:	bd80      	pop	{r7, pc}

08003ac8 <task_drawString>:
 8003ac8:	b580      	push	{r7, lr}
 8003aca:	b086      	sub	sp, #24
 8003acc:	af02      	add	r7, sp, #8
 8003ace:	6078      	str	r0, [r7, #4]
 8003ad0:	2300      	movs	r3, #0
 8003ad2:	81fb      	strh	r3, [r7, #14]
 8003ad4:	687b      	ldr	r3, [r7, #4]
 8003ad6:	60bb      	str	r3, [r7, #8]
 8003ad8:	4b45      	ldr	r3, [pc, #276]	; (8003bf0 <task_drawString+0x128>)
 8003ada:	781b      	ldrb	r3, [r3, #0]
 8003adc:	2b00      	cmp	r3, #0
 8003ade:	d002      	beq.n	8003ae6 <task_drawString+0x1e>
 8003ae0:	2b01      	cmp	r3, #1
 8003ae2:	d01e      	beq.n	8003b22 <task_drawString+0x5a>
 8003ae4:	e07b      	b.n	8003bde <task_drawString+0x116>
 8003ae6:	4843      	ldr	r0, [pc, #268]	; (8003bf4 <task_drawString+0x12c>)
 8003ae8:	f000 fb5d 	bl	80041a6 <bufNumItems>
 8003aec:	4603      	mov	r3, r0
 8003aee:	2b00      	cmp	r3, #0
 8003af0:	d007      	beq.n	8003b02 <task_drawString+0x3a>
 8003af2:	4941      	ldr	r1, [pc, #260]	; (8003bf8 <task_drawString+0x130>)
 8003af4:	483f      	ldr	r0, [pc, #252]	; (8003bf4 <task_drawString+0x12c>)
 8003af6:	f000 fbef 	bl	80042d8 <bufDeDat>
 8003afa:	4b3d      	ldr	r3, [pc, #244]	; (8003bf0 <task_drawString+0x128>)
 8003afc:	2201      	movs	r2, #1
 8003afe:	701a      	strb	r2, [r3, #0]
 8003b00:	e071      	b.n	8003be6 <task_drawString+0x11e>
 8003b02:	4b3e      	ldr	r3, [pc, #248]	; (8003bfc <task_drawString+0x134>)
 8003b04:	781b      	ldrb	r3, [r3, #0]
 8003b06:	2bff      	cmp	r3, #255	; 0xff
 8003b08:	d007      	beq.n	8003b1a <task_drawString+0x52>
 8003b0a:	4b3c      	ldr	r3, [pc, #240]	; (8003bfc <task_drawString+0x134>)
 8003b0c:	781b      	ldrb	r3, [r3, #0]
 8003b0e:	4618      	mov	r0, r3
 8003b10:	f7fe fcb0 	bl	8002474 <TimerStop>
 8003b14:	4b39      	ldr	r3, [pc, #228]	; (8003bfc <task_drawString+0x134>)
 8003b16:	22ff      	movs	r2, #255	; 0xff
 8003b18:	701a      	strb	r2, [r3, #0]
 8003b1a:	4b35      	ldr	r3, [pc, #212]	; (8003bf0 <task_drawString+0x128>)
 8003b1c:	2200      	movs	r2, #0
 8003b1e:	701a      	strb	r2, [r3, #0]
 8003b20:	e061      	b.n	8003be6 <task_drawString+0x11e>
 8003b22:	4b35      	ldr	r3, [pc, #212]	; (8003bf8 <task_drawString+0x130>)
 8003b24:	689b      	ldr	r3, [r3, #8]
 8003b26:	781b      	ldrb	r3, [r3, #0]
 8003b28:	2b00      	cmp	r3, #0
 8003b2a:	d054      	beq.n	8003bd6 <task_drawString+0x10e>
 8003b2c:	4b32      	ldr	r3, [pc, #200]	; (8003bf8 <task_drawString+0x130>)
 8003b2e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8003b32:	4b31      	ldr	r3, [pc, #196]	; (8003bf8 <task_drawString+0x130>)
 8003b34:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8003b38:	4b2f      	ldr	r3, [pc, #188]	; (8003bf8 <task_drawString+0x130>)
 8003b3a:	7918      	ldrb	r0, [r3, #4]
 8003b3c:	4b2e      	ldr	r3, [pc, #184]	; (8003bf8 <task_drawString+0x130>)
 8003b3e:	689b      	ldr	r3, [r3, #8]
 8003b40:	781b      	ldrb	r3, [r3, #0]
 8003b42:	9300      	str	r3, [sp, #0]
 8003b44:	4603      	mov	r3, r0
 8003b46:	68b8      	ldr	r0, [r7, #8]
 8003b48:	f7ff ff66 	bl	8003a18 <ucg_DrawGlyph>
 8003b4c:	4603      	mov	r3, r0
 8003b4e:	81fb      	strh	r3, [r7, #14]
 8003b50:	4b29      	ldr	r3, [pc, #164]	; (8003bf8 <task_drawString+0x130>)
 8003b52:	791b      	ldrb	r3, [r3, #4]
 8003b54:	2b03      	cmp	r3, #3
 8003b56:	d837      	bhi.n	8003bc8 <task_drawString+0x100>
 8003b58:	a201      	add	r2, pc, #4	; (adr r2, 8003b60 <task_drawString+0x98>)
 8003b5a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003b5e:	bf00      	nop
 8003b60:	08003b71 	.word	0x08003b71
 8003b64:	08003b87 	.word	0x08003b87
 8003b68:	08003b9d 	.word	0x08003b9d
 8003b6c:	08003bb3 	.word	0x08003bb3
 8003b70:	4b21      	ldr	r3, [pc, #132]	; (8003bf8 <task_drawString+0x130>)
 8003b72:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003b76:	b29a      	uxth	r2, r3
 8003b78:	89fb      	ldrh	r3, [r7, #14]
 8003b7a:	4413      	add	r3, r2
 8003b7c:	b29b      	uxth	r3, r3
 8003b7e:	b21a      	sxth	r2, r3
 8003b80:	4b1d      	ldr	r3, [pc, #116]	; (8003bf8 <task_drawString+0x130>)
 8003b82:	801a      	strh	r2, [r3, #0]
 8003b84:	e021      	b.n	8003bca <task_drawString+0x102>
 8003b86:	4b1c      	ldr	r3, [pc, #112]	; (8003bf8 <task_drawString+0x130>)
 8003b88:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8003b8c:	b29a      	uxth	r2, r3
 8003b8e:	89fb      	ldrh	r3, [r7, #14]
 8003b90:	4413      	add	r3, r2
 8003b92:	b29b      	uxth	r3, r3
 8003b94:	b21a      	sxth	r2, r3
 8003b96:	4b18      	ldr	r3, [pc, #96]	; (8003bf8 <task_drawString+0x130>)
 8003b98:	805a      	strh	r2, [r3, #2]
 8003b9a:	e016      	b.n	8003bca <task_drawString+0x102>
 8003b9c:	4b16      	ldr	r3, [pc, #88]	; (8003bf8 <task_drawString+0x130>)
 8003b9e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003ba2:	b29a      	uxth	r2, r3
 8003ba4:	89fb      	ldrh	r3, [r7, #14]
 8003ba6:	1ad3      	subs	r3, r2, r3
 8003ba8:	b29b      	uxth	r3, r3
 8003baa:	b21a      	sxth	r2, r3
 8003bac:	4b12      	ldr	r3, [pc, #72]	; (8003bf8 <task_drawString+0x130>)
 8003bae:	801a      	strh	r2, [r3, #0]
 8003bb0:	e00b      	b.n	8003bca <task_drawString+0x102>
 8003bb2:	4b11      	ldr	r3, [pc, #68]	; (8003bf8 <task_drawString+0x130>)
 8003bb4:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8003bb8:	b29a      	uxth	r2, r3
 8003bba:	89fb      	ldrh	r3, [r7, #14]
 8003bbc:	1ad3      	subs	r3, r2, r3
 8003bbe:	b29b      	uxth	r3, r3
 8003bc0:	b21a      	sxth	r2, r3
 8003bc2:	4b0d      	ldr	r3, [pc, #52]	; (8003bf8 <task_drawString+0x130>)
 8003bc4:	805a      	strh	r2, [r3, #2]
 8003bc6:	e000      	b.n	8003bca <task_drawString+0x102>
 8003bc8:	bf00      	nop
 8003bca:	4b0b      	ldr	r3, [pc, #44]	; (8003bf8 <task_drawString+0x130>)
 8003bcc:	689b      	ldr	r3, [r3, #8]
 8003bce:	3301      	adds	r3, #1
 8003bd0:	4a09      	ldr	r2, [pc, #36]	; (8003bf8 <task_drawString+0x130>)
 8003bd2:	6093      	str	r3, [r2, #8]
 8003bd4:	e007      	b.n	8003be6 <task_drawString+0x11e>
 8003bd6:	4b06      	ldr	r3, [pc, #24]	; (8003bf0 <task_drawString+0x128>)
 8003bd8:	2200      	movs	r2, #0
 8003bda:	701a      	strb	r2, [r3, #0]
 8003bdc:	e003      	b.n	8003be6 <task_drawString+0x11e>
 8003bde:	4b04      	ldr	r3, [pc, #16]	; (8003bf0 <task_drawString+0x128>)
 8003be0:	2200      	movs	r2, #0
 8003be2:	701a      	strb	r2, [r3, #0]
 8003be4:	bf00      	nop
 8003be6:	bf00      	nop
 8003be8:	3710      	adds	r7, #16
 8003bea:	46bd      	mov	sp, r7
 8003bec:	bd80      	pop	{r7, pc}
 8003bee:	bf00      	nop
 8003bf0:	20001388 	.word	0x20001388
 8003bf4:	20000378 	.word	0x20000378
 8003bf8:	200014d4 	.word	0x200014d4
 8003bfc:	20000024 	.word	0x20000024

08003c00 <ucg_DrawString>:
 8003c00:	b580      	push	{r7, lr}
 8003c02:	b08a      	sub	sp, #40	; 0x28
 8003c04:	af02      	add	r7, sp, #8
 8003c06:	60f8      	str	r0, [r7, #12]
 8003c08:	4608      	mov	r0, r1
 8003c0a:	4611      	mov	r1, r2
 8003c0c:	461a      	mov	r2, r3
 8003c0e:	4603      	mov	r3, r0
 8003c10:	817b      	strh	r3, [r7, #10]
 8003c12:	460b      	mov	r3, r1
 8003c14:	813b      	strh	r3, [r7, #8]
 8003c16:	4613      	mov	r3, r2
 8003c18:	71fb      	strb	r3, [r7, #7]
 8003c1a:	2300      	movs	r3, #0
 8003c1c:	83fb      	strh	r3, [r7, #30]
 8003c1e:	897b      	ldrh	r3, [r7, #10]
 8003c20:	823b      	strh	r3, [r7, #16]
 8003c22:	893b      	ldrh	r3, [r7, #8]
 8003c24:	827b      	strh	r3, [r7, #18]
 8003c26:	79fb      	ldrb	r3, [r7, #7]
 8003c28:	753b      	strb	r3, [r7, #20]
 8003c2a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003c2c:	61bb      	str	r3, [r7, #24]
 8003c2e:	f107 0310 	add.w	r3, r7, #16
 8003c32:	4619      	mov	r1, r3
 8003c34:	480c      	ldr	r0, [pc, #48]	; (8003c68 <ucg_DrawString+0x68>)
 8003c36:	f000 fb01 	bl	800423c <bufEnDat>
 8003c3a:	4b0c      	ldr	r3, [pc, #48]	; (8003c6c <ucg_DrawString+0x6c>)
 8003c3c:	781b      	ldrb	r3, [r3, #0]
 8003c3e:	2bff      	cmp	r3, #255	; 0xff
 8003c40:	d10b      	bne.n	8003c5a <ucg_DrawString+0x5a>
 8003c42:	68fb      	ldr	r3, [r7, #12]
 8003c44:	9300      	str	r3, [sp, #0]
 8003c46:	4b0a      	ldr	r3, [pc, #40]	; (8003c70 <ucg_DrawString+0x70>)
 8003c48:	22ff      	movs	r2, #255	; 0xff
 8003c4a:	211e      	movs	r1, #30
 8003c4c:	4809      	ldr	r0, [pc, #36]	; (8003c74 <ucg_DrawString+0x74>)
 8003c4e:	f7fe fbaf 	bl	80023b0 <TimerStart>
 8003c52:	4603      	mov	r3, r0
 8003c54:	461a      	mov	r2, r3
 8003c56:	4b05      	ldr	r3, [pc, #20]	; (8003c6c <ucg_DrawString+0x6c>)
 8003c58:	701a      	strb	r2, [r3, #0]
 8003c5a:	f9b7 301e 	ldrsh.w	r3, [r7, #30]
 8003c5e:	4618      	mov	r0, r3
 8003c60:	3720      	adds	r7, #32
 8003c62:	46bd      	mov	sp, r7
 8003c64:	bd80      	pop	{r7, pc}
 8003c66:	bf00      	nop
 8003c68:	20000378 	.word	0x20000378
 8003c6c:	20000024 	.word	0x20000024
 8003c70:	08003ac9 	.word	0x08003ac9
 8003c74:	0800585c 	.word	0x0800585c

08003c78 <ucg_UpdateRefHeight>:
 8003c78:	b480      	push	{r7}
 8003c7a:	b083      	sub	sp, #12
 8003c7c:	af00      	add	r7, sp, #0
 8003c7e:	6078      	str	r0, [r7, #4]
 8003c80:	687b      	ldr	r3, [r7, #4]
 8003c82:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8003c84:	2b00      	cmp	r3, #0
 8003c86:	d05d      	beq.n	8003d44 <ucg_UpdateRefHeight+0xcc>
 8003c88:	687b      	ldr	r3, [r7, #4]
 8003c8a:	f993 209d 	ldrsb.w	r2, [r3, #157]	; 0x9d
 8003c8e:	687b      	ldr	r3, [r7, #4]
 8003c90:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 8003c94:	687b      	ldr	r3, [r7, #4]
 8003c96:	f993 209e 	ldrsb.w	r2, [r3, #158]	; 0x9e
 8003c9a:	687b      	ldr	r3, [r7, #4]
 8003c9c:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 8003ca0:	687b      	ldr	r3, [r7, #4]
 8003ca2:	f893 30ab 	ldrb.w	r3, [r3, #171]	; 0xab
 8003ca6:	2b00      	cmp	r3, #0
 8003ca8:	d04d      	beq.n	8003d46 <ucg_UpdateRefHeight+0xce>
 8003caa:	687b      	ldr	r3, [r7, #4]
 8003cac:	f893 30ab 	ldrb.w	r3, [r3, #171]	; 0xab
 8003cb0:	2b01      	cmp	r3, #1
 8003cb2:	d11c      	bne.n	8003cee <ucg_UpdateRefHeight+0x76>
 8003cb4:	687b      	ldr	r3, [r7, #4]
 8003cb6:	f993 20ac 	ldrsb.w	r2, [r3, #172]	; 0xac
 8003cba:	687b      	ldr	r3, [r7, #4]
 8003cbc:	f993 309f 	ldrsb.w	r3, [r3, #159]	; 0x9f
 8003cc0:	429a      	cmp	r2, r3
 8003cc2:	da05      	bge.n	8003cd0 <ucg_UpdateRefHeight+0x58>
 8003cc4:	687b      	ldr	r3, [r7, #4]
 8003cc6:	f993 209f 	ldrsb.w	r2, [r3, #159]	; 0x9f
 8003cca:	687b      	ldr	r3, [r7, #4]
 8003ccc:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 8003cd0:	687b      	ldr	r3, [r7, #4]
 8003cd2:	f993 20ad 	ldrsb.w	r2, [r3, #173]	; 0xad
 8003cd6:	687b      	ldr	r3, [r7, #4]
 8003cd8:	f993 30a0 	ldrsb.w	r3, [r3, #160]	; 0xa0
 8003cdc:	429a      	cmp	r2, r3
 8003cde:	dd32      	ble.n	8003d46 <ucg_UpdateRefHeight+0xce>
 8003ce0:	687b      	ldr	r3, [r7, #4]
 8003ce2:	f993 20a0 	ldrsb.w	r2, [r3, #160]	; 0xa0
 8003ce6:	687b      	ldr	r3, [r7, #4]
 8003ce8:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 8003cec:	e02b      	b.n	8003d46 <ucg_UpdateRefHeight+0xce>
 8003cee:	687b      	ldr	r3, [r7, #4]
 8003cf0:	f993 30ac 	ldrsb.w	r3, [r3, #172]	; 0xac
 8003cf4:	461a      	mov	r2, r3
 8003cf6:	687b      	ldr	r3, [r7, #4]
 8003cf8:	f993 309a 	ldrsb.w	r3, [r3, #154]	; 0x9a
 8003cfc:	4619      	mov	r1, r3
 8003cfe:	687b      	ldr	r3, [r7, #4]
 8003d00:	f993 309c 	ldrsb.w	r3, [r3, #156]	; 0x9c
 8003d04:	440b      	add	r3, r1
 8003d06:	429a      	cmp	r2, r3
 8003d08:	da0d      	bge.n	8003d26 <ucg_UpdateRefHeight+0xae>
 8003d0a:	687b      	ldr	r3, [r7, #4]
 8003d0c:	f993 309a 	ldrsb.w	r3, [r3, #154]	; 0x9a
 8003d10:	b2da      	uxtb	r2, r3
 8003d12:	687b      	ldr	r3, [r7, #4]
 8003d14:	f993 309c 	ldrsb.w	r3, [r3, #156]	; 0x9c
 8003d18:	b2db      	uxtb	r3, r3
 8003d1a:	4413      	add	r3, r2
 8003d1c:	b2db      	uxtb	r3, r3
 8003d1e:	b25a      	sxtb	r2, r3
 8003d20:	687b      	ldr	r3, [r7, #4]
 8003d22:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 8003d26:	687b      	ldr	r3, [r7, #4]
 8003d28:	f993 20ad 	ldrsb.w	r2, [r3, #173]	; 0xad
 8003d2c:	687b      	ldr	r3, [r7, #4]
 8003d2e:	f993 309c 	ldrsb.w	r3, [r3, #156]	; 0x9c
 8003d32:	429a      	cmp	r2, r3
 8003d34:	dd07      	ble.n	8003d46 <ucg_UpdateRefHeight+0xce>
 8003d36:	687b      	ldr	r3, [r7, #4]
 8003d38:	f993 209c 	ldrsb.w	r2, [r3, #156]	; 0x9c
 8003d3c:	687b      	ldr	r3, [r7, #4]
 8003d3e:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 8003d42:	e000      	b.n	8003d46 <ucg_UpdateRefHeight+0xce>
 8003d44:	bf00      	nop
 8003d46:	370c      	adds	r7, #12
 8003d48:	46bd      	mov	sp, r7
 8003d4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d4e:	4770      	bx	lr

08003d50 <ucg_font_calc_vref_font>:
 8003d50:	b480      	push	{r7}
 8003d52:	b083      	sub	sp, #12
 8003d54:	af00      	add	r7, sp, #0
 8003d56:	6078      	str	r0, [r7, #4]
 8003d58:	2300      	movs	r3, #0
 8003d5a:	4618      	mov	r0, r3
 8003d5c:	370c      	adds	r7, #12
 8003d5e:	46bd      	mov	sp, r7
 8003d60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d64:	4770      	bx	lr
	...

08003d68 <ucg_SetFontPosBaseline>:
 8003d68:	b480      	push	{r7}
 8003d6a:	b083      	sub	sp, #12
 8003d6c:	af00      	add	r7, sp, #0
 8003d6e:	6078      	str	r0, [r7, #4]
 8003d70:	687b      	ldr	r3, [r7, #4]
 8003d72:	4a04      	ldr	r2, [pc, #16]	; (8003d84 <ucg_SetFontPosBaseline+0x1c>)
 8003d74:	67da      	str	r2, [r3, #124]	; 0x7c
 8003d76:	bf00      	nop
 8003d78:	370c      	adds	r7, #12
 8003d7a:	46bd      	mov	sp, r7
 8003d7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d80:	4770      	bx	lr
 8003d82:	bf00      	nop
 8003d84:	08003d51 	.word	0x08003d51

08003d88 <ucg_SetFont>:
 8003d88:	b580      	push	{r7, lr}
 8003d8a:	b082      	sub	sp, #8
 8003d8c:	af00      	add	r7, sp, #0
 8003d8e:	6078      	str	r0, [r7, #4]
 8003d90:	6039      	str	r1, [r7, #0]
 8003d92:	687b      	ldr	r3, [r7, #4]
 8003d94:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8003d96:	683a      	ldr	r2, [r7, #0]
 8003d98:	429a      	cmp	r2, r3
 8003d9a:	d012      	beq.n	8003dc2 <ucg_SetFont+0x3a>
 8003d9c:	687b      	ldr	r3, [r7, #4]
 8003d9e:	683a      	ldr	r2, [r7, #0]
 8003da0:	679a      	str	r2, [r3, #120]	; 0x78
 8003da2:	687b      	ldr	r3, [r7, #4]
 8003da4:	3390      	adds	r3, #144	; 0x90
 8003da6:	6839      	ldr	r1, [r7, #0]
 8003da8:	4618      	mov	r0, r3
 8003daa:	f7ff fac9 	bl	8003340 <ucg_read_font_info>
 8003dae:	6878      	ldr	r0, [r7, #4]
 8003db0:	f7ff ff62 	bl	8003c78 <ucg_UpdateRefHeight>
 8003db4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003db8:	220c      	movs	r2, #12
 8003dba:	4904      	ldr	r1, [pc, #16]	; (8003dcc <ucg_SetFont+0x44>)
 8003dbc:	4804      	ldr	r0, [pc, #16]	; (8003dd0 <ucg_SetFont+0x48>)
 8003dbe:	f000 f9d7 	bl	8004170 <bufInit>
 8003dc2:	bf00      	nop
 8003dc4:	3708      	adds	r7, #8
 8003dc6:	46bd      	mov	sp, r7
 8003dc8:	bd80      	pop	{r7, pc}
 8003dca:	bf00      	nop
 8003dcc:	20000378 	.word	0x20000378
 8003dd0:	20000388 	.word	0x20000388

08003dd4 <ucg_init_struct>:
 8003dd4:	b480      	push	{r7}
 8003dd6:	b083      	sub	sp, #12
 8003dd8:	af00      	add	r7, sp, #0
 8003dda:	6078      	str	r0, [r7, #4]
 8003ddc:	687a      	ldr	r2, [r7, #4]
 8003dde:	7813      	ldrb	r3, [r2, #0]
 8003de0:	f36f 0300 	bfc	r3, #0, #1
 8003de4:	7013      	strb	r3, [r2, #0]
 8003de6:	687b      	ldr	r3, [r7, #4]
 8003de8:	2200      	movs	r2, #0
 8003dea:	611a      	str	r2, [r3, #16]
 8003dec:	687b      	ldr	r3, [r7, #4]
 8003dee:	2201      	movs	r2, #1
 8003df0:	865a      	strh	r2, [r3, #50]	; 0x32
 8003df2:	687b      	ldr	r3, [r7, #4]
 8003df4:	2200      	movs	r2, #0
 8003df6:	679a      	str	r2, [r3, #120]	; 0x78
 8003df8:	687b      	ldr	r3, [r7, #4]
 8003dfa:	2201      	movs	r2, #1
 8003dfc:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
 8003e00:	687b      	ldr	r3, [r7, #4]
 8003e02:	2200      	movs	r2, #0
 8003e04:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8003e08:	687b      	ldr	r3, [r7, #4]
 8003e0a:	2200      	movs	r2, #0
 8003e0c:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8003e10:	687b      	ldr	r3, [r7, #4]
 8003e12:	2200      	movs	r2, #0
 8003e14:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
 8003e18:	bf00      	nop
 8003e1a:	370c      	adds	r7, #12
 8003e1c:	46bd      	mov	sp, r7
 8003e1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e22:	4770      	bx	lr

08003e24 <ucg_Init>:
 8003e24:	b580      	push	{r7, lr}
 8003e26:	b086      	sub	sp, #24
 8003e28:	af00      	add	r7, sp, #0
 8003e2a:	60f8      	str	r0, [r7, #12]
 8003e2c:	60b9      	str	r1, [r7, #8]
 8003e2e:	607a      	str	r2, [r7, #4]
 8003e30:	603b      	str	r3, [r7, #0]
 8003e32:	68f8      	ldr	r0, [r7, #12]
 8003e34:	f7ff ffce 	bl	8003dd4 <ucg_init_struct>
 8003e38:	687b      	ldr	r3, [r7, #4]
 8003e3a:	2b00      	cmp	r3, #0
 8003e3c:	d103      	bne.n	8003e46 <ucg_Init+0x22>
 8003e3e:	68fb      	ldr	r3, [r7, #12]
 8003e40:	4a0e      	ldr	r2, [pc, #56]	; (8003e7c <ucg_Init+0x58>)
 8003e42:	60da      	str	r2, [r3, #12]
 8003e44:	e002      	b.n	8003e4c <ucg_Init+0x28>
 8003e46:	68fb      	ldr	r3, [r7, #12]
 8003e48:	687a      	ldr	r2, [r7, #4]
 8003e4a:	60da      	str	r2, [r3, #12]
 8003e4c:	68fb      	ldr	r3, [r7, #12]
 8003e4e:	68ba      	ldr	r2, [r7, #8]
 8003e50:	609a      	str	r2, [r3, #8]
 8003e52:	68fb      	ldr	r3, [r7, #12]
 8003e54:	683a      	ldr	r2, [r7, #0]
 8003e56:	61da      	str	r2, [r3, #28]
 8003e58:	68f8      	ldr	r0, [r7, #12]
 8003e5a:	f7ff ff85 	bl	8003d68 <ucg_SetFontPosBaseline>
 8003e5e:	68f8      	ldr	r0, [r7, #12]
 8003e60:	f7ff f996 	bl	8003190 <ucg_PowerUp>
 8003e64:	4603      	mov	r3, r0
 8003e66:	82fb      	strh	r3, [r7, #22]
 8003e68:	68f8      	ldr	r0, [r7, #12]
 8003e6a:	f7ff f9d6 	bl	800321a <ucg_GetDimension>
 8003e6e:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8003e72:	4618      	mov	r0, r3
 8003e74:	3718      	adds	r7, #24
 8003e76:	46bd      	mov	sp, r7
 8003e78:	bd80      	pop	{r7, pc}
 8003e7a:	bf00      	nop
 8003e7c:	08002df5 	.word	0x08002df5

08003e80 <ucg_Draw90Line>:
 8003e80:	b580      	push	{r7, lr}
 8003e82:	b084      	sub	sp, #16
 8003e84:	af00      	add	r7, sp, #0
 8003e86:	60f8      	str	r0, [r7, #12]
 8003e88:	4608      	mov	r0, r1
 8003e8a:	4611      	mov	r1, r2
 8003e8c:	461a      	mov	r2, r3
 8003e8e:	4603      	mov	r3, r0
 8003e90:	817b      	strh	r3, [r7, #10]
 8003e92:	460b      	mov	r3, r1
 8003e94:	813b      	strh	r3, [r7, #8]
 8003e96:	4613      	mov	r3, r2
 8003e98:	80fb      	strh	r3, [r7, #6]
 8003e9a:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 8003e9e:	68f9      	ldr	r1, [r7, #12]
 8003ea0:	4613      	mov	r3, r2
 8003ea2:	005b      	lsls	r3, r3, #1
 8003ea4:	4413      	add	r3, r2
 8003ea6:	440b      	add	r3, r1
 8003ea8:	333a      	adds	r3, #58	; 0x3a
 8003eaa:	781a      	ldrb	r2, [r3, #0]
 8003eac:	68fb      	ldr	r3, [r7, #12]
 8003eae:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8003eb2:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 8003eb6:	68f9      	ldr	r1, [r7, #12]
 8003eb8:	4613      	mov	r3, r2
 8003eba:	005b      	lsls	r3, r3, #1
 8003ebc:	4413      	add	r3, r2
 8003ebe:	440b      	add	r3, r1
 8003ec0:	333b      	adds	r3, #59	; 0x3b
 8003ec2:	781a      	ldrb	r2, [r3, #0]
 8003ec4:	68fb      	ldr	r3, [r7, #12]
 8003ec6:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 8003eca:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 8003ece:	68f9      	ldr	r1, [r7, #12]
 8003ed0:	4613      	mov	r3, r2
 8003ed2:	005b      	lsls	r3, r3, #1
 8003ed4:	4413      	add	r3, r2
 8003ed6:	440b      	add	r3, r1
 8003ed8:	333c      	adds	r3, #60	; 0x3c
 8003eda:	781a      	ldrb	r2, [r3, #0]
 8003edc:	68fb      	ldr	r3, [r7, #12]
 8003ede:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 8003ee2:	68fb      	ldr	r3, [r7, #12]
 8003ee4:	897a      	ldrh	r2, [r7, #10]
 8003ee6:	849a      	strh	r2, [r3, #36]	; 0x24
 8003ee8:	68fb      	ldr	r3, [r7, #12]
 8003eea:	893a      	ldrh	r2, [r7, #8]
 8003eec:	84da      	strh	r2, [r3, #38]	; 0x26
 8003eee:	68fb      	ldr	r3, [r7, #12]
 8003ef0:	88fa      	ldrh	r2, [r7, #6]
 8003ef2:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003ef4:	68fb      	ldr	r3, [r7, #12]
 8003ef6:	8b3a      	ldrh	r2, [r7, #24]
 8003ef8:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003efa:	68f8      	ldr	r0, [r7, #12]
 8003efc:	f7ff f99f 	bl	800323e <ucg_DrawL90FXWithArg>
 8003f00:	bf00      	nop
 8003f02:	3710      	adds	r7, #16
 8003f04:	46bd      	mov	sp, r7
 8003f06:	bd80      	pop	{r7, pc}

08003f08 <ucg_DrawHLine>:
 8003f08:	b580      	push	{r7, lr}
 8003f0a:	b086      	sub	sp, #24
 8003f0c:	af02      	add	r7, sp, #8
 8003f0e:	60f8      	str	r0, [r7, #12]
 8003f10:	4608      	mov	r0, r1
 8003f12:	4611      	mov	r1, r2
 8003f14:	461a      	mov	r2, r3
 8003f16:	4603      	mov	r3, r0
 8003f18:	817b      	strh	r3, [r7, #10]
 8003f1a:	460b      	mov	r3, r1
 8003f1c:	813b      	strh	r3, [r7, #8]
 8003f1e:	4613      	mov	r3, r2
 8003f20:	80fb      	strh	r3, [r7, #6]
 8003f22:	f9b7 0006 	ldrsh.w	r0, [r7, #6]
 8003f26:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8003f2a:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8003f2e:	2300      	movs	r3, #0
 8003f30:	9301      	str	r3, [sp, #4]
 8003f32:	2300      	movs	r3, #0
 8003f34:	9300      	str	r3, [sp, #0]
 8003f36:	4603      	mov	r3, r0
 8003f38:	68f8      	ldr	r0, [r7, #12]
 8003f3a:	f7ff ffa1 	bl	8003e80 <ucg_Draw90Line>
 8003f3e:	bf00      	nop
 8003f40:	3710      	adds	r7, #16
 8003f42:	46bd      	mov	sp, r7
 8003f44:	bd80      	pop	{r7, pc}

08003f46 <ucg_SetColor>:
 8003f46:	b480      	push	{r7}
 8003f48:	b083      	sub	sp, #12
 8003f4a:	af00      	add	r7, sp, #0
 8003f4c:	6078      	str	r0, [r7, #4]
 8003f4e:	4608      	mov	r0, r1
 8003f50:	4611      	mov	r1, r2
 8003f52:	461a      	mov	r2, r3
 8003f54:	4603      	mov	r3, r0
 8003f56:	70fb      	strb	r3, [r7, #3]
 8003f58:	460b      	mov	r3, r1
 8003f5a:	70bb      	strb	r3, [r7, #2]
 8003f5c:	4613      	mov	r3, r2
 8003f5e:	707b      	strb	r3, [r7, #1]
 8003f60:	78fa      	ldrb	r2, [r7, #3]
 8003f62:	6879      	ldr	r1, [r7, #4]
 8003f64:	4613      	mov	r3, r2
 8003f66:	005b      	lsls	r3, r3, #1
 8003f68:	4413      	add	r3, r2
 8003f6a:	440b      	add	r3, r1
 8003f6c:	333a      	adds	r3, #58	; 0x3a
 8003f6e:	78ba      	ldrb	r2, [r7, #2]
 8003f70:	701a      	strb	r2, [r3, #0]
 8003f72:	78fa      	ldrb	r2, [r7, #3]
 8003f74:	6879      	ldr	r1, [r7, #4]
 8003f76:	4613      	mov	r3, r2
 8003f78:	005b      	lsls	r3, r3, #1
 8003f7a:	4413      	add	r3, r2
 8003f7c:	440b      	add	r3, r1
 8003f7e:	333b      	adds	r3, #59	; 0x3b
 8003f80:	787a      	ldrb	r2, [r7, #1]
 8003f82:	701a      	strb	r2, [r3, #0]
 8003f84:	78fa      	ldrb	r2, [r7, #3]
 8003f86:	6879      	ldr	r1, [r7, #4]
 8003f88:	4613      	mov	r3, r2
 8003f8a:	005b      	lsls	r3, r3, #1
 8003f8c:	4413      	add	r3, r2
 8003f8e:	440b      	add	r3, r1
 8003f90:	333c      	adds	r3, #60	; 0x3c
 8003f92:	7c3a      	ldrb	r2, [r7, #16]
 8003f94:	701a      	strb	r2, [r3, #0]
 8003f96:	bf00      	nop
 8003f98:	370c      	adds	r7, #12
 8003f9a:	46bd      	mov	sp, r7
 8003f9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fa0:	4770      	bx	lr

08003fa2 <ucg_UndoRotate>:
 8003fa2:	b580      	push	{r7, lr}
 8003fa4:	b082      	sub	sp, #8
 8003fa6:	af00      	add	r7, sp, #0
 8003fa8:	6078      	str	r0, [r7, #4]
 8003faa:	687b      	ldr	r3, [r7, #4]
 8003fac:	691b      	ldr	r3, [r3, #16]
 8003fae:	2b00      	cmp	r3, #0
 8003fb0:	d006      	beq.n	8003fc0 <ucg_UndoRotate+0x1e>
 8003fb2:	687b      	ldr	r3, [r7, #4]
 8003fb4:	691a      	ldr	r2, [r3, #16]
 8003fb6:	687b      	ldr	r3, [r7, #4]
 8003fb8:	609a      	str	r2, [r3, #8]
 8003fba:	687b      	ldr	r3, [r7, #4]
 8003fbc:	2200      	movs	r2, #0
 8003fbe:	611a      	str	r2, [r3, #16]
 8003fc0:	6878      	ldr	r0, [r7, #4]
 8003fc2:	f7ff f92a 	bl	800321a <ucg_GetDimension>
 8003fc6:	6878      	ldr	r0, [r7, #4]
 8003fc8:	f7ff f90f 	bl	80031ea <ucg_SetMaxClipRange>
 8003fcc:	bf00      	nop
 8003fce:	3708      	adds	r7, #8
 8003fd0:	46bd      	mov	sp, r7
 8003fd2:	bd80      	pop	{r7, pc}

08003fd4 <ucg_rotate_180_xy>:
 8003fd4:	b480      	push	{r7}
 8003fd6:	b085      	sub	sp, #20
 8003fd8:	af00      	add	r7, sp, #0
 8003fda:	6078      	str	r0, [r7, #4]
 8003fdc:	6039      	str	r1, [r7, #0]
 8003fde:	687b      	ldr	r3, [r7, #4]
 8003fe0:	8adb      	ldrh	r3, [r3, #22]
 8003fe2:	81fb      	strh	r3, [r7, #14]
 8003fe4:	89fa      	ldrh	r2, [r7, #14]
 8003fe6:	683b      	ldr	r3, [r7, #0]
 8003fe8:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8003fec:	b29b      	uxth	r3, r3
 8003fee:	1ad3      	subs	r3, r2, r3
 8003ff0:	b29b      	uxth	r3, r3
 8003ff2:	81fb      	strh	r3, [r7, #14]
 8003ff4:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003ff8:	b29b      	uxth	r3, r3
 8003ffa:	3b01      	subs	r3, #1
 8003ffc:	b29b      	uxth	r3, r3
 8003ffe:	81fb      	strh	r3, [r7, #14]
 8004000:	683b      	ldr	r3, [r7, #0]
 8004002:	89fa      	ldrh	r2, [r7, #14]
 8004004:	805a      	strh	r2, [r3, #2]
 8004006:	687b      	ldr	r3, [r7, #4]
 8004008:	8a9b      	ldrh	r3, [r3, #20]
 800400a:	81bb      	strh	r3, [r7, #12]
 800400c:	89ba      	ldrh	r2, [r7, #12]
 800400e:	683b      	ldr	r3, [r7, #0]
 8004010:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004014:	b29b      	uxth	r3, r3
 8004016:	1ad3      	subs	r3, r2, r3
 8004018:	b29b      	uxth	r3, r3
 800401a:	81bb      	strh	r3, [r7, #12]
 800401c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004020:	b29b      	uxth	r3, r3
 8004022:	3b01      	subs	r3, #1
 8004024:	b29b      	uxth	r3, r3
 8004026:	81bb      	strh	r3, [r7, #12]
 8004028:	683b      	ldr	r3, [r7, #0]
 800402a:	89ba      	ldrh	r2, [r7, #12]
 800402c:	801a      	strh	r2, [r3, #0]
 800402e:	bf00      	nop
 8004030:	3714      	adds	r7, #20
 8004032:	46bd      	mov	sp, r7
 8004034:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004038:	4770      	bx	lr
	...

0800403c <ucg_dev_rotate180>:
 800403c:	b580      	push	{r7, lr}
 800403e:	b084      	sub	sp, #16
 8004040:	af00      	add	r7, sp, #0
 8004042:	60f8      	str	r0, [r7, #12]
 8004044:	460b      	mov	r3, r1
 8004046:	607a      	str	r2, [r7, #4]
 8004048:	817b      	strh	r3, [r7, #10]
 800404a:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800404e:	3b0c      	subs	r3, #12
 8004050:	2b0b      	cmp	r3, #11
 8004052:	d866      	bhi.n	8004122 <ucg_dev_rotate180+0xe6>
 8004054:	a201      	add	r2, pc, #4	; (adr r2, 800405c <ucg_dev_rotate180+0x20>)
 8004056:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800405a:	bf00      	nop
 800405c:	080040ab 	.word	0x080040ab
 8004060:	08004123 	.word	0x08004123
 8004064:	08004123 	.word	0x08004123
 8004068:	0800408d 	.word	0x0800408d
 800406c:	08004123 	.word	0x08004123
 8004070:	08004123 	.word	0x08004123
 8004074:	08004123 	.word	0x08004123
 8004078:	08004123 	.word	0x08004123
 800407c:	080040f3 	.word	0x080040f3
 8004080:	080040f3 	.word	0x080040f3
 8004084:	08004123 	.word	0x08004123
 8004088:	080040f3 	.word	0x080040f3
 800408c:	68fb      	ldr	r3, [r7, #12]
 800408e:	691b      	ldr	r3, [r3, #16]
 8004090:	68fa      	ldr	r2, [r7, #12]
 8004092:	3214      	adds	r2, #20
 8004094:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8004098:	68f8      	ldr	r0, [r7, #12]
 800409a:	4798      	blx	r3
 800409c:	687a      	ldr	r2, [r7, #4]
 800409e:	68fb      	ldr	r3, [r7, #12]
 80040a0:	3314      	adds	r3, #20
 80040a2:	6818      	ldr	r0, [r3, #0]
 80040a4:	6010      	str	r0, [r2, #0]
 80040a6:	2301      	movs	r3, #1
 80040a8:	e043      	b.n	8004132 <ucg_dev_rotate180+0xf6>
 80040aa:	687b      	ldr	r3, [r7, #4]
 80040ac:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80040b0:	b29a      	uxth	r2, r3
 80040b2:	687b      	ldr	r3, [r7, #4]
 80040b4:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80040b8:	b29b      	uxth	r3, r3
 80040ba:	4413      	add	r3, r2
 80040bc:	b29b      	uxth	r3, r3
 80040be:	3b01      	subs	r3, #1
 80040c0:	b29b      	uxth	r3, r3
 80040c2:	b21a      	sxth	r2, r3
 80040c4:	687b      	ldr	r3, [r7, #4]
 80040c6:	805a      	strh	r2, [r3, #2]
 80040c8:	687b      	ldr	r3, [r7, #4]
 80040ca:	f9b3 3000 	ldrsh.w	r3, [r3]
 80040ce:	b29a      	uxth	r2, r3
 80040d0:	687b      	ldr	r3, [r7, #4]
 80040d2:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80040d6:	b29b      	uxth	r3, r3
 80040d8:	4413      	add	r3, r2
 80040da:	b29b      	uxth	r3, r3
 80040dc:	3b01      	subs	r3, #1
 80040de:	b29b      	uxth	r3, r3
 80040e0:	b21a      	sxth	r2, r3
 80040e2:	687b      	ldr	r3, [r7, #4]
 80040e4:	801a      	strh	r2, [r3, #0]
 80040e6:	687b      	ldr	r3, [r7, #4]
 80040e8:	4619      	mov	r1, r3
 80040ea:	68f8      	ldr	r0, [r7, #12]
 80040ec:	f7ff ff72 	bl	8003fd4 <ucg_rotate_180_xy>
 80040f0:	e017      	b.n	8004122 <ucg_dev_rotate180+0xe6>
 80040f2:	68fb      	ldr	r3, [r7, #12]
 80040f4:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 80040f8:	b29b      	uxth	r3, r3
 80040fa:	3302      	adds	r3, #2
 80040fc:	b29b      	uxth	r3, r3
 80040fe:	b21a      	sxth	r2, r3
 8004100:	68fb      	ldr	r3, [r7, #12]
 8004102:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004104:	68fb      	ldr	r3, [r7, #12]
 8004106:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 800410a:	f003 0303 	and.w	r3, r3, #3
 800410e:	b21a      	sxth	r2, r3
 8004110:	68fb      	ldr	r3, [r7, #12]
 8004112:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004114:	68fb      	ldr	r3, [r7, #12]
 8004116:	3324      	adds	r3, #36	; 0x24
 8004118:	4619      	mov	r1, r3
 800411a:	68f8      	ldr	r0, [r7, #12]
 800411c:	f7ff ff5a 	bl	8003fd4 <ucg_rotate_180_xy>
 8004120:	bf00      	nop
 8004122:	68fb      	ldr	r3, [r7, #12]
 8004124:	691b      	ldr	r3, [r3, #16]
 8004126:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800412a:	687a      	ldr	r2, [r7, #4]
 800412c:	68f8      	ldr	r0, [r7, #12]
 800412e:	4798      	blx	r3
 8004130:	4603      	mov	r3, r0
 8004132:	4618      	mov	r0, r3
 8004134:	3710      	adds	r7, #16
 8004136:	46bd      	mov	sp, r7
 8004138:	bd80      	pop	{r7, pc}
 800413a:	bf00      	nop

0800413c <ucg_SetRotate180>:
 800413c:	b580      	push	{r7, lr}
 800413e:	b082      	sub	sp, #8
 8004140:	af00      	add	r7, sp, #0
 8004142:	6078      	str	r0, [r7, #4]
 8004144:	6878      	ldr	r0, [r7, #4]
 8004146:	f7ff ff2c 	bl	8003fa2 <ucg_UndoRotate>
 800414a:	687b      	ldr	r3, [r7, #4]
 800414c:	689a      	ldr	r2, [r3, #8]
 800414e:	687b      	ldr	r3, [r7, #4]
 8004150:	611a      	str	r2, [r3, #16]
 8004152:	687b      	ldr	r3, [r7, #4]
 8004154:	4a05      	ldr	r2, [pc, #20]	; (800416c <ucg_SetRotate180+0x30>)
 8004156:	609a      	str	r2, [r3, #8]
 8004158:	6878      	ldr	r0, [r7, #4]
 800415a:	f7ff f85e 	bl	800321a <ucg_GetDimension>
 800415e:	6878      	ldr	r0, [r7, #4]
 8004160:	f7ff f843 	bl	80031ea <ucg_SetMaxClipRange>
 8004164:	bf00      	nop
 8004166:	3708      	adds	r7, #8
 8004168:	46bd      	mov	sp, r7
 800416a:	bd80      	pop	{r7, pc}
 800416c:	0800403d 	.word	0x0800403d

08004170 <bufInit>:
 8004170:	b580      	push	{r7, lr}
 8004172:	b084      	sub	sp, #16
 8004174:	af00      	add	r7, sp, #0
 8004176:	60f8      	str	r0, [r7, #12]
 8004178:	60b9      	str	r1, [r7, #8]
 800417a:	4611      	mov	r1, r2
 800417c:	461a      	mov	r2, r3
 800417e:	460b      	mov	r3, r1
 8004180:	71fb      	strb	r3, [r7, #7]
 8004182:	4613      	mov	r3, r2
 8004184:	80bb      	strh	r3, [r7, #4]
 8004186:	68bb      	ldr	r3, [r7, #8]
 8004188:	88ba      	ldrh	r2, [r7, #4]
 800418a:	801a      	strh	r2, [r3, #0]
 800418c:	68bb      	ldr	r3, [r7, #8]
 800418e:	79fa      	ldrb	r2, [r7, #7]
 8004190:	711a      	strb	r2, [r3, #4]
 8004192:	68bb      	ldr	r3, [r7, #8]
 8004194:	68fa      	ldr	r2, [r7, #12]
 8004196:	60da      	str	r2, [r3, #12]
 8004198:	68b8      	ldr	r0, [r7, #8]
 800419a:	f000 f836 	bl	800420a <bufFlush>
 800419e:	bf00      	nop
 80041a0:	3710      	adds	r7, #16
 80041a2:	46bd      	mov	sp, r7
 80041a4:	bd80      	pop	{r7, pc}

080041a6 <bufNumItems>:
 80041a6:	b480      	push	{r7}
 80041a8:	b083      	sub	sp, #12
 80041aa:	af00      	add	r7, sp, #0
 80041ac:	6078      	str	r0, [r7, #4]
 80041ae:	687b      	ldr	r3, [r7, #4]
 80041b0:	885b      	ldrh	r3, [r3, #2]
 80041b2:	4618      	mov	r0, r3
 80041b4:	370c      	adds	r7, #12
 80041b6:	46bd      	mov	sp, r7
 80041b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041bc:	4770      	bx	lr

080041be <bufIsFull>:
 80041be:	b480      	push	{r7}
 80041c0:	b083      	sub	sp, #12
 80041c2:	af00      	add	r7, sp, #0
 80041c4:	6078      	str	r0, [r7, #4]
 80041c6:	687b      	ldr	r3, [r7, #4]
 80041c8:	885a      	ldrh	r2, [r3, #2]
 80041ca:	687b      	ldr	r3, [r7, #4]
 80041cc:	881b      	ldrh	r3, [r3, #0]
 80041ce:	429a      	cmp	r2, r3
 80041d0:	bf2c      	ite	cs
 80041d2:	2301      	movcs	r3, #1
 80041d4:	2300      	movcc	r3, #0
 80041d6:	b2db      	uxtb	r3, r3
 80041d8:	4618      	mov	r0, r3
 80041da:	370c      	adds	r7, #12
 80041dc:	46bd      	mov	sp, r7
 80041de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041e2:	4770      	bx	lr

080041e4 <bufIsEmpty>:
 80041e4:	b480      	push	{r7}
 80041e6:	b083      	sub	sp, #12
 80041e8:	af00      	add	r7, sp, #0
 80041ea:	6078      	str	r0, [r7, #4]
 80041ec:	687b      	ldr	r3, [r7, #4]
 80041ee:	88da      	ldrh	r2, [r3, #6]
 80041f0:	687b      	ldr	r3, [r7, #4]
 80041f2:	891b      	ldrh	r3, [r3, #8]
 80041f4:	429a      	cmp	r2, r3
 80041f6:	bf0c      	ite	eq
 80041f8:	2301      	moveq	r3, #1
 80041fa:	2300      	movne	r3, #0
 80041fc:	b2db      	uxtb	r3, r3
 80041fe:	4618      	mov	r0, r3
 8004200:	370c      	adds	r7, #12
 8004202:	46bd      	mov	sp, r7
 8004204:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004208:	4770      	bx	lr

0800420a <bufFlush>:
 800420a:	b580      	push	{r7, lr}
 800420c:	b082      	sub	sp, #8
 800420e:	af00      	add	r7, sp, #0
 8004210:	6078      	str	r0, [r7, #4]
 8004212:	687b      	ldr	r3, [r7, #4]
 8004214:	2200      	movs	r2, #0
 8004216:	80da      	strh	r2, [r3, #6]
 8004218:	687b      	ldr	r3, [r7, #4]
 800421a:	2200      	movs	r2, #0
 800421c:	811a      	strh	r2, [r3, #8]
 800421e:	687b      	ldr	r3, [r7, #4]
 8004220:	2200      	movs	r2, #0
 8004222:	805a      	strh	r2, [r3, #2]
 8004224:	687b      	ldr	r3, [r7, #4]
 8004226:	68d8      	ldr	r0, [r3, #12]
 8004228:	687b      	ldr	r3, [r7, #4]
 800422a:	881b      	ldrh	r3, [r3, #0]
 800422c:	461a      	mov	r2, r3
 800422e:	2100      	movs	r1, #0
 8004230:	f000 f894 	bl	800435c <memsetl>
 8004234:	bf00      	nop
 8004236:	3708      	adds	r7, #8
 8004238:	46bd      	mov	sp, r7
 800423a:	bd80      	pop	{r7, pc}

0800423c <bufEnDat>:
 800423c:	b580      	push	{r7, lr}
 800423e:	b084      	sub	sp, #16
 8004240:	af00      	add	r7, sp, #0
 8004242:	6078      	str	r0, [r7, #4]
 8004244:	6039      	str	r1, [r7, #0]
 8004246:	b672      	cpsid	i
 8004248:	2300      	movs	r3, #0
 800424a:	73fb      	strb	r3, [r7, #15]
 800424c:	e021      	b.n	8004292 <bufEnDat+0x56>
 800424e:	7bfb      	ldrb	r3, [r7, #15]
 8004250:	683a      	ldr	r2, [r7, #0]
 8004252:	441a      	add	r2, r3
 8004254:	687b      	ldr	r3, [r7, #4]
 8004256:	68db      	ldr	r3, [r3, #12]
 8004258:	6879      	ldr	r1, [r7, #4]
 800425a:	88c9      	ldrh	r1, [r1, #6]
 800425c:	440b      	add	r3, r1
 800425e:	7812      	ldrb	r2, [r2, #0]
 8004260:	701a      	strb	r2, [r3, #0]
 8004262:	687b      	ldr	r3, [r7, #4]
 8004264:	88db      	ldrh	r3, [r3, #6]
 8004266:	3301      	adds	r3, #1
 8004268:	b29b      	uxth	r3, r3
 800426a:	b21a      	sxth	r2, r3
 800426c:	687b      	ldr	r3, [r7, #4]
 800426e:	881b      	ldrh	r3, [r3, #0]
 8004270:	3b01      	subs	r3, #1
 8004272:	b29b      	uxth	r3, r3
 8004274:	b21b      	sxth	r3, r3
 8004276:	4013      	ands	r3, r2
 8004278:	b21b      	sxth	r3, r3
 800427a:	b29a      	uxth	r2, r3
 800427c:	687b      	ldr	r3, [r7, #4]
 800427e:	80da      	strh	r2, [r3, #6]
 8004280:	687b      	ldr	r3, [r7, #4]
 8004282:	885b      	ldrh	r3, [r3, #2]
 8004284:	3301      	adds	r3, #1
 8004286:	b29a      	uxth	r2, r3
 8004288:	687b      	ldr	r3, [r7, #4]
 800428a:	805a      	strh	r2, [r3, #2]
 800428c:	7bfb      	ldrb	r3, [r7, #15]
 800428e:	3301      	adds	r3, #1
 8004290:	73fb      	strb	r3, [r7, #15]
 8004292:	687b      	ldr	r3, [r7, #4]
 8004294:	791b      	ldrb	r3, [r3, #4]
 8004296:	7bfa      	ldrb	r2, [r7, #15]
 8004298:	429a      	cmp	r2, r3
 800429a:	d3d8      	bcc.n	800424e <bufEnDat+0x12>
 800429c:	6878      	ldr	r0, [r7, #4]
 800429e:	f7ff ff8e 	bl	80041be <bufIsFull>
 80042a2:	4603      	mov	r3, r0
 80042a4:	2b00      	cmp	r3, #0
 80042a6:	d011      	beq.n	80042cc <bufEnDat+0x90>
 80042a8:	687b      	ldr	r3, [r7, #4]
 80042aa:	891a      	ldrh	r2, [r3, #8]
 80042ac:	687b      	ldr	r3, [r7, #4]
 80042ae:	791b      	ldrb	r3, [r3, #4]
 80042b0:	b29b      	uxth	r3, r3
 80042b2:	4413      	add	r3, r2
 80042b4:	b29b      	uxth	r3, r3
 80042b6:	b21a      	sxth	r2, r3
 80042b8:	687b      	ldr	r3, [r7, #4]
 80042ba:	881b      	ldrh	r3, [r3, #0]
 80042bc:	3b01      	subs	r3, #1
 80042be:	b29b      	uxth	r3, r3
 80042c0:	b21b      	sxth	r3, r3
 80042c2:	4013      	ands	r3, r2
 80042c4:	b21b      	sxth	r3, r3
 80042c6:	b29a      	uxth	r2, r3
 80042c8:	687b      	ldr	r3, [r7, #4]
 80042ca:	811a      	strh	r2, [r3, #8]
 80042cc:	b662      	cpsie	i
 80042ce:	2300      	movs	r3, #0
 80042d0:	4618      	mov	r0, r3
 80042d2:	3710      	adds	r7, #16
 80042d4:	46bd      	mov	sp, r7
 80042d6:	bd80      	pop	{r7, pc}

080042d8 <bufDeDat>:
 80042d8:	b580      	push	{r7, lr}
 80042da:	b084      	sub	sp, #16
 80042dc:	af00      	add	r7, sp, #0
 80042de:	6078      	str	r0, [r7, #4]
 80042e0:	6039      	str	r1, [r7, #0]
 80042e2:	b672      	cpsid	i
 80042e4:	6878      	ldr	r0, [r7, #4]
 80042e6:	f7ff ff7d 	bl	80041e4 <bufIsEmpty>
 80042ea:	4603      	mov	r3, r0
 80042ec:	2b00      	cmp	r3, #0
 80042ee:	d005      	beq.n	80042fc <bufDeDat+0x24>
 80042f0:	687b      	ldr	r3, [r7, #4]
 80042f2:	2200      	movs	r2, #0
 80042f4:	805a      	strh	r2, [r3, #2]
 80042f6:	b662      	cpsie	i
 80042f8:	2302      	movs	r3, #2
 80042fa:	e02b      	b.n	8004354 <bufDeDat+0x7c>
 80042fc:	2300      	movs	r3, #0
 80042fe:	73fb      	strb	r3, [r7, #15]
 8004300:	e021      	b.n	8004346 <bufDeDat+0x6e>
 8004302:	687b      	ldr	r3, [r7, #4]
 8004304:	68db      	ldr	r3, [r3, #12]
 8004306:	687a      	ldr	r2, [r7, #4]
 8004308:	8912      	ldrh	r2, [r2, #8]
 800430a:	441a      	add	r2, r3
 800430c:	7bfb      	ldrb	r3, [r7, #15]
 800430e:	6839      	ldr	r1, [r7, #0]
 8004310:	440b      	add	r3, r1
 8004312:	7812      	ldrb	r2, [r2, #0]
 8004314:	701a      	strb	r2, [r3, #0]
 8004316:	687b      	ldr	r3, [r7, #4]
 8004318:	891b      	ldrh	r3, [r3, #8]
 800431a:	3301      	adds	r3, #1
 800431c:	b29b      	uxth	r3, r3
 800431e:	b21a      	sxth	r2, r3
 8004320:	687b      	ldr	r3, [r7, #4]
 8004322:	881b      	ldrh	r3, [r3, #0]
 8004324:	3b01      	subs	r3, #1
 8004326:	b29b      	uxth	r3, r3
 8004328:	b21b      	sxth	r3, r3
 800432a:	4013      	ands	r3, r2
 800432c:	b21b      	sxth	r3, r3
 800432e:	b29a      	uxth	r2, r3
 8004330:	687b      	ldr	r3, [r7, #4]
 8004332:	811a      	strh	r2, [r3, #8]
 8004334:	687b      	ldr	r3, [r7, #4]
 8004336:	885b      	ldrh	r3, [r3, #2]
 8004338:	3b01      	subs	r3, #1
 800433a:	b29a      	uxth	r2, r3
 800433c:	687b      	ldr	r3, [r7, #4]
 800433e:	805a      	strh	r2, [r3, #2]
 8004340:	7bfb      	ldrb	r3, [r7, #15]
 8004342:	3301      	adds	r3, #1
 8004344:	73fb      	strb	r3, [r7, #15]
 8004346:	687b      	ldr	r3, [r7, #4]
 8004348:	791b      	ldrb	r3, [r3, #4]
 800434a:	7bfa      	ldrb	r2, [r7, #15]
 800434c:	429a      	cmp	r2, r3
 800434e:	d3d8      	bcc.n	8004302 <bufDeDat+0x2a>
 8004350:	b662      	cpsie	i
 8004352:	2300      	movs	r3, #0
 8004354:	4618      	mov	r0, r3
 8004356:	3710      	adds	r7, #16
 8004358:	46bd      	mov	sp, r7
 800435a:	bd80      	pop	{r7, pc}

0800435c <memsetl>:
 800435c:	b480      	push	{r7}
 800435e:	b083      	sub	sp, #12
 8004360:	af00      	add	r7, sp, #0
 8004362:	6078      	str	r0, [r7, #4]
 8004364:	460b      	mov	r3, r1
 8004366:	70fb      	strb	r3, [r7, #3]
 8004368:	4613      	mov	r3, r2
 800436a:	803b      	strh	r3, [r7, #0]
 800436c:	e004      	b.n	8004378 <memsetl+0x1c>
 800436e:	687b      	ldr	r3, [r7, #4]
 8004370:	1c5a      	adds	r2, r3, #1
 8004372:	607a      	str	r2, [r7, #4]
 8004374:	78fa      	ldrb	r2, [r7, #3]
 8004376:	701a      	strb	r2, [r3, #0]
 8004378:	883b      	ldrh	r3, [r7, #0]
 800437a:	1e5a      	subs	r2, r3, #1
 800437c:	803a      	strh	r2, [r7, #0]
 800437e:	2b00      	cmp	r3, #0
 8004380:	d1f5      	bne.n	800436e <memsetl+0x12>
 8004382:	bf00      	nop
 8004384:	370c      	adds	r7, #12
 8004386:	46bd      	mov	sp, r7
 8004388:	f85d 7b04 	ldr.w	r7, [sp], #4
 800438c:	4770      	bx	lr

0800438e <USART_ReceiveData>:
 800438e:	b480      	push	{r7}
 8004390:	b083      	sub	sp, #12
 8004392:	af00      	add	r7, sp, #0
 8004394:	6078      	str	r0, [r7, #4]
 8004396:	687b      	ldr	r3, [r7, #4]
 8004398:	889b      	ldrh	r3, [r3, #4]
 800439a:	b29b      	uxth	r3, r3
 800439c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80043a0:	b29b      	uxth	r3, r3
 80043a2:	4618      	mov	r0, r3
 80043a4:	370c      	adds	r7, #12
 80043a6:	46bd      	mov	sp, r7
 80043a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043ac:	4770      	bx	lr

080043ae <USART_GetITStatus>:
 80043ae:	b480      	push	{r7}
 80043b0:	b087      	sub	sp, #28
 80043b2:	af00      	add	r7, sp, #0
 80043b4:	6078      	str	r0, [r7, #4]
 80043b6:	460b      	mov	r3, r1
 80043b8:	807b      	strh	r3, [r7, #2]
 80043ba:	2300      	movs	r3, #0
 80043bc:	60fb      	str	r3, [r7, #12]
 80043be:	2300      	movs	r3, #0
 80043c0:	617b      	str	r3, [r7, #20]
 80043c2:	2300      	movs	r3, #0
 80043c4:	60bb      	str	r3, [r7, #8]
 80043c6:	2300      	movs	r3, #0
 80043c8:	74fb      	strb	r3, [r7, #19]
 80043ca:	887b      	ldrh	r3, [r7, #2]
 80043cc:	b2db      	uxtb	r3, r3
 80043ce:	095b      	lsrs	r3, r3, #5
 80043d0:	b2db      	uxtb	r3, r3
 80043d2:	60bb      	str	r3, [r7, #8]
 80043d4:	887b      	ldrh	r3, [r7, #2]
 80043d6:	f003 031f 	and.w	r3, r3, #31
 80043da:	617b      	str	r3, [r7, #20]
 80043dc:	2201      	movs	r2, #1
 80043de:	697b      	ldr	r3, [r7, #20]
 80043e0:	fa02 f303 	lsl.w	r3, r2, r3
 80043e4:	617b      	str	r3, [r7, #20]
 80043e6:	68bb      	ldr	r3, [r7, #8]
 80043e8:	2b01      	cmp	r3, #1
 80043ea:	d107      	bne.n	80043fc <USART_GetITStatus+0x4e>
 80043ec:	687b      	ldr	r3, [r7, #4]
 80043ee:	899b      	ldrh	r3, [r3, #12]
 80043f0:	b29b      	uxth	r3, r3
 80043f2:	461a      	mov	r2, r3
 80043f4:	697b      	ldr	r3, [r7, #20]
 80043f6:	4013      	ands	r3, r2
 80043f8:	617b      	str	r3, [r7, #20]
 80043fa:	e011      	b.n	8004420 <USART_GetITStatus+0x72>
 80043fc:	68bb      	ldr	r3, [r7, #8]
 80043fe:	2b02      	cmp	r3, #2
 8004400:	d107      	bne.n	8004412 <USART_GetITStatus+0x64>
 8004402:	687b      	ldr	r3, [r7, #4]
 8004404:	8a1b      	ldrh	r3, [r3, #16]
 8004406:	b29b      	uxth	r3, r3
 8004408:	461a      	mov	r2, r3
 800440a:	697b      	ldr	r3, [r7, #20]
 800440c:	4013      	ands	r3, r2
 800440e:	617b      	str	r3, [r7, #20]
 8004410:	e006      	b.n	8004420 <USART_GetITStatus+0x72>
 8004412:	687b      	ldr	r3, [r7, #4]
 8004414:	8a9b      	ldrh	r3, [r3, #20]
 8004416:	b29b      	uxth	r3, r3
 8004418:	461a      	mov	r2, r3
 800441a:	697b      	ldr	r3, [r7, #20]
 800441c:	4013      	ands	r3, r2
 800441e:	617b      	str	r3, [r7, #20]
 8004420:	887b      	ldrh	r3, [r7, #2]
 8004422:	0a1b      	lsrs	r3, r3, #8
 8004424:	b29b      	uxth	r3, r3
 8004426:	60fb      	str	r3, [r7, #12]
 8004428:	2201      	movs	r2, #1
 800442a:	68fb      	ldr	r3, [r7, #12]
 800442c:	fa02 f303 	lsl.w	r3, r2, r3
 8004430:	60fb      	str	r3, [r7, #12]
 8004432:	687b      	ldr	r3, [r7, #4]
 8004434:	881b      	ldrh	r3, [r3, #0]
 8004436:	b29b      	uxth	r3, r3
 8004438:	461a      	mov	r2, r3
 800443a:	68fb      	ldr	r3, [r7, #12]
 800443c:	4013      	ands	r3, r2
 800443e:	60fb      	str	r3, [r7, #12]
 8004440:	697b      	ldr	r3, [r7, #20]
 8004442:	2b00      	cmp	r3, #0
 8004444:	d005      	beq.n	8004452 <USART_GetITStatus+0xa4>
 8004446:	68fb      	ldr	r3, [r7, #12]
 8004448:	2b00      	cmp	r3, #0
 800444a:	d002      	beq.n	8004452 <USART_GetITStatus+0xa4>
 800444c:	2301      	movs	r3, #1
 800444e:	74fb      	strb	r3, [r7, #19]
 8004450:	e001      	b.n	8004456 <USART_GetITStatus+0xa8>
 8004452:	2300      	movs	r3, #0
 8004454:	74fb      	strb	r3, [r7, #19]
 8004456:	7cfb      	ldrb	r3, [r7, #19]
 8004458:	4618      	mov	r0, r3
 800445a:	371c      	adds	r7, #28
 800445c:	46bd      	mov	sp, r7
 800445e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004462:	4770      	bx	lr

08004464 <USART_ClearITPendingBit>:
 8004464:	b480      	push	{r7}
 8004466:	b085      	sub	sp, #20
 8004468:	af00      	add	r7, sp, #0
 800446a:	6078      	str	r0, [r7, #4]
 800446c:	460b      	mov	r3, r1
 800446e:	807b      	strh	r3, [r7, #2]
 8004470:	2300      	movs	r3, #0
 8004472:	81fb      	strh	r3, [r7, #14]
 8004474:	2300      	movs	r3, #0
 8004476:	81bb      	strh	r3, [r7, #12]
 8004478:	887b      	ldrh	r3, [r7, #2]
 800447a:	0a1b      	lsrs	r3, r3, #8
 800447c:	81fb      	strh	r3, [r7, #14]
 800447e:	89fb      	ldrh	r3, [r7, #14]
 8004480:	2201      	movs	r2, #1
 8004482:	fa02 f303 	lsl.w	r3, r2, r3
 8004486:	81bb      	strh	r3, [r7, #12]
 8004488:	89bb      	ldrh	r3, [r7, #12]
 800448a:	43db      	mvns	r3, r3
 800448c:	b29a      	uxth	r2, r3
 800448e:	687b      	ldr	r3, [r7, #4]
 8004490:	801a      	strh	r2, [r3, #0]
 8004492:	bf00      	nop
 8004494:	3714      	adds	r7, #20
 8004496:	46bd      	mov	sp, r7
 8004498:	f85d 7b04 	ldr.w	r7, [sp], #4
 800449c:	4770      	bx	lr

0800449e <ucg_clip_is_x_visible>:
 800449e:	b480      	push	{r7}
 80044a0:	b085      	sub	sp, #20
 80044a2:	af00      	add	r7, sp, #0
 80044a4:	6078      	str	r0, [r7, #4]
 80044a6:	687b      	ldr	r3, [r7, #4]
 80044a8:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 80044aa:	81fb      	strh	r3, [r7, #14]
 80044ac:	89fa      	ldrh	r2, [r7, #14]
 80044ae:	687b      	ldr	r3, [r7, #4]
 80044b0:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 80044b4:	b29b      	uxth	r3, r3
 80044b6:	1ad3      	subs	r3, r2, r3
 80044b8:	b29b      	uxth	r3, r3
 80044ba:	81fb      	strh	r3, [r7, #14]
 80044bc:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80044c0:	2b00      	cmp	r3, #0
 80044c2:	da01      	bge.n	80044c8 <ucg_clip_is_x_visible+0x2a>
 80044c4:	2300      	movs	r3, #0
 80044c6:	e009      	b.n	80044dc <ucg_clip_is_x_visible+0x3e>
 80044c8:	687b      	ldr	r3, [r7, #4]
 80044ca:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	; 0x74
 80044ce:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 80044d2:	429a      	cmp	r2, r3
 80044d4:	db01      	blt.n	80044da <ucg_clip_is_x_visible+0x3c>
 80044d6:	2300      	movs	r3, #0
 80044d8:	e000      	b.n	80044dc <ucg_clip_is_x_visible+0x3e>
 80044da:	2301      	movs	r3, #1
 80044dc:	4618      	mov	r0, r3
 80044de:	3714      	adds	r7, #20
 80044e0:	46bd      	mov	sp, r7
 80044e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044e6:	4770      	bx	lr

080044e8 <ucg_clip_is_y_visible>:
 80044e8:	b480      	push	{r7}
 80044ea:	b085      	sub	sp, #20
 80044ec:	af00      	add	r7, sp, #0
 80044ee:	6078      	str	r0, [r7, #4]
 80044f0:	687b      	ldr	r3, [r7, #4]
 80044f2:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80044f4:	81fb      	strh	r3, [r7, #14]
 80044f6:	89fa      	ldrh	r2, [r7, #14]
 80044f8:	687b      	ldr	r3, [r7, #4]
 80044fa:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	; 0x72
 80044fe:	b29b      	uxth	r3, r3
 8004500:	1ad3      	subs	r3, r2, r3
 8004502:	b29b      	uxth	r3, r3
 8004504:	81fb      	strh	r3, [r7, #14]
 8004506:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800450a:	2b00      	cmp	r3, #0
 800450c:	da01      	bge.n	8004512 <ucg_clip_is_y_visible+0x2a>
 800450e:	2300      	movs	r3, #0
 8004510:	e009      	b.n	8004526 <ucg_clip_is_y_visible+0x3e>
 8004512:	687b      	ldr	r3, [r7, #4]
 8004514:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	; 0x76
 8004518:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 800451c:	429a      	cmp	r2, r3
 800451e:	db01      	blt.n	8004524 <ucg_clip_is_y_visible+0x3c>
 8004520:	2300      	movs	r3, #0
 8004522:	e000      	b.n	8004526 <ucg_clip_is_y_visible+0x3e>
 8004524:	2301      	movs	r3, #1
 8004526:	4618      	mov	r0, r3
 8004528:	3714      	adds	r7, #20
 800452a:	46bd      	mov	sp, r7
 800452c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004530:	4770      	bx	lr

08004532 <ucg_clip_intersection>:
 8004532:	b480      	push	{r7}
 8004534:	b087      	sub	sp, #28
 8004536:	af00      	add	r7, sp, #0
 8004538:	60f8      	str	r0, [r7, #12]
 800453a:	60b9      	str	r1, [r7, #8]
 800453c:	4611      	mov	r1, r2
 800453e:	461a      	mov	r2, r3
 8004540:	460b      	mov	r3, r1
 8004542:	80fb      	strh	r3, [r7, #6]
 8004544:	4613      	mov	r3, r2
 8004546:	80bb      	strh	r3, [r7, #4]
 8004548:	68fb      	ldr	r3, [r7, #12]
 800454a:	881b      	ldrh	r3, [r3, #0]
 800454c:	82fb      	strh	r3, [r7, #22]
 800454e:	68bb      	ldr	r3, [r7, #8]
 8004550:	881b      	ldrh	r3, [r3, #0]
 8004552:	82bb      	strh	r3, [r7, #20]
 8004554:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 8004558:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 800455c:	429a      	cmp	r2, r3
 800455e:	db01      	blt.n	8004564 <ucg_clip_intersection+0x32>
 8004560:	2300      	movs	r3, #0
 8004562:	e01a      	b.n	800459a <ucg_clip_intersection+0x68>
 8004564:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 8004568:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800456c:	429a      	cmp	r2, r3
 800456e:	dc01      	bgt.n	8004574 <ucg_clip_intersection+0x42>
 8004570:	2300      	movs	r3, #0
 8004572:	e012      	b.n	800459a <ucg_clip_intersection+0x68>
 8004574:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 8004578:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800457c:	429a      	cmp	r2, r3
 800457e:	da02      	bge.n	8004586 <ucg_clip_intersection+0x54>
 8004580:	68fb      	ldr	r3, [r7, #12]
 8004582:	88fa      	ldrh	r2, [r7, #6]
 8004584:	801a      	strh	r2, [r3, #0]
 8004586:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 800458a:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 800458e:	429a      	cmp	r2, r3
 8004590:	dd02      	ble.n	8004598 <ucg_clip_intersection+0x66>
 8004592:	68bb      	ldr	r3, [r7, #8]
 8004594:	88ba      	ldrh	r2, [r7, #4]
 8004596:	801a      	strh	r2, [r3, #0]
 8004598:	2301      	movs	r3, #1
 800459a:	4618      	mov	r0, r3
 800459c:	371c      	adds	r7, #28
 800459e:	46bd      	mov	sp, r7
 80045a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045a4:	4770      	bx	lr

080045a6 <ucg_clip_is_pixel_visible>:
 80045a6:	b580      	push	{r7, lr}
 80045a8:	b082      	sub	sp, #8
 80045aa:	af00      	add	r7, sp, #0
 80045ac:	6078      	str	r0, [r7, #4]
 80045ae:	6878      	ldr	r0, [r7, #4]
 80045b0:	f7ff ff75 	bl	800449e <ucg_clip_is_x_visible>
 80045b4:	4603      	mov	r3, r0
 80045b6:	2b00      	cmp	r3, #0
 80045b8:	d101      	bne.n	80045be <ucg_clip_is_pixel_visible+0x18>
 80045ba:	2300      	movs	r3, #0
 80045bc:	e008      	b.n	80045d0 <ucg_clip_is_pixel_visible+0x2a>
 80045be:	6878      	ldr	r0, [r7, #4]
 80045c0:	f7ff ff92 	bl	80044e8 <ucg_clip_is_y_visible>
 80045c4:	4603      	mov	r3, r0
 80045c6:	2b00      	cmp	r3, #0
 80045c8:	d101      	bne.n	80045ce <ucg_clip_is_pixel_visible+0x28>
 80045ca:	2300      	movs	r3, #0
 80045cc:	e000      	b.n	80045d0 <ucg_clip_is_pixel_visible+0x2a>
 80045ce:	2301      	movs	r3, #1
 80045d0:	4618      	mov	r0, r3
 80045d2:	3708      	adds	r7, #8
 80045d4:	46bd      	mov	sp, r7
 80045d6:	bd80      	pop	{r7, pc}

080045d8 <ucg_clip_l90fx>:
 80045d8:	b590      	push	{r4, r7, lr}
 80045da:	b085      	sub	sp, #20
 80045dc:	af00      	add	r7, sp, #0
 80045de:	6078      	str	r0, [r7, #4]
 80045e0:	687b      	ldr	r3, [r7, #4]
 80045e2:	2200      	movs	r2, #0
 80045e4:	861a      	strh	r2, [r3, #48]	; 0x30
 80045e6:	687b      	ldr	r3, [r7, #4]
 80045e8:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 80045ec:	2b03      	cmp	r3, #3
 80045ee:	f200 816d 	bhi.w	80048cc <ucg_clip_l90fx+0x2f4>
 80045f2:	a201      	add	r2, pc, #4	; (adr r2, 80045f8 <ucg_clip_l90fx+0x20>)
 80045f4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80045f8:	08004609 	.word	0x08004609
 80045fc:	080046af 	.word	0x080046af
 8004600:	08004755 	.word	0x08004755
 8004604:	08004811 	.word	0x08004811
 8004608:	6878      	ldr	r0, [r7, #4]
 800460a:	f7ff ff6d 	bl	80044e8 <ucg_clip_is_y_visible>
 800460e:	4603      	mov	r3, r0
 8004610:	2b00      	cmp	r3, #0
 8004612:	d101      	bne.n	8004618 <ucg_clip_l90fx+0x40>
 8004614:	2300      	movs	r3, #0
 8004616:	e15a      	b.n	80048ce <ucg_clip_l90fx+0x2f6>
 8004618:	687b      	ldr	r3, [r7, #4]
 800461a:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 800461e:	81fb      	strh	r3, [r7, #14]
 8004620:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004624:	81bb      	strh	r3, [r7, #12]
 8004626:	687b      	ldr	r3, [r7, #4]
 8004628:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 800462c:	b29a      	uxth	r2, r3
 800462e:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004632:	b29b      	uxth	r3, r3
 8004634:	4413      	add	r3, r2
 8004636:	b29b      	uxth	r3, r3
 8004638:	b21b      	sxth	r3, r3
 800463a:	81bb      	strh	r3, [r7, #12]
 800463c:	687b      	ldr	r3, [r7, #4]
 800463e:	f9b3 4070 	ldrsh.w	r4, [r3, #112]	; 0x70
 8004642:	687b      	ldr	r3, [r7, #4]
 8004644:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 8004648:	b29a      	uxth	r2, r3
 800464a:	687b      	ldr	r3, [r7, #4]
 800464c:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	; 0x74
 8004650:	b29b      	uxth	r3, r3
 8004652:	4413      	add	r3, r2
 8004654:	b29b      	uxth	r3, r3
 8004656:	b21b      	sxth	r3, r3
 8004658:	f107 010c 	add.w	r1, r7, #12
 800465c:	f107 000e 	add.w	r0, r7, #14
 8004660:	4622      	mov	r2, r4
 8004662:	f7ff ff66 	bl	8004532 <ucg_clip_intersection>
 8004666:	4603      	mov	r3, r0
 8004668:	2b00      	cmp	r3, #0
 800466a:	d101      	bne.n	8004670 <ucg_clip_l90fx+0x98>
 800466c:	2300      	movs	r3, #0
 800466e:	e12e      	b.n	80048ce <ucg_clip_l90fx+0x2f6>
 8004670:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004674:	b29a      	uxth	r2, r3
 8004676:	687b      	ldr	r3, [r7, #4]
 8004678:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 800467c:	b29b      	uxth	r3, r3
 800467e:	1ad3      	subs	r3, r2, r3
 8004680:	b29b      	uxth	r3, r3
 8004682:	b21a      	sxth	r2, r3
 8004684:	687b      	ldr	r3, [r7, #4]
 8004686:	861a      	strh	r2, [r3, #48]	; 0x30
 8004688:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 800468c:	687b      	ldr	r3, [r7, #4]
 800468e:	849a      	strh	r2, [r3, #36]	; 0x24
 8004690:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004694:	b29a      	uxth	r2, r3
 8004696:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800469a:	b29b      	uxth	r3, r3
 800469c:	1ad3      	subs	r3, r2, r3
 800469e:	b29b      	uxth	r3, r3
 80046a0:	b21b      	sxth	r3, r3
 80046a2:	81bb      	strh	r3, [r7, #12]
 80046a4:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 80046a8:	687b      	ldr	r3, [r7, #4]
 80046aa:	859a      	strh	r2, [r3, #44]	; 0x2c
 80046ac:	e10e      	b.n	80048cc <ucg_clip_l90fx+0x2f4>
 80046ae:	6878      	ldr	r0, [r7, #4]
 80046b0:	f7ff fef5 	bl	800449e <ucg_clip_is_x_visible>
 80046b4:	4603      	mov	r3, r0
 80046b6:	2b00      	cmp	r3, #0
 80046b8:	d101      	bne.n	80046be <ucg_clip_l90fx+0xe6>
 80046ba:	2300      	movs	r3, #0
 80046bc:	e107      	b.n	80048ce <ucg_clip_l90fx+0x2f6>
 80046be:	687b      	ldr	r3, [r7, #4]
 80046c0:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 80046c4:	81fb      	strh	r3, [r7, #14]
 80046c6:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80046ca:	81bb      	strh	r3, [r7, #12]
 80046cc:	687b      	ldr	r3, [r7, #4]
 80046ce:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 80046d2:	b29a      	uxth	r2, r3
 80046d4:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80046d8:	b29b      	uxth	r3, r3
 80046da:	4413      	add	r3, r2
 80046dc:	b29b      	uxth	r3, r3
 80046de:	b21b      	sxth	r3, r3
 80046e0:	81bb      	strh	r3, [r7, #12]
 80046e2:	687b      	ldr	r3, [r7, #4]
 80046e4:	f9b3 4072 	ldrsh.w	r4, [r3, #114]	; 0x72
 80046e8:	687b      	ldr	r3, [r7, #4]
 80046ea:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	; 0x72
 80046ee:	b29a      	uxth	r2, r3
 80046f0:	687b      	ldr	r3, [r7, #4]
 80046f2:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	; 0x76
 80046f6:	b29b      	uxth	r3, r3
 80046f8:	4413      	add	r3, r2
 80046fa:	b29b      	uxth	r3, r3
 80046fc:	b21b      	sxth	r3, r3
 80046fe:	f107 010c 	add.w	r1, r7, #12
 8004702:	f107 000e 	add.w	r0, r7, #14
 8004706:	4622      	mov	r2, r4
 8004708:	f7ff ff13 	bl	8004532 <ucg_clip_intersection>
 800470c:	4603      	mov	r3, r0
 800470e:	2b00      	cmp	r3, #0
 8004710:	d101      	bne.n	8004716 <ucg_clip_l90fx+0x13e>
 8004712:	2300      	movs	r3, #0
 8004714:	e0db      	b.n	80048ce <ucg_clip_l90fx+0x2f6>
 8004716:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800471a:	b29a      	uxth	r2, r3
 800471c:	687b      	ldr	r3, [r7, #4]
 800471e:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8004722:	b29b      	uxth	r3, r3
 8004724:	1ad3      	subs	r3, r2, r3
 8004726:	b29b      	uxth	r3, r3
 8004728:	b21a      	sxth	r2, r3
 800472a:	687b      	ldr	r3, [r7, #4]
 800472c:	861a      	strh	r2, [r3, #48]	; 0x30
 800472e:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8004732:	687b      	ldr	r3, [r7, #4]
 8004734:	84da      	strh	r2, [r3, #38]	; 0x26
 8004736:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800473a:	b29a      	uxth	r2, r3
 800473c:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004740:	b29b      	uxth	r3, r3
 8004742:	1ad3      	subs	r3, r2, r3
 8004744:	b29b      	uxth	r3, r3
 8004746:	b21b      	sxth	r3, r3
 8004748:	81bb      	strh	r3, [r7, #12]
 800474a:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 800474e:	687b      	ldr	r3, [r7, #4]
 8004750:	859a      	strh	r2, [r3, #44]	; 0x2c
 8004752:	e0bb      	b.n	80048cc <ucg_clip_l90fx+0x2f4>
 8004754:	6878      	ldr	r0, [r7, #4]
 8004756:	f7ff fec7 	bl	80044e8 <ucg_clip_is_y_visible>
 800475a:	4603      	mov	r3, r0
 800475c:	2b00      	cmp	r3, #0
 800475e:	d101      	bne.n	8004764 <ucg_clip_l90fx+0x18c>
 8004760:	2300      	movs	r3, #0
 8004762:	e0b4      	b.n	80048ce <ucg_clip_l90fx+0x2f6>
 8004764:	687b      	ldr	r3, [r7, #4]
 8004766:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 800476a:	81bb      	strh	r3, [r7, #12]
 800476c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004770:	b29b      	uxth	r3, r3
 8004772:	3301      	adds	r3, #1
 8004774:	b29b      	uxth	r3, r3
 8004776:	b21b      	sxth	r3, r3
 8004778:	81bb      	strh	r3, [r7, #12]
 800477a:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800477e:	81fb      	strh	r3, [r7, #14]
 8004780:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004784:	b29a      	uxth	r2, r3
 8004786:	687b      	ldr	r3, [r7, #4]
 8004788:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 800478c:	b29b      	uxth	r3, r3
 800478e:	1ad3      	subs	r3, r2, r3
 8004790:	b29b      	uxth	r3, r3
 8004792:	b21b      	sxth	r3, r3
 8004794:	81fb      	strh	r3, [r7, #14]
 8004796:	687b      	ldr	r3, [r7, #4]
 8004798:	f9b3 4070 	ldrsh.w	r4, [r3, #112]	; 0x70
 800479c:	687b      	ldr	r3, [r7, #4]
 800479e:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 80047a2:	b29a      	uxth	r2, r3
 80047a4:	687b      	ldr	r3, [r7, #4]
 80047a6:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	; 0x74
 80047aa:	b29b      	uxth	r3, r3
 80047ac:	4413      	add	r3, r2
 80047ae:	b29b      	uxth	r3, r3
 80047b0:	b21b      	sxth	r3, r3
 80047b2:	f107 010c 	add.w	r1, r7, #12
 80047b6:	f107 000e 	add.w	r0, r7, #14
 80047ba:	4622      	mov	r2, r4
 80047bc:	f7ff feb9 	bl	8004532 <ucg_clip_intersection>
 80047c0:	4603      	mov	r3, r0
 80047c2:	2b00      	cmp	r3, #0
 80047c4:	d101      	bne.n	80047ca <ucg_clip_l90fx+0x1f2>
 80047c6:	2300      	movs	r3, #0
 80047c8:	e081      	b.n	80048ce <ucg_clip_l90fx+0x2f6>
 80047ca:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80047ce:	b29a      	uxth	r2, r3
 80047d0:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80047d4:	b29b      	uxth	r3, r3
 80047d6:	1ad3      	subs	r3, r2, r3
 80047d8:	b29b      	uxth	r3, r3
 80047da:	b21a      	sxth	r2, r3
 80047dc:	687b      	ldr	r3, [r7, #4]
 80047de:	859a      	strh	r2, [r3, #44]	; 0x2c
 80047e0:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80047e4:	b29b      	uxth	r3, r3
 80047e6:	3b01      	subs	r3, #1
 80047e8:	b29b      	uxth	r3, r3
 80047ea:	b21b      	sxth	r3, r3
 80047ec:	81bb      	strh	r3, [r7, #12]
 80047ee:	687b      	ldr	r3, [r7, #4]
 80047f0:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 80047f4:	b29a      	uxth	r2, r3
 80047f6:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80047fa:	b29b      	uxth	r3, r3
 80047fc:	1ad3      	subs	r3, r2, r3
 80047fe:	b29b      	uxth	r3, r3
 8004800:	b21a      	sxth	r2, r3
 8004802:	687b      	ldr	r3, [r7, #4]
 8004804:	861a      	strh	r2, [r3, #48]	; 0x30
 8004806:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 800480a:	687b      	ldr	r3, [r7, #4]
 800480c:	849a      	strh	r2, [r3, #36]	; 0x24
 800480e:	e05d      	b.n	80048cc <ucg_clip_l90fx+0x2f4>
 8004810:	6878      	ldr	r0, [r7, #4]
 8004812:	f7ff fe44 	bl	800449e <ucg_clip_is_x_visible>
 8004816:	4603      	mov	r3, r0
 8004818:	2b00      	cmp	r3, #0
 800481a:	d101      	bne.n	8004820 <ucg_clip_l90fx+0x248>
 800481c:	2300      	movs	r3, #0
 800481e:	e056      	b.n	80048ce <ucg_clip_l90fx+0x2f6>
 8004820:	687b      	ldr	r3, [r7, #4]
 8004822:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8004826:	81bb      	strh	r3, [r7, #12]
 8004828:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800482c:	b29b      	uxth	r3, r3
 800482e:	3301      	adds	r3, #1
 8004830:	b29b      	uxth	r3, r3
 8004832:	b21b      	sxth	r3, r3
 8004834:	81bb      	strh	r3, [r7, #12]
 8004836:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800483a:	81fb      	strh	r3, [r7, #14]
 800483c:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004840:	b29a      	uxth	r2, r3
 8004842:	687b      	ldr	r3, [r7, #4]
 8004844:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8004848:	b29b      	uxth	r3, r3
 800484a:	1ad3      	subs	r3, r2, r3
 800484c:	b29b      	uxth	r3, r3
 800484e:	b21b      	sxth	r3, r3
 8004850:	81fb      	strh	r3, [r7, #14]
 8004852:	687b      	ldr	r3, [r7, #4]
 8004854:	f9b3 4072 	ldrsh.w	r4, [r3, #114]	; 0x72
 8004858:	687b      	ldr	r3, [r7, #4]
 800485a:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	; 0x72
 800485e:	b29a      	uxth	r2, r3
 8004860:	687b      	ldr	r3, [r7, #4]
 8004862:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	; 0x76
 8004866:	b29b      	uxth	r3, r3
 8004868:	4413      	add	r3, r2
 800486a:	b29b      	uxth	r3, r3
 800486c:	b21b      	sxth	r3, r3
 800486e:	f107 010c 	add.w	r1, r7, #12
 8004872:	f107 000e 	add.w	r0, r7, #14
 8004876:	4622      	mov	r2, r4
 8004878:	f7ff fe5b 	bl	8004532 <ucg_clip_intersection>
 800487c:	4603      	mov	r3, r0
 800487e:	2b00      	cmp	r3, #0
 8004880:	d101      	bne.n	8004886 <ucg_clip_l90fx+0x2ae>
 8004882:	2300      	movs	r3, #0
 8004884:	e023      	b.n	80048ce <ucg_clip_l90fx+0x2f6>
 8004886:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800488a:	b29a      	uxth	r2, r3
 800488c:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004890:	b29b      	uxth	r3, r3
 8004892:	1ad3      	subs	r3, r2, r3
 8004894:	b29b      	uxth	r3, r3
 8004896:	b21a      	sxth	r2, r3
 8004898:	687b      	ldr	r3, [r7, #4]
 800489a:	859a      	strh	r2, [r3, #44]	; 0x2c
 800489c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80048a0:	b29b      	uxth	r3, r3
 80048a2:	3b01      	subs	r3, #1
 80048a4:	b29b      	uxth	r3, r3
 80048a6:	b21b      	sxth	r3, r3
 80048a8:	81bb      	strh	r3, [r7, #12]
 80048aa:	687b      	ldr	r3, [r7, #4]
 80048ac:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 80048b0:	b29a      	uxth	r2, r3
 80048b2:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80048b6:	b29b      	uxth	r3, r3
 80048b8:	1ad3      	subs	r3, r2, r3
 80048ba:	b29b      	uxth	r3, r3
 80048bc:	b21a      	sxth	r2, r3
 80048be:	687b      	ldr	r3, [r7, #4]
 80048c0:	861a      	strh	r2, [r3, #48]	; 0x30
 80048c2:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 80048c6:	687b      	ldr	r3, [r7, #4]
 80048c8:	84da      	strh	r2, [r3, #38]	; 0x26
 80048ca:	bf00      	nop
 80048cc:	2301      	movs	r3, #1
 80048ce:	4618      	mov	r0, r3
 80048d0:	3714      	adds	r7, #20
 80048d2:	46bd      	mov	sp, r7
 80048d4:	bd90      	pop	{r4, r7, pc}
 80048d6:	bf00      	nop

080048d8 <ucg_clip_l90se>:
 80048d8:	b580      	push	{r7, lr}
 80048da:	b084      	sub	sp, #16
 80048dc:	af00      	add	r7, sp, #0
 80048de:	6078      	str	r0, [r7, #4]
 80048e0:	6878      	ldr	r0, [r7, #4]
 80048e2:	f7ff fe79 	bl	80045d8 <ucg_clip_l90fx>
 80048e6:	4603      	mov	r3, r0
 80048e8:	2b00      	cmp	r3, #0
 80048ea:	d101      	bne.n	80048f0 <ucg_clip_l90se+0x18>
 80048ec:	2300      	movs	r3, #0
 80048ee:	e019      	b.n	8004924 <ucg_clip_l90se+0x4c>
 80048f0:	2300      	movs	r3, #0
 80048f2:	73fb      	strb	r3, [r7, #15]
 80048f4:	e012      	b.n	800491c <ucg_clip_l90se+0x44>
 80048f6:	687b      	ldr	r3, [r7, #4]
 80048f8:	f103 0146 	add.w	r1, r3, #70	; 0x46
 80048fc:	7bfa      	ldrb	r2, [r7, #15]
 80048fe:	4613      	mov	r3, r2
 8004900:	00db      	lsls	r3, r3, #3
 8004902:	1a9b      	subs	r3, r3, r2
 8004904:	005b      	lsls	r3, r3, #1
 8004906:	18ca      	adds	r2, r1, r3
 8004908:	687b      	ldr	r3, [r7, #4]
 800490a:	f9b3 3030 	ldrsh.w	r3, [r3, #48]	; 0x30
 800490e:	4619      	mov	r1, r3
 8004910:	4610      	mov	r0, r2
 8004912:	f7fe f9e8 	bl	8002ce6 <ucg_ccs_seek>
 8004916:	7bfb      	ldrb	r3, [r7, #15]
 8004918:	3301      	adds	r3, #1
 800491a:	73fb      	strb	r3, [r7, #15]
 800491c:	7bfb      	ldrb	r3, [r7, #15]
 800491e:	2b02      	cmp	r3, #2
 8004920:	d9e9      	bls.n	80048f6 <ucg_clip_l90se+0x1e>
 8004922:	2301      	movs	r3, #1
 8004924:	4618      	mov	r0, r3
 8004926:	3710      	adds	r7, #16
 8004928:	46bd      	mov	sp, r7
 800492a:	bd80      	pop	{r7, pc}

0800492c <ucg_com_PowerDown>:
 800492c:	b590      	push	{r4, r7, lr}
 800492e:	b083      	sub	sp, #12
 8004930:	af00      	add	r7, sp, #0
 8004932:	6078      	str	r0, [r7, #4]
 8004934:	687b      	ldr	r3, [r7, #4]
 8004936:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 800493a:	f003 0308 	and.w	r3, r3, #8
 800493e:	2b00      	cmp	r3, #0
 8004940:	d006      	beq.n	8004950 <ucg_com_PowerDown+0x24>
 8004942:	687b      	ldr	r3, [r7, #4]
 8004944:	69dc      	ldr	r4, [r3, #28]
 8004946:	2300      	movs	r3, #0
 8004948:	2200      	movs	r2, #0
 800494a:	210b      	movs	r1, #11
 800494c:	6878      	ldr	r0, [r7, #4]
 800494e:	47a0      	blx	r4
 8004950:	687b      	ldr	r3, [r7, #4]
 8004952:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8004956:	f023 0308 	bic.w	r3, r3, #8
 800495a:	b2da      	uxtb	r2, r3
 800495c:	687b      	ldr	r3, [r7, #4]
 800495e:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8004962:	bf00      	nop
 8004964:	370c      	adds	r7, #12
 8004966:	46bd      	mov	sp, r7
 8004968:	bd90      	pop	{r4, r7, pc}

0800496a <ucg_com_PowerUp>:
 800496a:	b590      	push	{r4, r7, lr}
 800496c:	b085      	sub	sp, #20
 800496e:	af00      	add	r7, sp, #0
 8004970:	6078      	str	r0, [r7, #4]
 8004972:	460b      	mov	r3, r1
 8004974:	807b      	strh	r3, [r7, #2]
 8004976:	4613      	mov	r3, r2
 8004978:	803b      	strh	r3, [r7, #0]
 800497a:	887b      	ldrh	r3, [r7, #2]
 800497c:	813b      	strh	r3, [r7, #8]
 800497e:	883b      	ldrh	r3, [r7, #0]
 8004980:	817b      	strh	r3, [r7, #10]
 8004982:	6878      	ldr	r0, [r7, #4]
 8004984:	f7ff ffd2 	bl	800492c <ucg_com_PowerDown>
 8004988:	687b      	ldr	r3, [r7, #4]
 800498a:	2200      	movs	r2, #0
 800498c:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8004990:	687b      	ldr	r3, [r7, #4]
 8004992:	69dc      	ldr	r4, [r3, #28]
 8004994:	f107 0308 	add.w	r3, r7, #8
 8004998:	2200      	movs	r2, #0
 800499a:	210a      	movs	r1, #10
 800499c:	6878      	ldr	r0, [r7, #4]
 800499e:	47a0      	blx	r4
 80049a0:	4603      	mov	r3, r0
 80049a2:	81fb      	strh	r3, [r7, #14]
 80049a4:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80049a8:	2b00      	cmp	r3, #0
 80049aa:	d008      	beq.n	80049be <ucg_com_PowerUp+0x54>
 80049ac:	687b      	ldr	r3, [r7, #4]
 80049ae:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 80049b2:	f043 0308 	orr.w	r3, r3, #8
 80049b6:	b2da      	uxtb	r2, r3
 80049b8:	687b      	ldr	r3, [r7, #4]
 80049ba:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 80049be:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80049c2:	4618      	mov	r0, r3
 80049c4:	3714      	adds	r7, #20
 80049c6:	46bd      	mov	sp, r7
 80049c8:	bd90      	pop	{r4, r7, pc}

080049ca <ucg_com_SetLineStatus>:
 80049ca:	b590      	push	{r4, r7, lr}
 80049cc:	b083      	sub	sp, #12
 80049ce:	af00      	add	r7, sp, #0
 80049d0:	6078      	str	r0, [r7, #4]
 80049d2:	4608      	mov	r0, r1
 80049d4:	4611      	mov	r1, r2
 80049d6:	461a      	mov	r2, r3
 80049d8:	4603      	mov	r3, r0
 80049da:	70fb      	strb	r3, [r7, #3]
 80049dc:	460b      	mov	r3, r1
 80049de:	70bb      	strb	r3, [r7, #2]
 80049e0:	4613      	mov	r3, r2
 80049e2:	707b      	strb	r3, [r7, #1]
 80049e4:	78fb      	ldrb	r3, [r7, #3]
 80049e6:	2b00      	cmp	r3, #0
 80049e8:	d131      	bne.n	8004a4e <ucg_com_SetLineStatus+0x84>
 80049ea:	687b      	ldr	r3, [r7, #4]
 80049ec:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 80049f0:	78bb      	ldrb	r3, [r7, #2]
 80049f2:	4013      	ands	r3, r2
 80049f4:	b2db      	uxtb	r3, r3
 80049f6:	2b00      	cmp	r3, #0
 80049f8:	d008      	beq.n	8004a0c <ucg_com_SetLineStatus+0x42>
 80049fa:	687b      	ldr	r3, [r7, #4]
 80049fc:	f893 20af 	ldrb.w	r2, [r3, #175]	; 0xaf
 8004a00:	78bb      	ldrb	r3, [r7, #2]
 8004a02:	4013      	ands	r3, r2
 8004a04:	b2db      	uxtb	r3, r3
 8004a06:	78ba      	ldrb	r2, [r7, #2]
 8004a08:	429a      	cmp	r2, r3
 8004a0a:	d14b      	bne.n	8004aa4 <ucg_com_SetLineStatus+0xda>
 8004a0c:	687b      	ldr	r3, [r7, #4]
 8004a0e:	69dc      	ldr	r4, [r3, #28]
 8004a10:	787b      	ldrb	r3, [r7, #1]
 8004a12:	b219      	sxth	r1, r3
 8004a14:	78fb      	ldrb	r3, [r7, #3]
 8004a16:	b29a      	uxth	r2, r3
 8004a18:	2300      	movs	r3, #0
 8004a1a:	6878      	ldr	r0, [r7, #4]
 8004a1c:	47a0      	blx	r4
 8004a1e:	687b      	ldr	r3, [r7, #4]
 8004a20:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8004a24:	b25a      	sxtb	r2, r3
 8004a26:	f997 3002 	ldrsb.w	r3, [r7, #2]
 8004a2a:	43db      	mvns	r3, r3
 8004a2c:	b25b      	sxtb	r3, r3
 8004a2e:	4013      	ands	r3, r2
 8004a30:	b25b      	sxtb	r3, r3
 8004a32:	b2da      	uxtb	r2, r3
 8004a34:	687b      	ldr	r3, [r7, #4]
 8004a36:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8004a3a:	687b      	ldr	r3, [r7, #4]
 8004a3c:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8004a40:	78bb      	ldrb	r3, [r7, #2]
 8004a42:	4313      	orrs	r3, r2
 8004a44:	b2da      	uxtb	r2, r3
 8004a46:	687b      	ldr	r3, [r7, #4]
 8004a48:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8004a4c:	e02a      	b.n	8004aa4 <ucg_com_SetLineStatus+0xda>
 8004a4e:	687b      	ldr	r3, [r7, #4]
 8004a50:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8004a54:	78bb      	ldrb	r3, [r7, #2]
 8004a56:	4013      	ands	r3, r2
 8004a58:	b2db      	uxtb	r3, r3
 8004a5a:	2b00      	cmp	r3, #0
 8004a5c:	d007      	beq.n	8004a6e <ucg_com_SetLineStatus+0xa4>
 8004a5e:	687b      	ldr	r3, [r7, #4]
 8004a60:	f893 20af 	ldrb.w	r2, [r3, #175]	; 0xaf
 8004a64:	78bb      	ldrb	r3, [r7, #2]
 8004a66:	4013      	ands	r3, r2
 8004a68:	b2db      	uxtb	r3, r3
 8004a6a:	2b00      	cmp	r3, #0
 8004a6c:	d11a      	bne.n	8004aa4 <ucg_com_SetLineStatus+0xda>
 8004a6e:	687b      	ldr	r3, [r7, #4]
 8004a70:	69dc      	ldr	r4, [r3, #28]
 8004a72:	787b      	ldrb	r3, [r7, #1]
 8004a74:	b219      	sxth	r1, r3
 8004a76:	78fb      	ldrb	r3, [r7, #3]
 8004a78:	b29a      	uxth	r2, r3
 8004a7a:	2300      	movs	r3, #0
 8004a7c:	6878      	ldr	r0, [r7, #4]
 8004a7e:	47a0      	blx	r4
 8004a80:	687b      	ldr	r3, [r7, #4]
 8004a82:	f893 20af 	ldrb.w	r2, [r3, #175]	; 0xaf
 8004a86:	78bb      	ldrb	r3, [r7, #2]
 8004a88:	4313      	orrs	r3, r2
 8004a8a:	b2da      	uxtb	r2, r3
 8004a8c:	687b      	ldr	r3, [r7, #4]
 8004a8e:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8004a92:	687b      	ldr	r3, [r7, #4]
 8004a94:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8004a98:	78bb      	ldrb	r3, [r7, #2]
 8004a9a:	4313      	orrs	r3, r2
 8004a9c:	b2da      	uxtb	r2, r3
 8004a9e:	687b      	ldr	r3, [r7, #4]
 8004aa0:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8004aa4:	bf00      	nop
 8004aa6:	370c      	adds	r7, #12
 8004aa8:	46bd      	mov	sp, r7
 8004aaa:	bd90      	pop	{r4, r7, pc}

08004aac <ucg_com_SetResetLineStatus>:
 8004aac:	b580      	push	{r7, lr}
 8004aae:	b082      	sub	sp, #8
 8004ab0:	af00      	add	r7, sp, #0
 8004ab2:	6078      	str	r0, [r7, #4]
 8004ab4:	460b      	mov	r3, r1
 8004ab6:	70fb      	strb	r3, [r7, #3]
 8004ab8:	78f9      	ldrb	r1, [r7, #3]
 8004aba:	230d      	movs	r3, #13
 8004abc:	2204      	movs	r2, #4
 8004abe:	6878      	ldr	r0, [r7, #4]
 8004ac0:	f7ff ff83 	bl	80049ca <ucg_com_SetLineStatus>
 8004ac4:	bf00      	nop
 8004ac6:	3708      	adds	r7, #8
 8004ac8:	46bd      	mov	sp, r7
 8004aca:	bd80      	pop	{r7, pc}

08004acc <ucg_com_SetCSLineStatus>:
 8004acc:	b580      	push	{r7, lr}
 8004ace:	b082      	sub	sp, #8
 8004ad0:	af00      	add	r7, sp, #0
 8004ad2:	6078      	str	r0, [r7, #4]
 8004ad4:	460b      	mov	r3, r1
 8004ad6:	70fb      	strb	r3, [r7, #3]
 8004ad8:	78f9      	ldrb	r1, [r7, #3]
 8004ada:	230e      	movs	r3, #14
 8004adc:	2202      	movs	r2, #2
 8004ade:	6878      	ldr	r0, [r7, #4]
 8004ae0:	f7ff ff73 	bl	80049ca <ucg_com_SetLineStatus>
 8004ae4:	bf00      	nop
 8004ae6:	3708      	adds	r7, #8
 8004ae8:	46bd      	mov	sp, r7
 8004aea:	bd80      	pop	{r7, pc}

08004aec <ucg_com_SetCDLineStatus>:
 8004aec:	b580      	push	{r7, lr}
 8004aee:	b082      	sub	sp, #8
 8004af0:	af00      	add	r7, sp, #0
 8004af2:	6078      	str	r0, [r7, #4]
 8004af4:	460b      	mov	r3, r1
 8004af6:	70fb      	strb	r3, [r7, #3]
 8004af8:	78f9      	ldrb	r1, [r7, #3]
 8004afa:	230f      	movs	r3, #15
 8004afc:	2201      	movs	r2, #1
 8004afe:	6878      	ldr	r0, [r7, #4]
 8004b00:	f7ff ff63 	bl	80049ca <ucg_com_SetLineStatus>
 8004b04:	bf00      	nop
 8004b06:	3708      	adds	r7, #8
 8004b08:	46bd      	mov	sp, r7
 8004b0a:	bd80      	pop	{r7, pc}

08004b0c <ucg_com_DelayMicroseconds>:
 8004b0c:	b590      	push	{r4, r7, lr}
 8004b0e:	b083      	sub	sp, #12
 8004b10:	af00      	add	r7, sp, #0
 8004b12:	6078      	str	r0, [r7, #4]
 8004b14:	460b      	mov	r3, r1
 8004b16:	807b      	strh	r3, [r7, #2]
 8004b18:	687b      	ldr	r3, [r7, #4]
 8004b1a:	69dc      	ldr	r4, [r3, #28]
 8004b1c:	887a      	ldrh	r2, [r7, #2]
 8004b1e:	2300      	movs	r3, #0
 8004b20:	210c      	movs	r1, #12
 8004b22:	6878      	ldr	r0, [r7, #4]
 8004b24:	47a0      	blx	r4
 8004b26:	bf00      	nop
 8004b28:	370c      	adds	r7, #12
 8004b2a:	46bd      	mov	sp, r7
 8004b2c:	bd90      	pop	{r4, r7, pc}

08004b2e <ucg_com_DelayMilliseconds>:
 8004b2e:	b580      	push	{r7, lr}
 8004b30:	b082      	sub	sp, #8
 8004b32:	af00      	add	r7, sp, #0
 8004b34:	6078      	str	r0, [r7, #4]
 8004b36:	460b      	mov	r3, r1
 8004b38:	807b      	strh	r3, [r7, #2]
 8004b3a:	e007      	b.n	8004b4c <ucg_com_DelayMilliseconds+0x1e>
 8004b3c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8004b40:	6878      	ldr	r0, [r7, #4]
 8004b42:	f7ff ffe3 	bl	8004b0c <ucg_com_DelayMicroseconds>
 8004b46:	887b      	ldrh	r3, [r7, #2]
 8004b48:	3b01      	subs	r3, #1
 8004b4a:	807b      	strh	r3, [r7, #2]
 8004b4c:	887b      	ldrh	r3, [r7, #2]
 8004b4e:	2b00      	cmp	r3, #0
 8004b50:	d1f4      	bne.n	8004b3c <ucg_com_DelayMilliseconds+0xe>
 8004b52:	bf00      	nop
 8004b54:	3708      	adds	r7, #8
 8004b56:	46bd      	mov	sp, r7
 8004b58:	bd80      	pop	{r7, pc}

08004b5a <ucg_com_SendByte>:
 8004b5a:	b590      	push	{r4, r7, lr}
 8004b5c:	b083      	sub	sp, #12
 8004b5e:	af00      	add	r7, sp, #0
 8004b60:	6078      	str	r0, [r7, #4]
 8004b62:	460b      	mov	r3, r1
 8004b64:	70fb      	strb	r3, [r7, #3]
 8004b66:	687b      	ldr	r3, [r7, #4]
 8004b68:	69dc      	ldr	r4, [r3, #28]
 8004b6a:	78fb      	ldrb	r3, [r7, #3]
 8004b6c:	b29a      	uxth	r2, r3
 8004b6e:	2300      	movs	r3, #0
 8004b70:	2110      	movs	r1, #16
 8004b72:	6878      	ldr	r0, [r7, #4]
 8004b74:	47a0      	blx	r4
 8004b76:	bf00      	nop
 8004b78:	370c      	adds	r7, #12
 8004b7a:	46bd      	mov	sp, r7
 8004b7c:	bd90      	pop	{r4, r7, pc}

08004b7e <ucg_com_SendStringP>:
 8004b7e:	b590      	push	{r4, r7, lr}
 8004b80:	b087      	sub	sp, #28
 8004b82:	af00      	add	r7, sp, #0
 8004b84:	60f8      	str	r0, [r7, #12]
 8004b86:	460b      	mov	r3, r1
 8004b88:	607a      	str	r2, [r7, #4]
 8004b8a:	817b      	strh	r3, [r7, #10]
 8004b8c:	e010      	b.n	8004bb0 <ucg_com_SendStringP+0x32>
 8004b8e:	687b      	ldr	r3, [r7, #4]
 8004b90:	781b      	ldrb	r3, [r3, #0]
 8004b92:	75fb      	strb	r3, [r7, #23]
 8004b94:	68fb      	ldr	r3, [r7, #12]
 8004b96:	69dc      	ldr	r4, [r3, #28]
 8004b98:	7dfb      	ldrb	r3, [r7, #23]
 8004b9a:	b29a      	uxth	r2, r3
 8004b9c:	2300      	movs	r3, #0
 8004b9e:	2110      	movs	r1, #16
 8004ba0:	68f8      	ldr	r0, [r7, #12]
 8004ba2:	47a0      	blx	r4
 8004ba4:	687b      	ldr	r3, [r7, #4]
 8004ba6:	3301      	adds	r3, #1
 8004ba8:	607b      	str	r3, [r7, #4]
 8004baa:	897b      	ldrh	r3, [r7, #10]
 8004bac:	3b01      	subs	r3, #1
 8004bae:	817b      	strh	r3, [r7, #10]
 8004bb0:	897b      	ldrh	r3, [r7, #10]
 8004bb2:	2b00      	cmp	r3, #0
 8004bb4:	d1eb      	bne.n	8004b8e <ucg_com_SendStringP+0x10>
 8004bb6:	bf00      	nop
 8004bb8:	371c      	adds	r7, #28
 8004bba:	46bd      	mov	sp, r7
 8004bbc:	bd90      	pop	{r4, r7, pc}

08004bbe <ucg_com_SendCmdArg>:
 8004bbe:	b580      	push	{r7, lr}
 8004bc0:	b084      	sub	sp, #16
 8004bc2:	af00      	add	r7, sp, #0
 8004bc4:	60f8      	str	r0, [r7, #12]
 8004bc6:	60b9      	str	r1, [r7, #8]
 8004bc8:	4611      	mov	r1, r2
 8004bca:	461a      	mov	r2, r3
 8004bcc:	460b      	mov	r3, r1
 8004bce:	71fb      	strb	r3, [r7, #7]
 8004bd0:	4613      	mov	r3, r2
 8004bd2:	71bb      	strb	r3, [r7, #6]
 8004bd4:	68fb      	ldr	r3, [r7, #12]
 8004bd6:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8004bda:	085b      	lsrs	r3, r3, #1
 8004bdc:	b2db      	uxtb	r3, r3
 8004bde:	f003 0301 	and.w	r3, r3, #1
 8004be2:	b2db      	uxtb	r3, r3
 8004be4:	4619      	mov	r1, r3
 8004be6:	68f8      	ldr	r0, [r7, #12]
 8004be8:	f7ff ff80 	bl	8004aec <ucg_com_SetCDLineStatus>
 8004bec:	79fb      	ldrb	r3, [r7, #7]
 8004bee:	b29b      	uxth	r3, r3
 8004bf0:	68ba      	ldr	r2, [r7, #8]
 8004bf2:	4619      	mov	r1, r3
 8004bf4:	68f8      	ldr	r0, [r7, #12]
 8004bf6:	f7ff ffc2 	bl	8004b7e <ucg_com_SendStringP>
 8004bfa:	79bb      	ldrb	r3, [r7, #6]
 8004bfc:	2b00      	cmp	r3, #0
 8004bfe:	d014      	beq.n	8004c2a <ucg_com_SendCmdArg+0x6c>
 8004c00:	79fb      	ldrb	r3, [r7, #7]
 8004c02:	68ba      	ldr	r2, [r7, #8]
 8004c04:	4413      	add	r3, r2
 8004c06:	60bb      	str	r3, [r7, #8]
 8004c08:	68fb      	ldr	r3, [r7, #12]
 8004c0a:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8004c0e:	f003 0301 	and.w	r3, r3, #1
 8004c12:	b2db      	uxtb	r3, r3
 8004c14:	4619      	mov	r1, r3
 8004c16:	68f8      	ldr	r0, [r7, #12]
 8004c18:	f7ff ff68 	bl	8004aec <ucg_com_SetCDLineStatus>
 8004c1c:	79bb      	ldrb	r3, [r7, #6]
 8004c1e:	b29b      	uxth	r3, r3
 8004c20:	68ba      	ldr	r2, [r7, #8]
 8004c22:	4619      	mov	r1, r3
 8004c24:	68f8      	ldr	r0, [r7, #12]
 8004c26:	f7ff ffaa 	bl	8004b7e <ucg_com_SendStringP>
 8004c2a:	bf00      	nop
 8004c2c:	3710      	adds	r7, #16
 8004c2e:	46bd      	mov	sp, r7
 8004c30:	bd80      	pop	{r7, pc}
	...

08004c34 <ucg_com_SendCmdSeq>:
 8004c34:	b580      	push	{r7, lr}
 8004c36:	b084      	sub	sp, #16
 8004c38:	af00      	add	r7, sp, #0
 8004c3a:	6078      	str	r0, [r7, #4]
 8004c3c:	6039      	str	r1, [r7, #0]
 8004c3e:	683b      	ldr	r3, [r7, #0]
 8004c40:	781b      	ldrb	r3, [r3, #0]
 8004c42:	73fb      	strb	r3, [r7, #15]
 8004c44:	7bfb      	ldrb	r3, [r7, #15]
 8004c46:	091b      	lsrs	r3, r3, #4
 8004c48:	73bb      	strb	r3, [r7, #14]
 8004c4a:	7bfb      	ldrb	r3, [r7, #15]
 8004c4c:	f003 030f 	and.w	r3, r3, #15
 8004c50:	737b      	strb	r3, [r7, #13]
 8004c52:	7bbb      	ldrb	r3, [r7, #14]
 8004c54:	2b0f      	cmp	r3, #15
 8004c56:	f200 8124 	bhi.w	8004ea2 <ucg_com_SendCmdSeq+0x26e>
 8004c5a:	a201      	add	r2, pc, #4	; (adr r2, 8004c60 <ucg_com_SendCmdSeq+0x2c>)
 8004c5c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004c60:	08004ea3 	.word	0x08004ea3
 8004c64:	08004ca1 	.word	0x08004ca1
 8004c68:	08004ca1 	.word	0x08004ca1
 8004c6c:	08004ca1 	.word	0x08004ca1
 8004c70:	08004ea3 	.word	0x08004ea3
 8004c74:	08004ea3 	.word	0x08004ea3
 8004c78:	08004cc1 	.word	0x08004cc1
 8004c7c:	08004cf3 	.word	0x08004cf3
 8004c80:	08004d37 	.word	0x08004d37
 8004c84:	08004d63 	.word	0x08004d63
 8004c88:	08004d8f 	.word	0x08004d8f
 8004c8c:	08004def 	.word	0x08004def
 8004c90:	08004ea3 	.word	0x08004ea3
 8004c94:	08004ea3 	.word	0x08004ea3
 8004c98:	08004ea3 	.word	0x08004ea3
 8004c9c:	08004e4f 	.word	0x08004e4f
 8004ca0:	683b      	ldr	r3, [r7, #0]
 8004ca2:	1c59      	adds	r1, r3, #1
 8004ca4:	7b7b      	ldrb	r3, [r7, #13]
 8004ca6:	7bba      	ldrb	r2, [r7, #14]
 8004ca8:	6878      	ldr	r0, [r7, #4]
 8004caa:	f7ff ff88 	bl	8004bbe <ucg_com_SendCmdArg>
 8004cae:	7bbb      	ldrb	r3, [r7, #14]
 8004cb0:	1c5a      	adds	r2, r3, #1
 8004cb2:	7b7b      	ldrb	r3, [r7, #13]
 8004cb4:	4413      	add	r3, r2
 8004cb6:	461a      	mov	r2, r3
 8004cb8:	683b      	ldr	r3, [r7, #0]
 8004cba:	4413      	add	r3, r2
 8004cbc:	603b      	str	r3, [r7, #0]
 8004cbe:	e0ef      	b.n	8004ea0 <ucg_com_SendCmdSeq+0x26c>
 8004cc0:	687b      	ldr	r3, [r7, #4]
 8004cc2:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8004cc6:	f003 0301 	and.w	r3, r3, #1
 8004cca:	b2db      	uxtb	r3, r3
 8004ccc:	4619      	mov	r1, r3
 8004cce:	6878      	ldr	r0, [r7, #4]
 8004cd0:	f7ff ff0c 	bl	8004aec <ucg_com_SetCDLineStatus>
 8004cd4:	7b7b      	ldrb	r3, [r7, #13]
 8004cd6:	b299      	uxth	r1, r3
 8004cd8:	683b      	ldr	r3, [r7, #0]
 8004cda:	3301      	adds	r3, #1
 8004cdc:	461a      	mov	r2, r3
 8004cde:	6878      	ldr	r0, [r7, #4]
 8004ce0:	f7ff ff4d 	bl	8004b7e <ucg_com_SendStringP>
 8004ce4:	7b7b      	ldrb	r3, [r7, #13]
 8004ce6:	3301      	adds	r3, #1
 8004ce8:	461a      	mov	r2, r3
 8004cea:	683b      	ldr	r3, [r7, #0]
 8004cec:	4413      	add	r3, r2
 8004cee:	603b      	str	r3, [r7, #0]
 8004cf0:	e0d6      	b.n	8004ea0 <ucg_com_SendCmdSeq+0x26c>
 8004cf2:	687b      	ldr	r3, [r7, #4]
 8004cf4:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8004cf8:	085b      	lsrs	r3, r3, #1
 8004cfa:	b2db      	uxtb	r3, r3
 8004cfc:	f003 0301 	and.w	r3, r3, #1
 8004d00:	2b00      	cmp	r3, #0
 8004d02:	bf0c      	ite	eq
 8004d04:	2301      	moveq	r3, #1
 8004d06:	2300      	movne	r3, #0
 8004d08:	b2db      	uxtb	r3, r3
 8004d0a:	4619      	mov	r1, r3
 8004d0c:	6878      	ldr	r0, [r7, #4]
 8004d0e:	f7ff feed 	bl	8004aec <ucg_com_SetCDLineStatus>
 8004d12:	7b7b      	ldrb	r3, [r7, #13]
 8004d14:	2b00      	cmp	r3, #0
 8004d16:	d007      	beq.n	8004d28 <ucg_com_SendCmdSeq+0xf4>
 8004d18:	7b7b      	ldrb	r3, [r7, #13]
 8004d1a:	b299      	uxth	r1, r3
 8004d1c:	683b      	ldr	r3, [r7, #0]
 8004d1e:	3301      	adds	r3, #1
 8004d20:	461a      	mov	r2, r3
 8004d22:	6878      	ldr	r0, [r7, #4]
 8004d24:	f7ff ff2b 	bl	8004b7e <ucg_com_SendStringP>
 8004d28:	7b7b      	ldrb	r3, [r7, #13]
 8004d2a:	3301      	adds	r3, #1
 8004d2c:	461a      	mov	r2, r3
 8004d2e:	683b      	ldr	r3, [r7, #0]
 8004d30:	4413      	add	r3, r2
 8004d32:	603b      	str	r3, [r7, #0]
 8004d34:	e0b4      	b.n	8004ea0 <ucg_com_SendCmdSeq+0x26c>
 8004d36:	683b      	ldr	r3, [r7, #0]
 8004d38:	3301      	adds	r3, #1
 8004d3a:	603b      	str	r3, [r7, #0]
 8004d3c:	683b      	ldr	r3, [r7, #0]
 8004d3e:	781b      	ldrb	r3, [r3, #0]
 8004d40:	73fb      	strb	r3, [r7, #15]
 8004d42:	7b7b      	ldrb	r3, [r7, #13]
 8004d44:	b29b      	uxth	r3, r3
 8004d46:	021b      	lsls	r3, r3, #8
 8004d48:	b29a      	uxth	r2, r3
 8004d4a:	7bfb      	ldrb	r3, [r7, #15]
 8004d4c:	b29b      	uxth	r3, r3
 8004d4e:	4413      	add	r3, r2
 8004d50:	b29b      	uxth	r3, r3
 8004d52:	4619      	mov	r1, r3
 8004d54:	6878      	ldr	r0, [r7, #4]
 8004d56:	f7ff feea 	bl	8004b2e <ucg_com_DelayMilliseconds>
 8004d5a:	683b      	ldr	r3, [r7, #0]
 8004d5c:	3301      	adds	r3, #1
 8004d5e:	603b      	str	r3, [r7, #0]
 8004d60:	e09e      	b.n	8004ea0 <ucg_com_SendCmdSeq+0x26c>
 8004d62:	683b      	ldr	r3, [r7, #0]
 8004d64:	3301      	adds	r3, #1
 8004d66:	603b      	str	r3, [r7, #0]
 8004d68:	683b      	ldr	r3, [r7, #0]
 8004d6a:	781b      	ldrb	r3, [r3, #0]
 8004d6c:	73fb      	strb	r3, [r7, #15]
 8004d6e:	7b7b      	ldrb	r3, [r7, #13]
 8004d70:	b29b      	uxth	r3, r3
 8004d72:	021b      	lsls	r3, r3, #8
 8004d74:	b29a      	uxth	r2, r3
 8004d76:	7bfb      	ldrb	r3, [r7, #15]
 8004d78:	b29b      	uxth	r3, r3
 8004d7a:	4413      	add	r3, r2
 8004d7c:	b29b      	uxth	r3, r3
 8004d7e:	4619      	mov	r1, r3
 8004d80:	6878      	ldr	r0, [r7, #4]
 8004d82:	f7ff fec3 	bl	8004b0c <ucg_com_DelayMicroseconds>
 8004d86:	683b      	ldr	r3, [r7, #0]
 8004d88:	3301      	adds	r3, #1
 8004d8a:	603b      	str	r3, [r7, #0]
 8004d8c:	e088      	b.n	8004ea0 <ucg_com_SendCmdSeq+0x26c>
 8004d8e:	683b      	ldr	r3, [r7, #0]
 8004d90:	3301      	adds	r3, #1
 8004d92:	603b      	str	r3, [r7, #0]
 8004d94:	683b      	ldr	r3, [r7, #0]
 8004d96:	781b      	ldrb	r3, [r3, #0]
 8004d98:	73fb      	strb	r3, [r7, #15]
 8004d9a:	683b      	ldr	r3, [r7, #0]
 8004d9c:	3301      	adds	r3, #1
 8004d9e:	603b      	str	r3, [r7, #0]
 8004da0:	683b      	ldr	r3, [r7, #0]
 8004da2:	781b      	ldrb	r3, [r3, #0]
 8004da4:	733b      	strb	r3, [r7, #12]
 8004da6:	683b      	ldr	r3, [r7, #0]
 8004da8:	3301      	adds	r3, #1
 8004daa:	603b      	str	r3, [r7, #0]
 8004dac:	687b      	ldr	r3, [r7, #4]
 8004dae:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8004db2:	f003 0301 	and.w	r3, r3, #1
 8004db6:	b2db      	uxtb	r3, r3
 8004db8:	4619      	mov	r1, r3
 8004dba:	6878      	ldr	r0, [r7, #4]
 8004dbc:	f7ff fe96 	bl	8004aec <ucg_com_SetCDLineStatus>
 8004dc0:	687b      	ldr	r3, [r7, #4]
 8004dc2:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8004dc6:	461a      	mov	r2, r3
 8004dc8:	687b      	ldr	r3, [r7, #4]
 8004dca:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
 8004dce:	441a      	add	r2, r3
 8004dd0:	7b7b      	ldrb	r3, [r7, #13]
 8004dd2:	fa42 f303 	asr.w	r3, r2, r3
 8004dd6:	b2da      	uxtb	r2, r3
 8004dd8:	7bfb      	ldrb	r3, [r7, #15]
 8004dda:	4013      	ands	r3, r2
 8004ddc:	b2da      	uxtb	r2, r3
 8004dde:	7b3b      	ldrb	r3, [r7, #12]
 8004de0:	4313      	orrs	r3, r2
 8004de2:	b2db      	uxtb	r3, r3
 8004de4:	4619      	mov	r1, r3
 8004de6:	6878      	ldr	r0, [r7, #4]
 8004de8:	f7ff feb7 	bl	8004b5a <ucg_com_SendByte>
 8004dec:	e058      	b.n	8004ea0 <ucg_com_SendCmdSeq+0x26c>
 8004dee:	683b      	ldr	r3, [r7, #0]
 8004df0:	3301      	adds	r3, #1
 8004df2:	603b      	str	r3, [r7, #0]
 8004df4:	683b      	ldr	r3, [r7, #0]
 8004df6:	781b      	ldrb	r3, [r3, #0]
 8004df8:	73fb      	strb	r3, [r7, #15]
 8004dfa:	683b      	ldr	r3, [r7, #0]
 8004dfc:	3301      	adds	r3, #1
 8004dfe:	603b      	str	r3, [r7, #0]
 8004e00:	683b      	ldr	r3, [r7, #0]
 8004e02:	781b      	ldrb	r3, [r3, #0]
 8004e04:	733b      	strb	r3, [r7, #12]
 8004e06:	683b      	ldr	r3, [r7, #0]
 8004e08:	3301      	adds	r3, #1
 8004e0a:	603b      	str	r3, [r7, #0]
 8004e0c:	687b      	ldr	r3, [r7, #4]
 8004e0e:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8004e12:	f003 0301 	and.w	r3, r3, #1
 8004e16:	b2db      	uxtb	r3, r3
 8004e18:	4619      	mov	r1, r3
 8004e1a:	6878      	ldr	r0, [r7, #4]
 8004e1c:	f7ff fe66 	bl	8004aec <ucg_com_SetCDLineStatus>
 8004e20:	687b      	ldr	r3, [r7, #4]
 8004e22:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8004e26:	461a      	mov	r2, r3
 8004e28:	687b      	ldr	r3, [r7, #4]
 8004e2a:	f9b3 3022 	ldrsh.w	r3, [r3, #34]	; 0x22
 8004e2e:	441a      	add	r2, r3
 8004e30:	7b7b      	ldrb	r3, [r7, #13]
 8004e32:	fa42 f303 	asr.w	r3, r2, r3
 8004e36:	b2da      	uxtb	r2, r3
 8004e38:	7bfb      	ldrb	r3, [r7, #15]
 8004e3a:	4013      	ands	r3, r2
 8004e3c:	b2da      	uxtb	r2, r3
 8004e3e:	7b3b      	ldrb	r3, [r7, #12]
 8004e40:	4313      	orrs	r3, r2
 8004e42:	b2db      	uxtb	r3, r3
 8004e44:	4619      	mov	r1, r3
 8004e46:	6878      	ldr	r0, [r7, #4]
 8004e48:	f7ff fe87 	bl	8004b5a <ucg_com_SendByte>
 8004e4c:	e028      	b.n	8004ea0 <ucg_com_SendCmdSeq+0x26c>
 8004e4e:	7b7b      	ldrb	r3, [r7, #13]
 8004e50:	089b      	lsrs	r3, r3, #2
 8004e52:	73bb      	strb	r3, [r7, #14]
 8004e54:	7b7b      	ldrb	r3, [r7, #13]
 8004e56:	f003 0303 	and.w	r3, r3, #3
 8004e5a:	737b      	strb	r3, [r7, #13]
 8004e5c:	7bbb      	ldrb	r3, [r7, #14]
 8004e5e:	2b01      	cmp	r3, #1
 8004e60:	d00c      	beq.n	8004e7c <ucg_com_SendCmdSeq+0x248>
 8004e62:	2b03      	cmp	r3, #3
 8004e64:	d013      	beq.n	8004e8e <ucg_com_SendCmdSeq+0x25a>
 8004e66:	2b00      	cmp	r3, #0
 8004e68:	d116      	bne.n	8004e98 <ucg_com_SendCmdSeq+0x264>
 8004e6a:	7b7b      	ldrb	r3, [r7, #13]
 8004e6c:	f003 0301 	and.w	r3, r3, #1
 8004e70:	b2db      	uxtb	r3, r3
 8004e72:	4619      	mov	r1, r3
 8004e74:	6878      	ldr	r0, [r7, #4]
 8004e76:	f7ff fe19 	bl	8004aac <ucg_com_SetResetLineStatus>
 8004e7a:	e00d      	b.n	8004e98 <ucg_com_SendCmdSeq+0x264>
 8004e7c:	7b7b      	ldrb	r3, [r7, #13]
 8004e7e:	f003 0301 	and.w	r3, r3, #1
 8004e82:	b2db      	uxtb	r3, r3
 8004e84:	4619      	mov	r1, r3
 8004e86:	6878      	ldr	r0, [r7, #4]
 8004e88:	f7ff fe20 	bl	8004acc <ucg_com_SetCSLineStatus>
 8004e8c:	e004      	b.n	8004e98 <ucg_com_SendCmdSeq+0x264>
 8004e8e:	687b      	ldr	r3, [r7, #4]
 8004e90:	7b7a      	ldrb	r2, [r7, #13]
 8004e92:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
 8004e96:	bf00      	nop
 8004e98:	683b      	ldr	r3, [r7, #0]
 8004e9a:	3301      	adds	r3, #1
 8004e9c:	603b      	str	r3, [r7, #0]
 8004e9e:	bf00      	nop
 8004ea0:	e6cd      	b.n	8004c3e <ucg_com_SendCmdSeq+0xa>
 8004ea2:	bf00      	nop
 8004ea4:	3710      	adds	r7, #16
 8004ea6:	46bd      	mov	sp, r7
 8004ea8:	bd80      	pop	{r7, pc}
 8004eaa:	bf00      	nop

08004eac <siprintf>:
 8004eac:	b40e      	push	{r1, r2, r3}
 8004eae:	b500      	push	{lr}
 8004eb0:	b09c      	sub	sp, #112	; 0x70
 8004eb2:	ab1d      	add	r3, sp, #116	; 0x74
 8004eb4:	9002      	str	r0, [sp, #8]
 8004eb6:	9006      	str	r0, [sp, #24]
 8004eb8:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8004ebc:	4809      	ldr	r0, [pc, #36]	; (8004ee4 <siprintf+0x38>)
 8004ebe:	9107      	str	r1, [sp, #28]
 8004ec0:	9104      	str	r1, [sp, #16]
 8004ec2:	4909      	ldr	r1, [pc, #36]	; (8004ee8 <siprintf+0x3c>)
 8004ec4:	f853 2b04 	ldr.w	r2, [r3], #4
 8004ec8:	9105      	str	r1, [sp, #20]
 8004eca:	6800      	ldr	r0, [r0, #0]
 8004ecc:	9301      	str	r3, [sp, #4]
 8004ece:	a902      	add	r1, sp, #8
 8004ed0:	f000 f992 	bl	80051f8 <_svfiprintf_r>
 8004ed4:	9b02      	ldr	r3, [sp, #8]
 8004ed6:	2200      	movs	r2, #0
 8004ed8:	701a      	strb	r2, [r3, #0]
 8004eda:	b01c      	add	sp, #112	; 0x70
 8004edc:	f85d eb04 	ldr.w	lr, [sp], #4
 8004ee0:	b003      	add	sp, #12
 8004ee2:	4770      	bx	lr
 8004ee4:	20000074 	.word	0x20000074
 8004ee8:	ffff0208 	.word	0xffff0208

08004eec <memset>:
 8004eec:	4402      	add	r2, r0
 8004eee:	4603      	mov	r3, r0
 8004ef0:	4293      	cmp	r3, r2
 8004ef2:	d100      	bne.n	8004ef6 <memset+0xa>
 8004ef4:	4770      	bx	lr
 8004ef6:	f803 1b01 	strb.w	r1, [r3], #1
 8004efa:	e7f9      	b.n	8004ef0 <memset+0x4>

08004efc <__errno>:
 8004efc:	4b01      	ldr	r3, [pc, #4]	; (8004f04 <__errno+0x8>)
 8004efe:	6818      	ldr	r0, [r3, #0]
 8004f00:	4770      	bx	lr
 8004f02:	bf00      	nop
 8004f04:	20000074 	.word	0x20000074

08004f08 <__libc_init_array>:
 8004f08:	b570      	push	{r4, r5, r6, lr}
 8004f0a:	4d0d      	ldr	r5, [pc, #52]	; (8004f40 <__libc_init_array+0x38>)
 8004f0c:	4c0d      	ldr	r4, [pc, #52]	; (8004f44 <__libc_init_array+0x3c>)
 8004f0e:	1b64      	subs	r4, r4, r5
 8004f10:	10a4      	asrs	r4, r4, #2
 8004f12:	2600      	movs	r6, #0
 8004f14:	42a6      	cmp	r6, r4
 8004f16:	d109      	bne.n	8004f2c <__libc_init_array+0x24>
 8004f18:	4d0b      	ldr	r5, [pc, #44]	; (8004f48 <__libc_init_array+0x40>)
 8004f1a:	4c0c      	ldr	r4, [pc, #48]	; (8004f4c <__libc_init_array+0x44>)
 8004f1c:	f000 fc6a 	bl	80057f4 <_init>
 8004f20:	1b64      	subs	r4, r4, r5
 8004f22:	10a4      	asrs	r4, r4, #2
 8004f24:	2600      	movs	r6, #0
 8004f26:	42a6      	cmp	r6, r4
 8004f28:	d105      	bne.n	8004f36 <__libc_init_array+0x2e>
 8004f2a:	bd70      	pop	{r4, r5, r6, pc}
 8004f2c:	f855 3b04 	ldr.w	r3, [r5], #4
 8004f30:	4798      	blx	r3
 8004f32:	3601      	adds	r6, #1
 8004f34:	e7ee      	b.n	8004f14 <__libc_init_array+0xc>
 8004f36:	f855 3b04 	ldr.w	r3, [r5], #4
 8004f3a:	4798      	blx	r3
 8004f3c:	3601      	adds	r6, #1
 8004f3e:	e7f2      	b.n	8004f26 <__libc_init_array+0x1e>
 8004f40:	080070a0 	.word	0x080070a0
 8004f44:	080070a0 	.word	0x080070a0
 8004f48:	080070a0 	.word	0x080070a0
 8004f4c:	080070a4 	.word	0x080070a4

08004f50 <__retarget_lock_acquire_recursive>:
 8004f50:	4770      	bx	lr

08004f52 <__retarget_lock_release_recursive>:
 8004f52:	4770      	bx	lr

08004f54 <_free_r>:
 8004f54:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004f56:	2900      	cmp	r1, #0
 8004f58:	d044      	beq.n	8004fe4 <_free_r+0x90>
 8004f5a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004f5e:	9001      	str	r0, [sp, #4]
 8004f60:	2b00      	cmp	r3, #0
 8004f62:	f1a1 0404 	sub.w	r4, r1, #4
 8004f66:	bfb8      	it	lt
 8004f68:	18e4      	addlt	r4, r4, r3
 8004f6a:	f000 f8df 	bl	800512c <__malloc_lock>
 8004f6e:	4a1e      	ldr	r2, [pc, #120]	; (8004fe8 <_free_r+0x94>)
 8004f70:	9801      	ldr	r0, [sp, #4]
 8004f72:	6813      	ldr	r3, [r2, #0]
 8004f74:	b933      	cbnz	r3, 8004f84 <_free_r+0x30>
 8004f76:	6063      	str	r3, [r4, #4]
 8004f78:	6014      	str	r4, [r2, #0]
 8004f7a:	b003      	add	sp, #12
 8004f7c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8004f80:	f000 b8da 	b.w	8005138 <__malloc_unlock>
 8004f84:	42a3      	cmp	r3, r4
 8004f86:	d908      	bls.n	8004f9a <_free_r+0x46>
 8004f88:	6825      	ldr	r5, [r4, #0]
 8004f8a:	1961      	adds	r1, r4, r5
 8004f8c:	428b      	cmp	r3, r1
 8004f8e:	bf01      	itttt	eq
 8004f90:	6819      	ldreq	r1, [r3, #0]
 8004f92:	685b      	ldreq	r3, [r3, #4]
 8004f94:	1949      	addeq	r1, r1, r5
 8004f96:	6021      	streq	r1, [r4, #0]
 8004f98:	e7ed      	b.n	8004f76 <_free_r+0x22>
 8004f9a:	461a      	mov	r2, r3
 8004f9c:	685b      	ldr	r3, [r3, #4]
 8004f9e:	b10b      	cbz	r3, 8004fa4 <_free_r+0x50>
 8004fa0:	42a3      	cmp	r3, r4
 8004fa2:	d9fa      	bls.n	8004f9a <_free_r+0x46>
 8004fa4:	6811      	ldr	r1, [r2, #0]
 8004fa6:	1855      	adds	r5, r2, r1
 8004fa8:	42a5      	cmp	r5, r4
 8004faa:	d10b      	bne.n	8004fc4 <_free_r+0x70>
 8004fac:	6824      	ldr	r4, [r4, #0]
 8004fae:	4421      	add	r1, r4
 8004fb0:	1854      	adds	r4, r2, r1
 8004fb2:	42a3      	cmp	r3, r4
 8004fb4:	6011      	str	r1, [r2, #0]
 8004fb6:	d1e0      	bne.n	8004f7a <_free_r+0x26>
 8004fb8:	681c      	ldr	r4, [r3, #0]
 8004fba:	685b      	ldr	r3, [r3, #4]
 8004fbc:	6053      	str	r3, [r2, #4]
 8004fbe:	440c      	add	r4, r1
 8004fc0:	6014      	str	r4, [r2, #0]
 8004fc2:	e7da      	b.n	8004f7a <_free_r+0x26>
 8004fc4:	d902      	bls.n	8004fcc <_free_r+0x78>
 8004fc6:	230c      	movs	r3, #12
 8004fc8:	6003      	str	r3, [r0, #0]
 8004fca:	e7d6      	b.n	8004f7a <_free_r+0x26>
 8004fcc:	6825      	ldr	r5, [r4, #0]
 8004fce:	1961      	adds	r1, r4, r5
 8004fd0:	428b      	cmp	r3, r1
 8004fd2:	bf04      	itt	eq
 8004fd4:	6819      	ldreq	r1, [r3, #0]
 8004fd6:	685b      	ldreq	r3, [r3, #4]
 8004fd8:	6063      	str	r3, [r4, #4]
 8004fda:	bf04      	itt	eq
 8004fdc:	1949      	addeq	r1, r1, r5
 8004fde:	6021      	streq	r1, [r4, #0]
 8004fe0:	6054      	str	r4, [r2, #4]
 8004fe2:	e7ca      	b.n	8004f7a <_free_r+0x26>
 8004fe4:	b003      	add	sp, #12
 8004fe6:	bd30      	pop	{r4, r5, pc}
 8004fe8:	200014cc 	.word	0x200014cc

08004fec <sbrk_aligned>:
 8004fec:	b570      	push	{r4, r5, r6, lr}
 8004fee:	4e0e      	ldr	r6, [pc, #56]	; (8005028 <sbrk_aligned+0x3c>)
 8004ff0:	460c      	mov	r4, r1
 8004ff2:	6831      	ldr	r1, [r6, #0]
 8004ff4:	4605      	mov	r5, r0
 8004ff6:	b911      	cbnz	r1, 8004ffe <sbrk_aligned+0x12>
 8004ff8:	f000 fba6 	bl	8005748 <_sbrk_r>
 8004ffc:	6030      	str	r0, [r6, #0]
 8004ffe:	4621      	mov	r1, r4
 8005000:	4628      	mov	r0, r5
 8005002:	f000 fba1 	bl	8005748 <_sbrk_r>
 8005006:	1c43      	adds	r3, r0, #1
 8005008:	d00a      	beq.n	8005020 <sbrk_aligned+0x34>
 800500a:	1cc4      	adds	r4, r0, #3
 800500c:	f024 0403 	bic.w	r4, r4, #3
 8005010:	42a0      	cmp	r0, r4
 8005012:	d007      	beq.n	8005024 <sbrk_aligned+0x38>
 8005014:	1a21      	subs	r1, r4, r0
 8005016:	4628      	mov	r0, r5
 8005018:	f000 fb96 	bl	8005748 <_sbrk_r>
 800501c:	3001      	adds	r0, #1
 800501e:	d101      	bne.n	8005024 <sbrk_aligned+0x38>
 8005020:	f04f 34ff 	mov.w	r4, #4294967295
 8005024:	4620      	mov	r0, r4
 8005026:	bd70      	pop	{r4, r5, r6, pc}
 8005028:	200014d0 	.word	0x200014d0

0800502c <_malloc_r>:
 800502c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005030:	1ccd      	adds	r5, r1, #3
 8005032:	f025 0503 	bic.w	r5, r5, #3
 8005036:	3508      	adds	r5, #8
 8005038:	2d0c      	cmp	r5, #12
 800503a:	bf38      	it	cc
 800503c:	250c      	movcc	r5, #12
 800503e:	2d00      	cmp	r5, #0
 8005040:	4607      	mov	r7, r0
 8005042:	db01      	blt.n	8005048 <_malloc_r+0x1c>
 8005044:	42a9      	cmp	r1, r5
 8005046:	d905      	bls.n	8005054 <_malloc_r+0x28>
 8005048:	230c      	movs	r3, #12
 800504a:	603b      	str	r3, [r7, #0]
 800504c:	2600      	movs	r6, #0
 800504e:	4630      	mov	r0, r6
 8005050:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005054:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8005128 <_malloc_r+0xfc>
 8005058:	f000 f868 	bl	800512c <__malloc_lock>
 800505c:	f8d8 3000 	ldr.w	r3, [r8]
 8005060:	461c      	mov	r4, r3
 8005062:	bb5c      	cbnz	r4, 80050bc <_malloc_r+0x90>
 8005064:	4629      	mov	r1, r5
 8005066:	4638      	mov	r0, r7
 8005068:	f7ff ffc0 	bl	8004fec <sbrk_aligned>
 800506c:	1c43      	adds	r3, r0, #1
 800506e:	4604      	mov	r4, r0
 8005070:	d155      	bne.n	800511e <_malloc_r+0xf2>
 8005072:	f8d8 4000 	ldr.w	r4, [r8]
 8005076:	4626      	mov	r6, r4
 8005078:	2e00      	cmp	r6, #0
 800507a:	d145      	bne.n	8005108 <_malloc_r+0xdc>
 800507c:	2c00      	cmp	r4, #0
 800507e:	d048      	beq.n	8005112 <_malloc_r+0xe6>
 8005080:	6823      	ldr	r3, [r4, #0]
 8005082:	4631      	mov	r1, r6
 8005084:	4638      	mov	r0, r7
 8005086:	eb04 0903 	add.w	r9, r4, r3
 800508a:	f000 fb5d 	bl	8005748 <_sbrk_r>
 800508e:	4581      	cmp	r9, r0
 8005090:	d13f      	bne.n	8005112 <_malloc_r+0xe6>
 8005092:	6821      	ldr	r1, [r4, #0]
 8005094:	1a6d      	subs	r5, r5, r1
 8005096:	4629      	mov	r1, r5
 8005098:	4638      	mov	r0, r7
 800509a:	f7ff ffa7 	bl	8004fec <sbrk_aligned>
 800509e:	3001      	adds	r0, #1
 80050a0:	d037      	beq.n	8005112 <_malloc_r+0xe6>
 80050a2:	6823      	ldr	r3, [r4, #0]
 80050a4:	442b      	add	r3, r5
 80050a6:	6023      	str	r3, [r4, #0]
 80050a8:	f8d8 3000 	ldr.w	r3, [r8]
 80050ac:	2b00      	cmp	r3, #0
 80050ae:	d038      	beq.n	8005122 <_malloc_r+0xf6>
 80050b0:	685a      	ldr	r2, [r3, #4]
 80050b2:	42a2      	cmp	r2, r4
 80050b4:	d12b      	bne.n	800510e <_malloc_r+0xe2>
 80050b6:	2200      	movs	r2, #0
 80050b8:	605a      	str	r2, [r3, #4]
 80050ba:	e00f      	b.n	80050dc <_malloc_r+0xb0>
 80050bc:	6822      	ldr	r2, [r4, #0]
 80050be:	1b52      	subs	r2, r2, r5
 80050c0:	d41f      	bmi.n	8005102 <_malloc_r+0xd6>
 80050c2:	2a0b      	cmp	r2, #11
 80050c4:	d917      	bls.n	80050f6 <_malloc_r+0xca>
 80050c6:	1961      	adds	r1, r4, r5
 80050c8:	42a3      	cmp	r3, r4
 80050ca:	6025      	str	r5, [r4, #0]
 80050cc:	bf18      	it	ne
 80050ce:	6059      	strne	r1, [r3, #4]
 80050d0:	6863      	ldr	r3, [r4, #4]
 80050d2:	bf08      	it	eq
 80050d4:	f8c8 1000 	streq.w	r1, [r8]
 80050d8:	5162      	str	r2, [r4, r5]
 80050da:	604b      	str	r3, [r1, #4]
 80050dc:	4638      	mov	r0, r7
 80050de:	f104 060b 	add.w	r6, r4, #11
 80050e2:	f000 f829 	bl	8005138 <__malloc_unlock>
 80050e6:	f026 0607 	bic.w	r6, r6, #7
 80050ea:	1d23      	adds	r3, r4, #4
 80050ec:	1af2      	subs	r2, r6, r3
 80050ee:	d0ae      	beq.n	800504e <_malloc_r+0x22>
 80050f0:	1b9b      	subs	r3, r3, r6
 80050f2:	50a3      	str	r3, [r4, r2]
 80050f4:	e7ab      	b.n	800504e <_malloc_r+0x22>
 80050f6:	42a3      	cmp	r3, r4
 80050f8:	6862      	ldr	r2, [r4, #4]
 80050fa:	d1dd      	bne.n	80050b8 <_malloc_r+0x8c>
 80050fc:	f8c8 2000 	str.w	r2, [r8]
 8005100:	e7ec      	b.n	80050dc <_malloc_r+0xb0>
 8005102:	4623      	mov	r3, r4
 8005104:	6864      	ldr	r4, [r4, #4]
 8005106:	e7ac      	b.n	8005062 <_malloc_r+0x36>
 8005108:	4634      	mov	r4, r6
 800510a:	6876      	ldr	r6, [r6, #4]
 800510c:	e7b4      	b.n	8005078 <_malloc_r+0x4c>
 800510e:	4613      	mov	r3, r2
 8005110:	e7cc      	b.n	80050ac <_malloc_r+0x80>
 8005112:	230c      	movs	r3, #12
 8005114:	603b      	str	r3, [r7, #0]
 8005116:	4638      	mov	r0, r7
 8005118:	f000 f80e 	bl	8005138 <__malloc_unlock>
 800511c:	e797      	b.n	800504e <_malloc_r+0x22>
 800511e:	6025      	str	r5, [r4, #0]
 8005120:	e7dc      	b.n	80050dc <_malloc_r+0xb0>
 8005122:	605b      	str	r3, [r3, #4]
 8005124:	deff      	udf	#255	; 0xff
 8005126:	bf00      	nop
 8005128:	200014cc 	.word	0x200014cc

0800512c <__malloc_lock>:
 800512c:	4801      	ldr	r0, [pc, #4]	; (8005134 <__malloc_lock+0x8>)
 800512e:	f7ff bf0f 	b.w	8004f50 <__retarget_lock_acquire_recursive>
 8005132:	bf00      	nop
 8005134:	200014c8 	.word	0x200014c8

08005138 <__malloc_unlock>:
 8005138:	4801      	ldr	r0, [pc, #4]	; (8005140 <__malloc_unlock+0x8>)
 800513a:	f7ff bf0a 	b.w	8004f52 <__retarget_lock_release_recursive>
 800513e:	bf00      	nop
 8005140:	200014c8 	.word	0x200014c8

08005144 <__ssputs_r>:
 8005144:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005148:	688e      	ldr	r6, [r1, #8]
 800514a:	461f      	mov	r7, r3
 800514c:	42be      	cmp	r6, r7
 800514e:	680b      	ldr	r3, [r1, #0]
 8005150:	4682      	mov	sl, r0
 8005152:	460c      	mov	r4, r1
 8005154:	4690      	mov	r8, r2
 8005156:	d82c      	bhi.n	80051b2 <__ssputs_r+0x6e>
 8005158:	898a      	ldrh	r2, [r1, #12]
 800515a:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800515e:	d026      	beq.n	80051ae <__ssputs_r+0x6a>
 8005160:	6965      	ldr	r5, [r4, #20]
 8005162:	6909      	ldr	r1, [r1, #16]
 8005164:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005168:	eba3 0901 	sub.w	r9, r3, r1
 800516c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8005170:	1c7b      	adds	r3, r7, #1
 8005172:	444b      	add	r3, r9
 8005174:	106d      	asrs	r5, r5, #1
 8005176:	429d      	cmp	r5, r3
 8005178:	bf38      	it	cc
 800517a:	461d      	movcc	r5, r3
 800517c:	0553      	lsls	r3, r2, #21
 800517e:	d527      	bpl.n	80051d0 <__ssputs_r+0x8c>
 8005180:	4629      	mov	r1, r5
 8005182:	f7ff ff53 	bl	800502c <_malloc_r>
 8005186:	4606      	mov	r6, r0
 8005188:	b360      	cbz	r0, 80051e4 <__ssputs_r+0xa0>
 800518a:	6921      	ldr	r1, [r4, #16]
 800518c:	464a      	mov	r2, r9
 800518e:	f000 faeb 	bl	8005768 <memcpy>
 8005192:	89a3      	ldrh	r3, [r4, #12]
 8005194:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8005198:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800519c:	81a3      	strh	r3, [r4, #12]
 800519e:	6126      	str	r6, [r4, #16]
 80051a0:	6165      	str	r5, [r4, #20]
 80051a2:	444e      	add	r6, r9
 80051a4:	eba5 0509 	sub.w	r5, r5, r9
 80051a8:	6026      	str	r6, [r4, #0]
 80051aa:	60a5      	str	r5, [r4, #8]
 80051ac:	463e      	mov	r6, r7
 80051ae:	42be      	cmp	r6, r7
 80051b0:	d900      	bls.n	80051b4 <__ssputs_r+0x70>
 80051b2:	463e      	mov	r6, r7
 80051b4:	6820      	ldr	r0, [r4, #0]
 80051b6:	4632      	mov	r2, r6
 80051b8:	4641      	mov	r1, r8
 80051ba:	f000 faab 	bl	8005714 <memmove>
 80051be:	68a3      	ldr	r3, [r4, #8]
 80051c0:	1b9b      	subs	r3, r3, r6
 80051c2:	60a3      	str	r3, [r4, #8]
 80051c4:	6823      	ldr	r3, [r4, #0]
 80051c6:	4433      	add	r3, r6
 80051c8:	6023      	str	r3, [r4, #0]
 80051ca:	2000      	movs	r0, #0
 80051cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80051d0:	462a      	mov	r2, r5
 80051d2:	f000 fad7 	bl	8005784 <_realloc_r>
 80051d6:	4606      	mov	r6, r0
 80051d8:	2800      	cmp	r0, #0
 80051da:	d1e0      	bne.n	800519e <__ssputs_r+0x5a>
 80051dc:	6921      	ldr	r1, [r4, #16]
 80051de:	4650      	mov	r0, sl
 80051e0:	f7ff feb8 	bl	8004f54 <_free_r>
 80051e4:	230c      	movs	r3, #12
 80051e6:	f8ca 3000 	str.w	r3, [sl]
 80051ea:	89a3      	ldrh	r3, [r4, #12]
 80051ec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80051f0:	81a3      	strh	r3, [r4, #12]
 80051f2:	f04f 30ff 	mov.w	r0, #4294967295
 80051f6:	e7e9      	b.n	80051cc <__ssputs_r+0x88>

080051f8 <_svfiprintf_r>:
 80051f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80051fc:	4698      	mov	r8, r3
 80051fe:	898b      	ldrh	r3, [r1, #12]
 8005200:	061b      	lsls	r3, r3, #24
 8005202:	b09d      	sub	sp, #116	; 0x74
 8005204:	4607      	mov	r7, r0
 8005206:	460d      	mov	r5, r1
 8005208:	4614      	mov	r4, r2
 800520a:	d50e      	bpl.n	800522a <_svfiprintf_r+0x32>
 800520c:	690b      	ldr	r3, [r1, #16]
 800520e:	b963      	cbnz	r3, 800522a <_svfiprintf_r+0x32>
 8005210:	2140      	movs	r1, #64	; 0x40
 8005212:	f7ff ff0b 	bl	800502c <_malloc_r>
 8005216:	6028      	str	r0, [r5, #0]
 8005218:	6128      	str	r0, [r5, #16]
 800521a:	b920      	cbnz	r0, 8005226 <_svfiprintf_r+0x2e>
 800521c:	230c      	movs	r3, #12
 800521e:	603b      	str	r3, [r7, #0]
 8005220:	f04f 30ff 	mov.w	r0, #4294967295
 8005224:	e0d0      	b.n	80053c8 <_svfiprintf_r+0x1d0>
 8005226:	2340      	movs	r3, #64	; 0x40
 8005228:	616b      	str	r3, [r5, #20]
 800522a:	2300      	movs	r3, #0
 800522c:	9309      	str	r3, [sp, #36]	; 0x24
 800522e:	2320      	movs	r3, #32
 8005230:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8005234:	f8cd 800c 	str.w	r8, [sp, #12]
 8005238:	2330      	movs	r3, #48	; 0x30
 800523a:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 80053e0 <_svfiprintf_r+0x1e8>
 800523e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8005242:	f04f 0901 	mov.w	r9, #1
 8005246:	4623      	mov	r3, r4
 8005248:	469a      	mov	sl, r3
 800524a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800524e:	b10a      	cbz	r2, 8005254 <_svfiprintf_r+0x5c>
 8005250:	2a25      	cmp	r2, #37	; 0x25
 8005252:	d1f9      	bne.n	8005248 <_svfiprintf_r+0x50>
 8005254:	ebba 0b04 	subs.w	fp, sl, r4
 8005258:	d00b      	beq.n	8005272 <_svfiprintf_r+0x7a>
 800525a:	465b      	mov	r3, fp
 800525c:	4622      	mov	r2, r4
 800525e:	4629      	mov	r1, r5
 8005260:	4638      	mov	r0, r7
 8005262:	f7ff ff6f 	bl	8005144 <__ssputs_r>
 8005266:	3001      	adds	r0, #1
 8005268:	f000 80a9 	beq.w	80053be <_svfiprintf_r+0x1c6>
 800526c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800526e:	445a      	add	r2, fp
 8005270:	9209      	str	r2, [sp, #36]	; 0x24
 8005272:	f89a 3000 	ldrb.w	r3, [sl]
 8005276:	2b00      	cmp	r3, #0
 8005278:	f000 80a1 	beq.w	80053be <_svfiprintf_r+0x1c6>
 800527c:	2300      	movs	r3, #0
 800527e:	f04f 32ff 	mov.w	r2, #4294967295
 8005282:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005286:	f10a 0a01 	add.w	sl, sl, #1
 800528a:	9304      	str	r3, [sp, #16]
 800528c:	9307      	str	r3, [sp, #28]
 800528e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8005292:	931a      	str	r3, [sp, #104]	; 0x68
 8005294:	4654      	mov	r4, sl
 8005296:	2205      	movs	r2, #5
 8005298:	f814 1b01 	ldrb.w	r1, [r4], #1
 800529c:	4850      	ldr	r0, [pc, #320]	; (80053e0 <_svfiprintf_r+0x1e8>)
 800529e:	f7fa ff9f 	bl	80001e0 <memchr>
 80052a2:	9a04      	ldr	r2, [sp, #16]
 80052a4:	b9d8      	cbnz	r0, 80052de <_svfiprintf_r+0xe6>
 80052a6:	06d0      	lsls	r0, r2, #27
 80052a8:	bf44      	itt	mi
 80052aa:	2320      	movmi	r3, #32
 80052ac:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80052b0:	0711      	lsls	r1, r2, #28
 80052b2:	bf44      	itt	mi
 80052b4:	232b      	movmi	r3, #43	; 0x2b
 80052b6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80052ba:	f89a 3000 	ldrb.w	r3, [sl]
 80052be:	2b2a      	cmp	r3, #42	; 0x2a
 80052c0:	d015      	beq.n	80052ee <_svfiprintf_r+0xf6>
 80052c2:	9a07      	ldr	r2, [sp, #28]
 80052c4:	4654      	mov	r4, sl
 80052c6:	2000      	movs	r0, #0
 80052c8:	f04f 0c0a 	mov.w	ip, #10
 80052cc:	4621      	mov	r1, r4
 80052ce:	f811 3b01 	ldrb.w	r3, [r1], #1
 80052d2:	3b30      	subs	r3, #48	; 0x30
 80052d4:	2b09      	cmp	r3, #9
 80052d6:	d94d      	bls.n	8005374 <_svfiprintf_r+0x17c>
 80052d8:	b1b0      	cbz	r0, 8005308 <_svfiprintf_r+0x110>
 80052da:	9207      	str	r2, [sp, #28]
 80052dc:	e014      	b.n	8005308 <_svfiprintf_r+0x110>
 80052de:	eba0 0308 	sub.w	r3, r0, r8
 80052e2:	fa09 f303 	lsl.w	r3, r9, r3
 80052e6:	4313      	orrs	r3, r2
 80052e8:	9304      	str	r3, [sp, #16]
 80052ea:	46a2      	mov	sl, r4
 80052ec:	e7d2      	b.n	8005294 <_svfiprintf_r+0x9c>
 80052ee:	9b03      	ldr	r3, [sp, #12]
 80052f0:	1d19      	adds	r1, r3, #4
 80052f2:	681b      	ldr	r3, [r3, #0]
 80052f4:	9103      	str	r1, [sp, #12]
 80052f6:	2b00      	cmp	r3, #0
 80052f8:	bfbb      	ittet	lt
 80052fa:	425b      	neglt	r3, r3
 80052fc:	f042 0202 	orrlt.w	r2, r2, #2
 8005300:	9307      	strge	r3, [sp, #28]
 8005302:	9307      	strlt	r3, [sp, #28]
 8005304:	bfb8      	it	lt
 8005306:	9204      	strlt	r2, [sp, #16]
 8005308:	7823      	ldrb	r3, [r4, #0]
 800530a:	2b2e      	cmp	r3, #46	; 0x2e
 800530c:	d10c      	bne.n	8005328 <_svfiprintf_r+0x130>
 800530e:	7863      	ldrb	r3, [r4, #1]
 8005310:	2b2a      	cmp	r3, #42	; 0x2a
 8005312:	d134      	bne.n	800537e <_svfiprintf_r+0x186>
 8005314:	9b03      	ldr	r3, [sp, #12]
 8005316:	1d1a      	adds	r2, r3, #4
 8005318:	681b      	ldr	r3, [r3, #0]
 800531a:	9203      	str	r2, [sp, #12]
 800531c:	2b00      	cmp	r3, #0
 800531e:	bfb8      	it	lt
 8005320:	f04f 33ff 	movlt.w	r3, #4294967295
 8005324:	3402      	adds	r4, #2
 8005326:	9305      	str	r3, [sp, #20]
 8005328:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 80053f0 <_svfiprintf_r+0x1f8>
 800532c:	7821      	ldrb	r1, [r4, #0]
 800532e:	2203      	movs	r2, #3
 8005330:	4650      	mov	r0, sl
 8005332:	f7fa ff55 	bl	80001e0 <memchr>
 8005336:	b138      	cbz	r0, 8005348 <_svfiprintf_r+0x150>
 8005338:	9b04      	ldr	r3, [sp, #16]
 800533a:	eba0 000a 	sub.w	r0, r0, sl
 800533e:	2240      	movs	r2, #64	; 0x40
 8005340:	4082      	lsls	r2, r0
 8005342:	4313      	orrs	r3, r2
 8005344:	3401      	adds	r4, #1
 8005346:	9304      	str	r3, [sp, #16]
 8005348:	f814 1b01 	ldrb.w	r1, [r4], #1
 800534c:	4825      	ldr	r0, [pc, #148]	; (80053e4 <_svfiprintf_r+0x1ec>)
 800534e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8005352:	2206      	movs	r2, #6
 8005354:	f7fa ff44 	bl	80001e0 <memchr>
 8005358:	2800      	cmp	r0, #0
 800535a:	d038      	beq.n	80053ce <_svfiprintf_r+0x1d6>
 800535c:	4b22      	ldr	r3, [pc, #136]	; (80053e8 <_svfiprintf_r+0x1f0>)
 800535e:	bb1b      	cbnz	r3, 80053a8 <_svfiprintf_r+0x1b0>
 8005360:	9b03      	ldr	r3, [sp, #12]
 8005362:	3307      	adds	r3, #7
 8005364:	f023 0307 	bic.w	r3, r3, #7
 8005368:	3308      	adds	r3, #8
 800536a:	9303      	str	r3, [sp, #12]
 800536c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800536e:	4433      	add	r3, r6
 8005370:	9309      	str	r3, [sp, #36]	; 0x24
 8005372:	e768      	b.n	8005246 <_svfiprintf_r+0x4e>
 8005374:	fb0c 3202 	mla	r2, ip, r2, r3
 8005378:	460c      	mov	r4, r1
 800537a:	2001      	movs	r0, #1
 800537c:	e7a6      	b.n	80052cc <_svfiprintf_r+0xd4>
 800537e:	2300      	movs	r3, #0
 8005380:	3401      	adds	r4, #1
 8005382:	9305      	str	r3, [sp, #20]
 8005384:	4619      	mov	r1, r3
 8005386:	f04f 0c0a 	mov.w	ip, #10
 800538a:	4620      	mov	r0, r4
 800538c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005390:	3a30      	subs	r2, #48	; 0x30
 8005392:	2a09      	cmp	r2, #9
 8005394:	d903      	bls.n	800539e <_svfiprintf_r+0x1a6>
 8005396:	2b00      	cmp	r3, #0
 8005398:	d0c6      	beq.n	8005328 <_svfiprintf_r+0x130>
 800539a:	9105      	str	r1, [sp, #20]
 800539c:	e7c4      	b.n	8005328 <_svfiprintf_r+0x130>
 800539e:	fb0c 2101 	mla	r1, ip, r1, r2
 80053a2:	4604      	mov	r4, r0
 80053a4:	2301      	movs	r3, #1
 80053a6:	e7f0      	b.n	800538a <_svfiprintf_r+0x192>
 80053a8:	ab03      	add	r3, sp, #12
 80053aa:	9300      	str	r3, [sp, #0]
 80053ac:	462a      	mov	r2, r5
 80053ae:	4b0f      	ldr	r3, [pc, #60]	; (80053ec <_svfiprintf_r+0x1f4>)
 80053b0:	a904      	add	r1, sp, #16
 80053b2:	4638      	mov	r0, r7
 80053b4:	f3af 8000 	nop.w
 80053b8:	1c42      	adds	r2, r0, #1
 80053ba:	4606      	mov	r6, r0
 80053bc:	d1d6      	bne.n	800536c <_svfiprintf_r+0x174>
 80053be:	89ab      	ldrh	r3, [r5, #12]
 80053c0:	065b      	lsls	r3, r3, #25
 80053c2:	f53f af2d 	bmi.w	8005220 <_svfiprintf_r+0x28>
 80053c6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80053c8:	b01d      	add	sp, #116	; 0x74
 80053ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80053ce:	ab03      	add	r3, sp, #12
 80053d0:	9300      	str	r3, [sp, #0]
 80053d2:	462a      	mov	r2, r5
 80053d4:	4b05      	ldr	r3, [pc, #20]	; (80053ec <_svfiprintf_r+0x1f4>)
 80053d6:	a904      	add	r1, sp, #16
 80053d8:	4638      	mov	r0, r7
 80053da:	f000 f879 	bl	80054d0 <_printf_i>
 80053de:	e7eb      	b.n	80053b8 <_svfiprintf_r+0x1c0>
 80053e0:	0800706c 	.word	0x0800706c
 80053e4:	08007076 	.word	0x08007076
 80053e8:	00000000 	.word	0x00000000
 80053ec:	08005145 	.word	0x08005145
 80053f0:	08007072 	.word	0x08007072

080053f4 <_printf_common>:
 80053f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80053f8:	4616      	mov	r6, r2
 80053fa:	4699      	mov	r9, r3
 80053fc:	688a      	ldr	r2, [r1, #8]
 80053fe:	690b      	ldr	r3, [r1, #16]
 8005400:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8005404:	4293      	cmp	r3, r2
 8005406:	bfb8      	it	lt
 8005408:	4613      	movlt	r3, r2
 800540a:	6033      	str	r3, [r6, #0]
 800540c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8005410:	4607      	mov	r7, r0
 8005412:	460c      	mov	r4, r1
 8005414:	b10a      	cbz	r2, 800541a <_printf_common+0x26>
 8005416:	3301      	adds	r3, #1
 8005418:	6033      	str	r3, [r6, #0]
 800541a:	6823      	ldr	r3, [r4, #0]
 800541c:	0699      	lsls	r1, r3, #26
 800541e:	bf42      	ittt	mi
 8005420:	6833      	ldrmi	r3, [r6, #0]
 8005422:	3302      	addmi	r3, #2
 8005424:	6033      	strmi	r3, [r6, #0]
 8005426:	6825      	ldr	r5, [r4, #0]
 8005428:	f015 0506 	ands.w	r5, r5, #6
 800542c:	d106      	bne.n	800543c <_printf_common+0x48>
 800542e:	f104 0a19 	add.w	sl, r4, #25
 8005432:	68e3      	ldr	r3, [r4, #12]
 8005434:	6832      	ldr	r2, [r6, #0]
 8005436:	1a9b      	subs	r3, r3, r2
 8005438:	42ab      	cmp	r3, r5
 800543a:	dc26      	bgt.n	800548a <_printf_common+0x96>
 800543c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8005440:	1e13      	subs	r3, r2, #0
 8005442:	6822      	ldr	r2, [r4, #0]
 8005444:	bf18      	it	ne
 8005446:	2301      	movne	r3, #1
 8005448:	0692      	lsls	r2, r2, #26
 800544a:	d42b      	bmi.n	80054a4 <_printf_common+0xb0>
 800544c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8005450:	4649      	mov	r1, r9
 8005452:	4638      	mov	r0, r7
 8005454:	47c0      	blx	r8
 8005456:	3001      	adds	r0, #1
 8005458:	d01e      	beq.n	8005498 <_printf_common+0xa4>
 800545a:	6823      	ldr	r3, [r4, #0]
 800545c:	6922      	ldr	r2, [r4, #16]
 800545e:	f003 0306 	and.w	r3, r3, #6
 8005462:	2b04      	cmp	r3, #4
 8005464:	bf02      	ittt	eq
 8005466:	68e5      	ldreq	r5, [r4, #12]
 8005468:	6833      	ldreq	r3, [r6, #0]
 800546a:	1aed      	subeq	r5, r5, r3
 800546c:	68a3      	ldr	r3, [r4, #8]
 800546e:	bf0c      	ite	eq
 8005470:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8005474:	2500      	movne	r5, #0
 8005476:	4293      	cmp	r3, r2
 8005478:	bfc4      	itt	gt
 800547a:	1a9b      	subgt	r3, r3, r2
 800547c:	18ed      	addgt	r5, r5, r3
 800547e:	2600      	movs	r6, #0
 8005480:	341a      	adds	r4, #26
 8005482:	42b5      	cmp	r5, r6
 8005484:	d11a      	bne.n	80054bc <_printf_common+0xc8>
 8005486:	2000      	movs	r0, #0
 8005488:	e008      	b.n	800549c <_printf_common+0xa8>
 800548a:	2301      	movs	r3, #1
 800548c:	4652      	mov	r2, sl
 800548e:	4649      	mov	r1, r9
 8005490:	4638      	mov	r0, r7
 8005492:	47c0      	blx	r8
 8005494:	3001      	adds	r0, #1
 8005496:	d103      	bne.n	80054a0 <_printf_common+0xac>
 8005498:	f04f 30ff 	mov.w	r0, #4294967295
 800549c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80054a0:	3501      	adds	r5, #1
 80054a2:	e7c6      	b.n	8005432 <_printf_common+0x3e>
 80054a4:	18e1      	adds	r1, r4, r3
 80054a6:	1c5a      	adds	r2, r3, #1
 80054a8:	2030      	movs	r0, #48	; 0x30
 80054aa:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80054ae:	4422      	add	r2, r4
 80054b0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80054b4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80054b8:	3302      	adds	r3, #2
 80054ba:	e7c7      	b.n	800544c <_printf_common+0x58>
 80054bc:	2301      	movs	r3, #1
 80054be:	4622      	mov	r2, r4
 80054c0:	4649      	mov	r1, r9
 80054c2:	4638      	mov	r0, r7
 80054c4:	47c0      	blx	r8
 80054c6:	3001      	adds	r0, #1
 80054c8:	d0e6      	beq.n	8005498 <_printf_common+0xa4>
 80054ca:	3601      	adds	r6, #1
 80054cc:	e7d9      	b.n	8005482 <_printf_common+0x8e>
	...

080054d0 <_printf_i>:
 80054d0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80054d4:	7e0f      	ldrb	r7, [r1, #24]
 80054d6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80054d8:	2f78      	cmp	r7, #120	; 0x78
 80054da:	4691      	mov	r9, r2
 80054dc:	4680      	mov	r8, r0
 80054de:	460c      	mov	r4, r1
 80054e0:	469a      	mov	sl, r3
 80054e2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80054e6:	d807      	bhi.n	80054f8 <_printf_i+0x28>
 80054e8:	2f62      	cmp	r7, #98	; 0x62
 80054ea:	d80a      	bhi.n	8005502 <_printf_i+0x32>
 80054ec:	2f00      	cmp	r7, #0
 80054ee:	f000 80d4 	beq.w	800569a <_printf_i+0x1ca>
 80054f2:	2f58      	cmp	r7, #88	; 0x58
 80054f4:	f000 80c0 	beq.w	8005678 <_printf_i+0x1a8>
 80054f8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80054fc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8005500:	e03a      	b.n	8005578 <_printf_i+0xa8>
 8005502:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8005506:	2b15      	cmp	r3, #21
 8005508:	d8f6      	bhi.n	80054f8 <_printf_i+0x28>
 800550a:	a101      	add	r1, pc, #4	; (adr r1, 8005510 <_printf_i+0x40>)
 800550c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8005510:	08005569 	.word	0x08005569
 8005514:	0800557d 	.word	0x0800557d
 8005518:	080054f9 	.word	0x080054f9
 800551c:	080054f9 	.word	0x080054f9
 8005520:	080054f9 	.word	0x080054f9
 8005524:	080054f9 	.word	0x080054f9
 8005528:	0800557d 	.word	0x0800557d
 800552c:	080054f9 	.word	0x080054f9
 8005530:	080054f9 	.word	0x080054f9
 8005534:	080054f9 	.word	0x080054f9
 8005538:	080054f9 	.word	0x080054f9
 800553c:	08005681 	.word	0x08005681
 8005540:	080055a9 	.word	0x080055a9
 8005544:	0800563b 	.word	0x0800563b
 8005548:	080054f9 	.word	0x080054f9
 800554c:	080054f9 	.word	0x080054f9
 8005550:	080056a3 	.word	0x080056a3
 8005554:	080054f9 	.word	0x080054f9
 8005558:	080055a9 	.word	0x080055a9
 800555c:	080054f9 	.word	0x080054f9
 8005560:	080054f9 	.word	0x080054f9
 8005564:	08005643 	.word	0x08005643
 8005568:	682b      	ldr	r3, [r5, #0]
 800556a:	1d1a      	adds	r2, r3, #4
 800556c:	681b      	ldr	r3, [r3, #0]
 800556e:	602a      	str	r2, [r5, #0]
 8005570:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005574:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8005578:	2301      	movs	r3, #1
 800557a:	e09f      	b.n	80056bc <_printf_i+0x1ec>
 800557c:	6820      	ldr	r0, [r4, #0]
 800557e:	682b      	ldr	r3, [r5, #0]
 8005580:	0607      	lsls	r7, r0, #24
 8005582:	f103 0104 	add.w	r1, r3, #4
 8005586:	6029      	str	r1, [r5, #0]
 8005588:	d501      	bpl.n	800558e <_printf_i+0xbe>
 800558a:	681e      	ldr	r6, [r3, #0]
 800558c:	e003      	b.n	8005596 <_printf_i+0xc6>
 800558e:	0646      	lsls	r6, r0, #25
 8005590:	d5fb      	bpl.n	800558a <_printf_i+0xba>
 8005592:	f9b3 6000 	ldrsh.w	r6, [r3]
 8005596:	2e00      	cmp	r6, #0
 8005598:	da03      	bge.n	80055a2 <_printf_i+0xd2>
 800559a:	232d      	movs	r3, #45	; 0x2d
 800559c:	4276      	negs	r6, r6
 800559e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80055a2:	485a      	ldr	r0, [pc, #360]	; (800570c <_printf_i+0x23c>)
 80055a4:	230a      	movs	r3, #10
 80055a6:	e012      	b.n	80055ce <_printf_i+0xfe>
 80055a8:	682b      	ldr	r3, [r5, #0]
 80055aa:	6820      	ldr	r0, [r4, #0]
 80055ac:	1d19      	adds	r1, r3, #4
 80055ae:	6029      	str	r1, [r5, #0]
 80055b0:	0605      	lsls	r5, r0, #24
 80055b2:	d501      	bpl.n	80055b8 <_printf_i+0xe8>
 80055b4:	681e      	ldr	r6, [r3, #0]
 80055b6:	e002      	b.n	80055be <_printf_i+0xee>
 80055b8:	0641      	lsls	r1, r0, #25
 80055ba:	d5fb      	bpl.n	80055b4 <_printf_i+0xe4>
 80055bc:	881e      	ldrh	r6, [r3, #0]
 80055be:	4853      	ldr	r0, [pc, #332]	; (800570c <_printf_i+0x23c>)
 80055c0:	2f6f      	cmp	r7, #111	; 0x6f
 80055c2:	bf0c      	ite	eq
 80055c4:	2308      	moveq	r3, #8
 80055c6:	230a      	movne	r3, #10
 80055c8:	2100      	movs	r1, #0
 80055ca:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80055ce:	6865      	ldr	r5, [r4, #4]
 80055d0:	60a5      	str	r5, [r4, #8]
 80055d2:	2d00      	cmp	r5, #0
 80055d4:	bfa2      	ittt	ge
 80055d6:	6821      	ldrge	r1, [r4, #0]
 80055d8:	f021 0104 	bicge.w	r1, r1, #4
 80055dc:	6021      	strge	r1, [r4, #0]
 80055de:	b90e      	cbnz	r6, 80055e4 <_printf_i+0x114>
 80055e0:	2d00      	cmp	r5, #0
 80055e2:	d04b      	beq.n	800567c <_printf_i+0x1ac>
 80055e4:	4615      	mov	r5, r2
 80055e6:	fbb6 f1f3 	udiv	r1, r6, r3
 80055ea:	fb03 6711 	mls	r7, r3, r1, r6
 80055ee:	5dc7      	ldrb	r7, [r0, r7]
 80055f0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80055f4:	4637      	mov	r7, r6
 80055f6:	42bb      	cmp	r3, r7
 80055f8:	460e      	mov	r6, r1
 80055fa:	d9f4      	bls.n	80055e6 <_printf_i+0x116>
 80055fc:	2b08      	cmp	r3, #8
 80055fe:	d10b      	bne.n	8005618 <_printf_i+0x148>
 8005600:	6823      	ldr	r3, [r4, #0]
 8005602:	07de      	lsls	r6, r3, #31
 8005604:	d508      	bpl.n	8005618 <_printf_i+0x148>
 8005606:	6923      	ldr	r3, [r4, #16]
 8005608:	6861      	ldr	r1, [r4, #4]
 800560a:	4299      	cmp	r1, r3
 800560c:	bfde      	ittt	le
 800560e:	2330      	movle	r3, #48	; 0x30
 8005610:	f805 3c01 	strble.w	r3, [r5, #-1]
 8005614:	f105 35ff 	addle.w	r5, r5, #4294967295
 8005618:	1b52      	subs	r2, r2, r5
 800561a:	6122      	str	r2, [r4, #16]
 800561c:	f8cd a000 	str.w	sl, [sp]
 8005620:	464b      	mov	r3, r9
 8005622:	aa03      	add	r2, sp, #12
 8005624:	4621      	mov	r1, r4
 8005626:	4640      	mov	r0, r8
 8005628:	f7ff fee4 	bl	80053f4 <_printf_common>
 800562c:	3001      	adds	r0, #1
 800562e:	d14a      	bne.n	80056c6 <_printf_i+0x1f6>
 8005630:	f04f 30ff 	mov.w	r0, #4294967295
 8005634:	b004      	add	sp, #16
 8005636:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800563a:	6823      	ldr	r3, [r4, #0]
 800563c:	f043 0320 	orr.w	r3, r3, #32
 8005640:	6023      	str	r3, [r4, #0]
 8005642:	4833      	ldr	r0, [pc, #204]	; (8005710 <_printf_i+0x240>)
 8005644:	2778      	movs	r7, #120	; 0x78
 8005646:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800564a:	6823      	ldr	r3, [r4, #0]
 800564c:	6829      	ldr	r1, [r5, #0]
 800564e:	061f      	lsls	r7, r3, #24
 8005650:	f851 6b04 	ldr.w	r6, [r1], #4
 8005654:	d402      	bmi.n	800565c <_printf_i+0x18c>
 8005656:	065f      	lsls	r7, r3, #25
 8005658:	bf48      	it	mi
 800565a:	b2b6      	uxthmi	r6, r6
 800565c:	07df      	lsls	r7, r3, #31
 800565e:	bf48      	it	mi
 8005660:	f043 0320 	orrmi.w	r3, r3, #32
 8005664:	6029      	str	r1, [r5, #0]
 8005666:	bf48      	it	mi
 8005668:	6023      	strmi	r3, [r4, #0]
 800566a:	b91e      	cbnz	r6, 8005674 <_printf_i+0x1a4>
 800566c:	6823      	ldr	r3, [r4, #0]
 800566e:	f023 0320 	bic.w	r3, r3, #32
 8005672:	6023      	str	r3, [r4, #0]
 8005674:	2310      	movs	r3, #16
 8005676:	e7a7      	b.n	80055c8 <_printf_i+0xf8>
 8005678:	4824      	ldr	r0, [pc, #144]	; (800570c <_printf_i+0x23c>)
 800567a:	e7e4      	b.n	8005646 <_printf_i+0x176>
 800567c:	4615      	mov	r5, r2
 800567e:	e7bd      	b.n	80055fc <_printf_i+0x12c>
 8005680:	682b      	ldr	r3, [r5, #0]
 8005682:	6826      	ldr	r6, [r4, #0]
 8005684:	6961      	ldr	r1, [r4, #20]
 8005686:	1d18      	adds	r0, r3, #4
 8005688:	6028      	str	r0, [r5, #0]
 800568a:	0635      	lsls	r5, r6, #24
 800568c:	681b      	ldr	r3, [r3, #0]
 800568e:	d501      	bpl.n	8005694 <_printf_i+0x1c4>
 8005690:	6019      	str	r1, [r3, #0]
 8005692:	e002      	b.n	800569a <_printf_i+0x1ca>
 8005694:	0670      	lsls	r0, r6, #25
 8005696:	d5fb      	bpl.n	8005690 <_printf_i+0x1c0>
 8005698:	8019      	strh	r1, [r3, #0]
 800569a:	2300      	movs	r3, #0
 800569c:	6123      	str	r3, [r4, #16]
 800569e:	4615      	mov	r5, r2
 80056a0:	e7bc      	b.n	800561c <_printf_i+0x14c>
 80056a2:	682b      	ldr	r3, [r5, #0]
 80056a4:	1d1a      	adds	r2, r3, #4
 80056a6:	602a      	str	r2, [r5, #0]
 80056a8:	681d      	ldr	r5, [r3, #0]
 80056aa:	6862      	ldr	r2, [r4, #4]
 80056ac:	2100      	movs	r1, #0
 80056ae:	4628      	mov	r0, r5
 80056b0:	f7fa fd96 	bl	80001e0 <memchr>
 80056b4:	b108      	cbz	r0, 80056ba <_printf_i+0x1ea>
 80056b6:	1b40      	subs	r0, r0, r5
 80056b8:	6060      	str	r0, [r4, #4]
 80056ba:	6863      	ldr	r3, [r4, #4]
 80056bc:	6123      	str	r3, [r4, #16]
 80056be:	2300      	movs	r3, #0
 80056c0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80056c4:	e7aa      	b.n	800561c <_printf_i+0x14c>
 80056c6:	6923      	ldr	r3, [r4, #16]
 80056c8:	462a      	mov	r2, r5
 80056ca:	4649      	mov	r1, r9
 80056cc:	4640      	mov	r0, r8
 80056ce:	47d0      	blx	sl
 80056d0:	3001      	adds	r0, #1
 80056d2:	d0ad      	beq.n	8005630 <_printf_i+0x160>
 80056d4:	6823      	ldr	r3, [r4, #0]
 80056d6:	079b      	lsls	r3, r3, #30
 80056d8:	d413      	bmi.n	8005702 <_printf_i+0x232>
 80056da:	68e0      	ldr	r0, [r4, #12]
 80056dc:	9b03      	ldr	r3, [sp, #12]
 80056de:	4298      	cmp	r0, r3
 80056e0:	bfb8      	it	lt
 80056e2:	4618      	movlt	r0, r3
 80056e4:	e7a6      	b.n	8005634 <_printf_i+0x164>
 80056e6:	2301      	movs	r3, #1
 80056e8:	4632      	mov	r2, r6
 80056ea:	4649      	mov	r1, r9
 80056ec:	4640      	mov	r0, r8
 80056ee:	47d0      	blx	sl
 80056f0:	3001      	adds	r0, #1
 80056f2:	d09d      	beq.n	8005630 <_printf_i+0x160>
 80056f4:	3501      	adds	r5, #1
 80056f6:	68e3      	ldr	r3, [r4, #12]
 80056f8:	9903      	ldr	r1, [sp, #12]
 80056fa:	1a5b      	subs	r3, r3, r1
 80056fc:	42ab      	cmp	r3, r5
 80056fe:	dcf2      	bgt.n	80056e6 <_printf_i+0x216>
 8005700:	e7eb      	b.n	80056da <_printf_i+0x20a>
 8005702:	2500      	movs	r5, #0
 8005704:	f104 0619 	add.w	r6, r4, #25
 8005708:	e7f5      	b.n	80056f6 <_printf_i+0x226>
 800570a:	bf00      	nop
 800570c:	0800707d 	.word	0x0800707d
 8005710:	0800708e 	.word	0x0800708e

08005714 <memmove>:
 8005714:	4288      	cmp	r0, r1
 8005716:	b510      	push	{r4, lr}
 8005718:	eb01 0402 	add.w	r4, r1, r2
 800571c:	d902      	bls.n	8005724 <memmove+0x10>
 800571e:	4284      	cmp	r4, r0
 8005720:	4623      	mov	r3, r4
 8005722:	d807      	bhi.n	8005734 <memmove+0x20>
 8005724:	1e43      	subs	r3, r0, #1
 8005726:	42a1      	cmp	r1, r4
 8005728:	d008      	beq.n	800573c <memmove+0x28>
 800572a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800572e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8005732:	e7f8      	b.n	8005726 <memmove+0x12>
 8005734:	4402      	add	r2, r0
 8005736:	4601      	mov	r1, r0
 8005738:	428a      	cmp	r2, r1
 800573a:	d100      	bne.n	800573e <memmove+0x2a>
 800573c:	bd10      	pop	{r4, pc}
 800573e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005742:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8005746:	e7f7      	b.n	8005738 <memmove+0x24>

08005748 <_sbrk_r>:
 8005748:	b538      	push	{r3, r4, r5, lr}
 800574a:	4d06      	ldr	r5, [pc, #24]	; (8005764 <_sbrk_r+0x1c>)
 800574c:	2300      	movs	r3, #0
 800574e:	4604      	mov	r4, r0
 8005750:	4608      	mov	r0, r1
 8005752:	602b      	str	r3, [r5, #0]
 8005754:	f7fb fd8e 	bl	8001274 <_sbrk>
 8005758:	1c43      	adds	r3, r0, #1
 800575a:	d102      	bne.n	8005762 <_sbrk_r+0x1a>
 800575c:	682b      	ldr	r3, [r5, #0]
 800575e:	b103      	cbz	r3, 8005762 <_sbrk_r+0x1a>
 8005760:	6023      	str	r3, [r4, #0]
 8005762:	bd38      	pop	{r3, r4, r5, pc}
 8005764:	200014c4 	.word	0x200014c4

08005768 <memcpy>:
 8005768:	440a      	add	r2, r1
 800576a:	4291      	cmp	r1, r2
 800576c:	f100 33ff 	add.w	r3, r0, #4294967295
 8005770:	d100      	bne.n	8005774 <memcpy+0xc>
 8005772:	4770      	bx	lr
 8005774:	b510      	push	{r4, lr}
 8005776:	f811 4b01 	ldrb.w	r4, [r1], #1
 800577a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800577e:	4291      	cmp	r1, r2
 8005780:	d1f9      	bne.n	8005776 <memcpy+0xe>
 8005782:	bd10      	pop	{r4, pc}

08005784 <_realloc_r>:
 8005784:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005788:	4680      	mov	r8, r0
 800578a:	4614      	mov	r4, r2
 800578c:	460e      	mov	r6, r1
 800578e:	b921      	cbnz	r1, 800579a <_realloc_r+0x16>
 8005790:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005794:	4611      	mov	r1, r2
 8005796:	f7ff bc49 	b.w	800502c <_malloc_r>
 800579a:	b92a      	cbnz	r2, 80057a8 <_realloc_r+0x24>
 800579c:	f7ff fbda 	bl	8004f54 <_free_r>
 80057a0:	4625      	mov	r5, r4
 80057a2:	4628      	mov	r0, r5
 80057a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80057a8:	f000 f81b 	bl	80057e2 <_malloc_usable_size_r>
 80057ac:	4284      	cmp	r4, r0
 80057ae:	4607      	mov	r7, r0
 80057b0:	d802      	bhi.n	80057b8 <_realloc_r+0x34>
 80057b2:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80057b6:	d812      	bhi.n	80057de <_realloc_r+0x5a>
 80057b8:	4621      	mov	r1, r4
 80057ba:	4640      	mov	r0, r8
 80057bc:	f7ff fc36 	bl	800502c <_malloc_r>
 80057c0:	4605      	mov	r5, r0
 80057c2:	2800      	cmp	r0, #0
 80057c4:	d0ed      	beq.n	80057a2 <_realloc_r+0x1e>
 80057c6:	42bc      	cmp	r4, r7
 80057c8:	4622      	mov	r2, r4
 80057ca:	4631      	mov	r1, r6
 80057cc:	bf28      	it	cs
 80057ce:	463a      	movcs	r2, r7
 80057d0:	f7ff ffca 	bl	8005768 <memcpy>
 80057d4:	4631      	mov	r1, r6
 80057d6:	4640      	mov	r0, r8
 80057d8:	f7ff fbbc 	bl	8004f54 <_free_r>
 80057dc:	e7e1      	b.n	80057a2 <_realloc_r+0x1e>
 80057de:	4635      	mov	r5, r6
 80057e0:	e7df      	b.n	80057a2 <_realloc_r+0x1e>

080057e2 <_malloc_usable_size_r>:
 80057e2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80057e6:	1f18      	subs	r0, r3, #4
 80057e8:	2b00      	cmp	r3, #0
 80057ea:	bfbc      	itt	lt
 80057ec:	580b      	ldrlt	r3, [r1, r0]
 80057ee:	18c0      	addlt	r0, r0, r3
 80057f0:	4770      	bx	lr
	...

080057f4 <_init>:
 80057f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80057f6:	bf00      	nop
 80057f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80057fa:	bc08      	pop	{r3}
 80057fc:	469e      	mov	lr, r3
 80057fe:	4770      	bx	lr

08005800 <_fini>:
 8005800:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005802:	bf00      	nop
 8005804:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005806:	bc08      	pop	{r3}
 8005808:	469e      	mov	lr, r3
 800580a:	4770      	bx	lr
